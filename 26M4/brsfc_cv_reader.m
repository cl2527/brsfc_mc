%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                           %
% Copyright (C) 2011 Weil Cornell Medical College           %
%                                                           %
%  Author: Pascal Spincemaille                              %
%                                                           %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [t, outpos] = brsfc_cv_reader(chr, inpos, type, count)
  [t, outpos] = eval(['read_' type '(chr, inpos, count);']);

function [t, outpos] = read_int(chr, inpos, count)
  outpos = inpos + count*4;
  t = typecast(chr(inpos:outpos-1), 'int32');

function [t, outpos] = read_int32_t(chr, inpos, count)
  outpos = inpos + count*4;
  t = typecast(chr(inpos:outpos-1), 'int32');

function [t, outpos] = read_long_long_int(chr, inpos, count)
  outpos = inpos + count*8;
  t = typecast(chr(inpos:outpos-1), 'int64');

function [t, outpos] = read_unsigned_char(chr, inpos, count)
  outpos = inpos + count*1;
  t = typecast(chr(inpos:outpos-1), 'uchar');

function [t, outpos] = read_signed_char(chr, inpos, count)
  outpos = inpos + count*1;
  t = typecast(chr(inpos:outpos-1), 'schar');

function [t, outpos] = read_double(chr, inpos, count)
  outpos = inpos + count*8;
  t = typecast(chr(inpos:outpos-1), 'float64');

function [t, outpos] = read_short(chr, inpos, count)
  outpos = inpos + count*2;
  t = typecast(chr(inpos:outpos-1), 'int16');

function [t, outpos] = read_float(chr, inpos, count)
  outpos = inpos + count*4;
  t = typecast(chr(inpos:outpos-1), 'float32');

function [t, outpos] = read_unsigned_long_long_int(chr, inpos, count)
  outpos = inpos + count*8;
  t = typecast(chr(inpos:outpos-1), 'uint64');

function [t, outpos] = read_long(chr, inpos, count)
  outpos = inpos + count*8;
  t = typecast(chr(inpos:outpos-1), 'int32');

function [t, outpos] = read_unsigned_long_int(chr, inpos, count)
  outpos = inpos + count*8;
  t = typecast(chr(inpos:outpos-1), 'uint32');

function [t, outpos] = read_unsigned_short(chr, inpos, count)
  outpos = inpos + count*2;
  t = typecast(chr(inpos:outpos-1), 'uint16');

function [t, outpos] = read_unsigned_long(chr, inpos, count)
  outpos = inpos + count*8;
  t = typecast(chr(inpos:outpos-1), 'uint32');

function [t, outpos] = read_long_int(chr, inpos, count)
  outpos = inpos + count*8;
  t = typecast(chr(inpos:outpos-1), 'int32');

function [t, outpos] = read_int16_t(chr, inpos, count)
  outpos = inpos + count*2;
  t = typecast(chr(inpos:outpos-1), 'int16');

function [t, outpos] = read_unsigned_int(chr, inpos, count)
  outpos = inpos + count*4;
  t = typecast(chr(inpos:outpos-1), 'uint32');

function [t, outpos] = read_unsigned_short_int(chr, inpos, count)
  outpos = inpos + count*2;
  t = typecast(chr(inpos:outpos-1), 'uint16');

function [t, outpos] = read_u_int16_t(chr, inpos, count)
  outpos = inpos + count*2;
  t = typecast(chr(inpos:outpos-1), 'uint16');

function [t, outpos] = read_char(chr, inpos, count)
  outpos = inpos + count*1;
  t = char(chr(inpos:outpos-1))';

function [t, outpos] = read_signed_short_int(chr, inpos, count)
  outpos = inpos + count*2;
  t = typecast(chr(inpos:outpos-1), 'int16');

function [t, outpos] = read_u_int32_t(chr, inpos, count)
  outpos = inpos + count*4;
  t = typecast(chr(inpos:outpos-1), 'uint32');

function [t, outpos] = read_short_int(chr, inpos, count)
  outpos = inpos + count*2;
  t = typecast(chr(inpos:outpos-1), 'int16');

function [t, outpos] = read_signed_int(chr, inpos, count)
  outpos = inpos + count*4;
  t = typecast(chr(inpos:outpos-1), 'int32');

function [t, outpos] = read_ptrdiff_t(chr, inpos, count)
  [t, outpos] = read_long_int(chr, inpos, count);

function [t, outpos] = read_size_t(chr, inpos, count)
  [t, outpos] = read_long_unsigned_int(chr, inpos, count);

function [t, outpos] = read_wchar_t(chr, inpos, count)
  [t, outpos] = read_int(chr, inpos, count);

function [t, outpos] = read_int8_t(chr, inpos, count)
  [t, outpos] = read_signed_char(chr, inpos, count);

function [t, outpos] = read_uint8_t(chr, inpos, count)
  [t, outpos] = read_unsigned_char(chr, inpos, count);

function [t, outpos] = read_uint16_t(chr, inpos, count)
  [t, outpos] = read_unsigned_short_int(chr, inpos, count);

function [t, outpos] = read_uint32_t(chr, inpos, count)
  [t, outpos] = read_unsigned_int(chr, inpos, count);

function [t, outpos] = read_uint64_t(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_int_least8_t(chr, inpos, count)
  [t, outpos] = read_signed_char(chr, inpos, count);

function [t, outpos] = read_int_least16_t(chr, inpos, count)
  [t, outpos] = read_short_int(chr, inpos, count);

function [t, outpos] = read_int_least32_t(chr, inpos, count)
  [t, outpos] = read_int(chr, inpos, count);

function [t, outpos] = read_int_least64_t(chr, inpos, count)
  [t, outpos] = read_long_int(chr, inpos, count);

function [t, outpos] = read_uint_least8_t(chr, inpos, count)
  [t, outpos] = read_unsigned_char(chr, inpos, count);

function [t, outpos] = read_uint_least16_t(chr, inpos, count)
  [t, outpos] = read_unsigned_short_int(chr, inpos, count);

function [t, outpos] = read_uint_least32_t(chr, inpos, count)
  [t, outpos] = read_unsigned_int(chr, inpos, count);

function [t, outpos] = read_uint_least64_t(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_int_fast8_t(chr, inpos, count)
  [t, outpos] = read_signed_char(chr, inpos, count);

function [t, outpos] = read_int_fast16_t(chr, inpos, count)
  [t, outpos] = read_long_int(chr, inpos, count);

function [t, outpos] = read_int_fast32_t(chr, inpos, count)
  [t, outpos] = read_long_int(chr, inpos, count);

function [t, outpos] = read_int_fast64_t(chr, inpos, count)
  [t, outpos] = read_long_int(chr, inpos, count);

function [t, outpos] = read_uint_fast8_t(chr, inpos, count)
  [t, outpos] = read_unsigned_char(chr, inpos, count);

function [t, outpos] = read_uint_fast16_t(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_uint_fast32_t(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_uint_fast64_t(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_intptr_t(chr, inpos, count)
  [t, outpos] = read_long_int(chr, inpos, count);

function [t, outpos] = read_uintptr_t(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_intmax_t(chr, inpos, count)
  [t, outpos] = read_long_int(chr, inpos, count);

function [t, outpos] = read_uintmax_t(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_s8(chr, inpos, count)
  [t, outpos] = read_int8_t(chr, inpos, count);

function [t, outpos] = read_n8(chr, inpos, count)
  [t, outpos] = read_uint8_t(chr, inpos, count);

function [t, outpos] = read_s16(chr, inpos, count)
  [t, outpos] = read_int16_t(chr, inpos, count);

function [t, outpos] = read_n16(chr, inpos, count)
  [t, outpos] = read_uint16_t(chr, inpos, count);

function [t, outpos] = read_s64(chr, inpos, count)
  [t, outpos] = read_int64_t(chr, inpos, count);

function [t, outpos] = read_n64(chr, inpos, count)
  [t, outpos] = read_uint64_t(chr, inpos, count);

function [t, outpos] = read_f32(chr, inpos, count)
  [t, outpos] = read_float(chr, inpos, count);

function [t, outpos] = read_f64(chr, inpos, count)
  [t, outpos] = read_double(chr, inpos, count);

function [t, outpos] = read_ulong(chr, inpos, count)
  [t, outpos] = read_unsigned_long_int(chr, inpos, count);

function [t, outpos] = read_ushort(chr, inpos, count)
  [t, outpos] = read_unsigned_short_int(chr, inpos, count);

function [t, outpos] = read_uint(chr, inpos, count)
  [t, outpos] = read_unsigned_int(chr, inpos, count);

function [t, outpos] = read_struct_timespec(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.tv_nsec = read_long_int(chr2(9:16,:), 1, count);

function [t, outpos] = read_power_monitor_table_t(chr, inpos, count)
  outpos = inpos + 4 * count;
  chr2=reshape(chr(inpos:inpos+count*4-1), 4, []);
  t.pmPredictSAR = read_s16(chr2(1:2,:), 1, count);
  t.pmContinuousUpdate = read_s16(chr2(3:4,:), 1, count);

function [t, outpos] = read_entry_point_table_t(chr, inpos, count)
  outpos = inpos + 120 * count;
  chr2=reshape(chr(inpos:inpos+count*120-1), 120, []);
  t.epname = read_char(chr2(1:16,:), 1, count*16);
  t.epamph = read_n32(chr2(17:20,:), 1, count);
  t.epampb = read_n32(chr2(21:24,:), 1, count);
  t.epamps = read_n32(chr2(25:28,:), 1, count);
  t.epampc = read_n32(chr2(29:32,:), 1, count);
  t.epwidthh = read_n32(chr2(33:36,:), 1, count);
  t.epwidthb = read_n32(chr2(37:40,:), 1, count);
  t.epwidths = read_n32(chr2(41:44,:), 1, count);
  t.epwidthc = read_n32(chr2(45:48,:), 1, count);
  t.epdcycleh = read_n32(chr2(49:52,:), 1, count);
  t.epdcycleb = read_n32(chr2(53:56,:), 1, count);
  t.epdcycles = read_n32(chr2(57:60,:), 1, count);
  t.epdcyclec = read_n32(chr2(61:64,:), 1, count);
  t.epsmode = read_n8(chr2(65:65,:), 1, count);
  t.epfilter = read_n8(chr2(66:66,:), 1, count);
  t.eprcvrband = read_n8(chr2(67:67,:), 1, count);
  t.eprcvrinput = read_n8(chr2(68:68,:), 1, count);
  t.eprcvrbias = read_n8(chr2(69:69,:), 1, count);
  t.eptrdriver = read_n8(chr2(70:70,:), 1, count);
  t.epfastrec = read_n8(chr2(71:71,:), 1, count);
  t.epxmtadd = read_s16(chr2(73:74,:), 1, count);
  t.epprexres = read_s16(chr2(75:76,:), 1, count);
  t.epshldctrl = read_s16(chr2(77:78,:), 1, count);
  t.epgradcoil = read_s16(chr2(79:80,:), 1, count);
  t.eppkpower = read_n32(chr2(81:84,:), 1, count);
  t.epseqtime = read_n32(chr2(85:88,:), 1, count);
  t.epstartrec = read_s16(chr2(89:90,:), 1, count);
  t.ependrec = read_s16(chr2(91:92,:), 1, count);
  t.eppmtable = read_power_monitor_table_t(chr2(93:96,:), 1, count);
  t.epGeneralBankIndex = read_n8(chr2(97:97,:), 1, count);
  t.epGeneralBankIndex2 = read_n8(chr2(98:98,:), 1, count);
  t.epR1BankIndex = read_n8(chr2(99:99,:), 1, count);
  t.epNbTransmitSelect = read_n8(chr2(100:100,:), 1, count);
  t.epBbTransmitSelect = read_n8(chr2(101:101,:), 1, count);
  t.epMnsConverterSelect = read_n32(chr2(105:108,:), 1, count);
  t.epRxCoilType = read_n32(chr2(109:112,:), 1, count);
  t.epxgd_cableirmsmax = read_f32(chr2(113:116,:), 1, count);
  t.epcoilAC_powersum = read_f32(chr2(117:120,:), 1, count);

function [t, outpos] = read_ENTRY_POINT_TABLE(chr, inpos, count)
  [t, outpos] = read_entry_point_table_t(chr, inpos, count);

function [t, outpos] = read_ENTRY_PNT_TABLE(chr, inpos, count)
  [t, outpos] = read_entry_point_table_t(chr, inpos, count);

function [t, outpos] = read_CHAR(chr, inpos, count)
  [t, outpos] = read_char(chr, inpos, count);

function [t, outpos] = read_SHORT(chr, inpos, count)
  [t, outpos] = read_s16(chr, inpos, count);

function [t, outpos] = read_INT(chr, inpos, count)
  [t, outpos] = read_int(chr, inpos, count);

function [t, outpos] = read_LONG(chr, inpos, count)
  [t, outpos] = read_INT(chr, inpos, count);

function [t, outpos] = read_FLOAT(chr, inpos, count)
  [t, outpos] = read_f32(chr, inpos, count);

function [t, outpos] = read_DOUBLE(chr, inpos, count)
  [t, outpos] = read_f64(chr, inpos, count);

function [t, outpos] = read_UCHAR(chr, inpos, count)
  [t, outpos] = read_n8(chr, inpos, count);

function [t, outpos] = read_USHORT(chr, inpos, count)
  [t, outpos] = read_n16(chr, inpos, count);

function [t, outpos] = read_UINT(chr, inpos, count)
  [t, outpos] = read_unsigned_int(chr, inpos, count);

function [t, outpos] = read_ULONG(chr, inpos, count)
  [t, outpos] = read_UINT(chr, inpos, count);

function [t, outpos] = read_STATUS(chr, inpos, count)
  [t, outpos] = read_int(chr, inpos, count);

function [t, outpos] = read_t_axis(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_t_fopen_mode(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read__G_fpos64_t(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);

function [t, outpos] = read_struct__IO_marker(chr, inpos, count)
  outpos = inpos + 24 * count;
  chr2=reshape(chr(inpos:inpos+count*24-1), 24, []);
  t.T_pos = read_int(chr2(17:20,:), 1, count);

function [t, outpos] = read_datavalue(chr, inpos, count)
  [t, outpos] = read_float(chr, inpos, count);

function [t, outpos] = read_GRADIENT_COIL_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_PSD_BOARD_TYPE_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_GRADIENT_COIL_METHOD_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_POWER_IN_HEAT_CALC_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_WF_HARDWARE_TYPE(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_HW_DIRECTION(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_SSP_S_ATTRIB(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_TYPDAB_PACKETS(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_TYPACQ_PASS(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_WF_PROCESSOR(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_WF_HW_WAVEFORM_PTR(chr, inpos, count)
  [t, outpos] = read_long(chr, inpos, count);

function [t, outpos] = read_WF_HW_INSTR_PTR(chr, inpos, count)
  [t, outpos] = read_long(chr, inpos, count);

function [t, outpos] = read_WF_INSTR_HDR(chr, inpos, count)
  outpos = inpos + 64 * count;
  chr2=reshape(chr(inpos:inpos+count*64-1), 64, []);
  t.wf_instr_ptr = read_WF_HW_INSTR_PTR(chr2(9:16,:), 1, count);
  t.amplitude = read_long(chr2(17:24,:), 1, count);
  t.period = read_long(chr2(25:32,:), 1, count);
  t.start = read_long(chr2(33:40,:), 1, count);
  t.end = read_long(chr2(41:48,:), 1, count);
  t.entry_group = read_long(chr2(49:56,:), 1, count);

function [t, outpos] = read_CONST_EXT(chr, inpos, count)
  outpos = inpos + 2 * count;
  chr2=reshape(chr(inpos:inpos+count*2-1), 2, []);
  t.amplitude = read_short(chr2(1:2,:), 1, count);

function [t, outpos] = read_HADAMARD_EXT(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.amplitude = read_short(chr2(1:2,:), 1, count);
  t.separation = read_float(chr2(5:8,:), 1, count);
  t.nsinc_cycles = read_float(chr2(9:12,:), 1, count);
  t.alpha = read_float(chr2(13:16,:), 1, count);

function [t, outpos] = read_RAMP_EXT(chr, inpos, count)
  outpos = inpos + 4 * count;
  chr2=reshape(chr(inpos:inpos+count*4-1), 4, []);
  t.start_amplitude = read_short(chr2(1:2,:), 1, count);
  t.end_amplitude = read_short(chr2(3:4,:), 1, count);

function [t, outpos] = read_SINC_EXT(chr, inpos, count)
  outpos = inpos + 12 * count;
  chr2=reshape(chr(inpos:inpos+count*12-1), 12, []);
  t.amplitude = read_short(chr2(1:2,:), 1, count);
  t.nsinc_cycles = read_float(chr2(5:8,:), 1, count);
  t.alpha = read_float(chr2(9:12,:), 1, count);

function [t, outpos] = read_SINUSOID_EXT(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.amplitude = read_short(chr2(1:2,:), 1, count);
  t.start_phase = read_float(chr2(5:8,:), 1, count);
  t.phase_length = read_float(chr2(9:12,:), 1, count);
  t.offset = read_short(chr2(13:14,:), 1, count);

function [t, outpos] = read_WF_PULSE_EXT(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.constext = read_CONST_EXT(chr2(1:2,:), 1, count);
  t.hadamard = read_HADAMARD_EXT(chr2(1:16,:), 1, count);
  t.ramp = read_RAMP_EXT(chr2(1:4,:), 1, count);
  t.sinc = read_SINC_EXT(chr2(1:12,:), 1, count);
  t.sinusoid = read_SINUSOID_EXT(chr2(1:16,:), 1, count);

function [t, outpos] = read_WF_PULSE_TYPES(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_WF_PGMTAG(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_WF_PGMREUSE(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_WF_PULSE(chr, inpos, count)
  outpos = inpos + 112 * count;
  chr2=reshape(chr(inpos:inpos+count*112-1), 112, []);
  t.ninsts = read_long(chr2(9:16,:), 1, count);
  t.wave_addr = read_WF_HW_WAVEFORM_PTR(chr2(17:24,:), 1, count);
  t.board_type = read_int(chr2(25:28,:), 1, count);
  t.reusep = read_WF_PGMREUSE(chr2(29:32,:), 1, count);
  t.tag = read_WF_PGMTAG(chr2(33:36,:), 1, count);
  t.addtag = read_long(chr2(41:48,:), 1, count);
  t.id = read_int(chr2(49:52,:), 1, count);
  t.ctrlfield = read_long(chr2(57:64,:), 1, count);
  t.wavegen_type = read_WF_PROCESSOR(chr2(81:84,:), 1, count);
  t.type = read_WF_PULSE_TYPES(chr2(85:88,:), 1, count);
  t.resolution = read_short(chr2(89:90,:), 1, count);

function [t, outpos] = read_WF_INSTR_QUEUE(chr, inpos, count)
  outpos = inpos + 32 * count;
  chr2=reshape(chr(inpos:inpos+count*32-1), 32, []);

function [t, outpos] = read_SEQUENCE_ENTRIES(chr, inpos, count)
  [t, outpos] = read_long(chr, inpos, count*(9));

function [t, outpos] = read_SEQUENCE_LIST(chr, inpos, count)
  outpos = inpos + 32 * count;
  chr2=reshape(chr(inpos:inpos+count*32-1), 32, []);
  t.time = read_long(chr2(17:24,:), 1, count);

function [t, outpos] = read_exciterSelection(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_receiverSelection(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_demodSelection(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_navSelection(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_struct_EXT_CERD_PARAMS(chr, inpos, count)
  outpos = inpos + 8 * count;
  chr2=reshape(chr(inpos:inpos+count*8-1), 8, []);
  t.alg = read_s32(chr2(1:4,:), 1, count);
  t.demod = read_s32(chr2(5:8,:), 1, count);

function [t, outpos] = read_PSD_FILTER_GEN(chr, inpos, count)
  outpos = inpos + 32 * count;
  chr2=reshape(chr(inpos:inpos+count*32-1), 32, []);
  t.filfrq = read_f64(chr2(1:8,:), 1, count);
  t.cerd = read_struct_EXT_CERD_PARAMS(chr2(9:16,:), 1, count);
  t.taps = read_s32(chr2(17:20,:), 1, count);
  t.outputs = read_s32(chr2(21:24,:), 1, count);
  t.prefills = read_s32(chr2(25:28,:), 1, count);
  t.filter_slot = read_s32(chr2(29:32,:), 1, count);

function [t, outpos] = read_SCAN_INFO(chr, inpos, count)
  outpos = inpos + 72 * count;
  chr2=reshape(chr(inpos:inpos+count*72-1), 72, []);
  t.oprloc = read_float(chr2(1:4,:), 1, count);
  t.opphasoff = read_float(chr2(5:8,:), 1, count);
  t.optloc = read_float(chr2(9:12,:), 1, count);
  t.oprloc_shift = read_float(chr2(13:16,:), 1, count);
  t.opphasoff_shift = read_float(chr2(17:20,:), 1, count);
  t.optloc_shift = read_float(chr2(21:24,:), 1, count);
  t.opfov_freq_scale = read_float(chr2(25:28,:), 1, count);
  t.opfov_phase_scale = read_float(chr2(29:32,:), 1, count);
  t.opslthick_scale = read_float(chr2(33:36,:), 1, count);
  t.oprot = read_float(chr2(37:72,:), 1, count*9);

function [t, outpos] = read_PSC_INFO(chr, inpos, count)
  outpos = inpos + 60 * count;
  chr2=reshape(chr(inpos:inpos+count*60-1), 60, []);
  t.oppsctloc = read_float(chr2(1:4,:), 1, count);
  t.oppscrloc = read_float(chr2(5:8,:), 1, count);
  t.oppscphasoff = read_float(chr2(9:12,:), 1, count);
  t.oppscrot = read_float(chr2(13:48,:), 1, count*9);
  t.oppsclenx = read_int(chr2(49:52,:), 1, count);
  t.oppscleny = read_int(chr2(53:56,:), 1, count);
  t.oppsclenz = read_int(chr2(57:60,:), 1, count);

function [t, outpos] = read_DATA_ACQ_ORDER(chr, inpos, count)
  outpos = inpos + 6 * count;
  chr2=reshape(chr(inpos:inpos+count*6-1), 6, []);
  t.slloc = read_short(chr2(1:2,:), 1, count);
  t.slpass = read_short(chr2(3:4,:), 1, count);
  t.sltime = read_short(chr2(5:6,:), 1, count);

function [t, outpos] = read_RSP_INFO(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.rsptloc = read_float(chr2(1:4,:), 1, count);
  t.rsprloc = read_float(chr2(5:8,:), 1, count);
  t.rspphasoff = read_float(chr2(9:12,:), 1, count);
  t.slloc = read_int(chr2(13:16,:), 1, count);

function [t, outpos] = read_CTMEntryType(chr, inpos, count)
  outpos = inpos + 4 * count;
  chr2=reshape(chr(inpos:inpos+count*4-1), 4, []);
  t.receiverID = read_n8(chr2(1:1,:), 1, count);
  t.receiverChannel = read_n8(chr2(2:2,:), 1, count);
  t.entryMask = read_n16(chr2(3:4,:), 1, count);

function [t, outpos] = read_QuadVolWeightType(chr, inpos, count)
  outpos = inpos + 12 * count;
  chr2=reshape(chr(inpos:inpos+count*12-1), 12, []);
  t.receiverID = read_n8(chr2(1:1,:), 1, count);
  t.receiverChannel = read_n8(chr2(2:2,:), 1, count);
  t.pad = read_n8(chr2(3:4,:), 1, count*2);
  t.recWeight = read_f32(chr2(5:8,:), 1, count);
  t.recPhaseDeg = read_f32(chr2(9:12,:), 1, count);

function [t, outpos] = read_ChannelTransTableEntryType(chr, inpos, count)
  outpos = inpos + 1392 * count;
  chr2=reshape(chr(inpos:inpos+count*1392-1), 1392, []);
  t.logicalCoilName = read_s8(chr2(1:128,:), 1, count*128);
  t.clinicalCoilName = read_s8(chr2(129:160,:), 1, count*32);
  t.configUID = read_n32(chr2(161:164,:), 1, count);
  t.coilConnector = read_s32(chr2(165:168,:), 1, count);
  t.isActiveScanConfig = read_n32(chr2(169:172,:), 1, count);
  t.channelTranslationMap = read_CTMEntryType(chr2(173:1196,:), 1, count*256);
  t.quadVolReceiveWeights = read_QuadVolWeightType(chr2(1197:1388,:), 1, count*16);
  t.numChannels = read_n32(chr2(1389:1392,:), 1, count);

function [t, outpos] = read_INSTALL_COIL_INFO(chr, inpos, count)
  outpos = inpos + 44 * count;
  chr2=reshape(chr(inpos:inpos+count*44-1), 44, []);
  t.coilCode = read_char(chr2(1:40,:), 1, count*40);
  t.isInCoilDatabase = read_int(chr2(41:44,:), 1, count);

function [t, outpos] = read_INSTALL_COIL_CONNECTOR_INFO(chr, inpos, count)
  outpos = inpos + 184 * count;
  chr2=reshape(chr(inpos:inpos+count*184-1), 184, []);
  t.connector = read_int(chr2(1:4,:), 1, count);
  t.needsInstall = read_int(chr2(5:8,:), 1, count);
  t.installCoilInfo = read_INSTALL_COIL_INFO(chr2(9:184,:), 1, count*4);

function [t, outpos] = read_COIL_CONFIG_PARAM_TYPE(chr, inpos, count)
  outpos = inpos + 9784 * count;
  chr2=reshape(chr(inpos:inpos+count*9784-1), 9784, []);
  t.coilName = read_char(chr2(1:16,:), 1, count*16);
  t.GEcoilName = read_char(chr2(17:40,:), 1, count*24);
  t.pureCorrection = read_short(chr2(41:42,:), 1, count);
  t.maxNumOfReceivers = read_int(chr2(45:48,:), 1, count);
  t.coilType = read_int(chr2(49:52,:), 1, count);
  t.txCoilType = read_int(chr2(53:56,:), 1, count);
  t.fastTGmode = read_int(chr2(57:60,:), 1, count);
  t.fastTGstartTA = read_int(chr2(61:64,:), 1, count);
  t.fastTGstartRG = read_int(chr2(65:68,:), 1, count);
  t.nuclide = read_int(chr2(69:72,:), 1, count);
  t.tRPAvolumeRecEnable = read_int(chr2(73:76,:), 1, count);
  t.pureCompatible = read_int(chr2(77:80,:), 1, count);
  t.aps1StartTA = read_int(chr2(81:84,:), 1, count);
  t.cflStartTA = read_int(chr2(85:88,:), 1, count);
  t.cfhSensitiveAnatomy = read_int(chr2(89:92,:), 1, count);
  t.pureLambda = read_float(chr2(93:96,:), 1, count);
  t.pureTuningFactorSurface = read_float(chr2(97:100,:), 1, count);
  t.pureTuningFactorBody = read_float(chr2(101:104,:), 1, count);
  t.cableLoss = read_float(chr2(105:108,:), 1, count);
  t.coilLoss = read_float(chr2(109:112,:), 1, count);
  t.reconScale = read_float(chr2(113:116,:), 1, count);
  t.autoshimFOV = read_float(chr2(117:120,:), 1, count);
  t.coilWeights = read_float(chr2(121:4216,:), 1, count*1024);
  t.cttEntry = read_ChannelTransTableEntryType(chr2(4217:9784,:), 1, count*4);

function [t, outpos] = read_APPLICATION_CONFIG_PARAM_TYPE(chr, inpos, count)
  outpos = inpos + 240 * count;
  chr2=reshape(chr(inpos:inpos+count*240-1), 240, []);
  t.aps1StartTA = read_int(chr2(1:4,:), 1, count);
  t.cflStartTA = read_int(chr2(5:8,:), 1, count);
  t.AScfPatLocChangeRL = read_int(chr2(9:12,:), 1, count);
  t.AScfPatLocChangeAP = read_int(chr2(13:16,:), 1, count);
  t.AScfPatLocChangeSI = read_int(chr2(17:20,:), 1, count);
  t.TGpatLocChangeRL = read_int(chr2(21:24,:), 1, count);
  t.TGpatLocChangeAP = read_int(chr2(25:28,:), 1, count);
  t.TGpatLocChangeSI = read_int(chr2(29:32,:), 1, count);
  t.autoshimFOV = read_int(chr2(33:36,:), 1, count);
  t.fastTGstartTA = read_int(chr2(37:40,:), 1, count);
  t.fastTGstartRG = read_int(chr2(41:44,:), 1, count);
  t.fastTGmode = read_int(chr2(45:48,:), 1, count);
  t.cfhSensitiveAnatomy = read_int(chr2(49:52,:), 1, count);
  t.aps1Mod = read_int(chr2(53:56,:), 1, count);
  t.aps1Plane = read_int(chr2(57:60,:), 1, count);
  t.pureCompatible = read_int(chr2(61:64,:), 1, count);
  t.maxFOV = read_int(chr2(65:68,:), 1, count);
  t.assetThresh = read_int(chr2(69:72,:), 1, count);
  t.scic_a_used = read_int(chr2(73:76,:), 1, count);
  t.scic_s_used = read_int(chr2(77:80,:), 1, count);
  t.scic_c_used = read_int(chr2(81:84,:), 1, count);
  t.aps1ModFOV = read_float(chr2(85:88,:), 1, count);
  t.aps1ModPStloc = read_float(chr2(89:92,:), 1, count);
  t.aps1ModPSrloc = read_float(chr2(93:96,:), 1, count);
  t.opthickPSMod = read_float(chr2(97:100,:), 1, count);
  t.pureScale = read_float(chr2(101:104,:), 1, count);
  t.pureCorrectionThreshold = read_float(chr2(105:108,:), 1, count);
  t.pureLambda = read_float(chr2(109:112,:), 1, count);
  t.pureTuningFactorSurface = read_float(chr2(113:116,:), 1, count);
  t.pureTuningFactorBody = read_float(chr2(117:120,:), 1, count);
  t.scic_a = read_float(chr2(121:148,:), 1, count*7);
  t.scic_s = read_float(chr2(149:176,:), 1, count*7);
  t.scic_c = read_float(chr2(177:204,:), 1, count*7);
  t.assetSupported = read_int(chr2(205:208,:), 1, count);
  t.assetValues = read_float(chr2(209:220,:), 1, count*3);
  t.arcSupported = read_int(chr2(221:224,:), 1, count);
  t.arcValues = read_float(chr2(225:236,:), 1, count*3);
  t.sagCalEnabled = read_int(chr2(237:240,:), 1, count);

function [t, outpos] = read_APPLICATION_CONFIG_HDR(chr, inpos, count)
  outpos = inpos + 276 * count;
  chr2=reshape(chr(inpos:inpos+count*276-1), 276, []);
  t.error = read_int(chr2(1:4,:), 1, count);
  t.clinicalName = read_char(chr2(5:36,:), 1, count*32);
  t.appConfig = read_APPLICATION_CONFIG_PARAM_TYPE(chr2(37:276,:), 1, count);

function [t, outpos] = read_COIL_INFO(chr, inpos, count)
  outpos = inpos + 112 * count;
  chr2=reshape(chr(inpos:inpos+count*112-1), 112, []);
  t.coilName = read_s8(chr2(1:32,:), 1, count*32);
  t.txIndexPri = read_s32(chr2(33:36,:), 1, count);
  t.txIndexSec = read_s32(chr2(37:40,:), 1, count);
  t.rxCoilType = read_n32(chr2(41:44,:), 1, count);
  t.hubIndex = read_n32(chr2(45:48,:), 1, count);
  t.rxNucleus = read_n32(chr2(49:52,:), 1, count);
  t.aps1Mod = read_n32(chr2(53:56,:), 1, count);
  t.aps1ModPlane = read_n32(chr2(57:60,:), 1, count);
  t.coilSepDir = read_n32(chr2(61:64,:), 1, count);
  t.assetCalThreshold = read_s32(chr2(65:68,:), 1, count);
  t.aps1ModFov = read_f32(chr2(69:72,:), 1, count);
  t.aps1ModSlThick = read_f32(chr2(73:76,:), 1, count);
  t.aps1ModPsTloc = read_f32(chr2(77:80,:), 1, count);
  t.aps1ModPsRloc = read_f32(chr2(81:84,:), 1, count);
  t.autoshimFov = read_f32(chr2(85:88,:), 1, count);
  t.assetCalMaxFov = read_f32(chr2(89:92,:), 1, count);
  t.maxB1Rms = read_f32(chr2(93:96,:), 1, count);
  t.pureCompatible = read_n32(chr2(97:100,:), 1, count);
  t.pureLambda = read_f32(chr2(101:104,:), 1, count);
  t.pureTuningFactorSurface = read_f32(chr2(105:108,:), 1, count);
  t.pureTuningFactorBody = read_f32(chr2(109:112,:), 1, count);

function [t, outpos] = read_TX_COIL_INFO(chr, inpos, count)
  outpos = inpos + 248 * count;
  chr2=reshape(chr(inpos:inpos+count*248-1), 248, []);
  t.coilAtten = read_s32(chr2(1:4,:), 1, count);
  t.txCoilType = read_n32(chr2(5:8,:), 1, count);
  t.txPosition = read_n32(chr2(9:12,:), 1, count);
  t.txNucleus = read_n32(chr2(13:16,:), 1, count);
  t.txAmp = read_n32(chr2(17:20,:), 1, count);
  t.maxB1Peak = read_f32(chr2(21:24,:), 1, count);
  t.maxB1Squared = read_f32(chr2(25:28,:), 1, count);
  t.cableLoss = read_f32(chr2(29:32,:), 1, count);
  t.coilLoss = read_f32(chr2(33:36,:), 1, count);
  t.reflCoeffSquared = read_f32(chr2(37:76,:), 1, count*10);
  t.reflCoeffMassOffset = read_f32(chr2(77:80,:), 1, count);
  t.reflCoeffCurveType = read_f32(chr2(81:84,:), 1, count);
  t.exposedMass = read_f32(chr2(85:116,:), 1, count*8);
  t.lowSarExposedMass = read_f32(chr2(117:148,:), 1, count*8);
  t.jstd = read_f32(chr2(149:196,:), 1, count*12);
  t.meanJstd = read_f32(chr2(197:244,:), 1, count*12);
  t.separationStdev = read_f32(chr2(245:248,:), 1, count);

function [t, outpos] = read_PSD_COIL_INFO(chr, inpos, count)
  outpos = inpos + 3484 * count;
  chr2=reshape(chr(inpos:inpos+count*3484-1), 3484, []);
  t.imgRcvCoilInfo = read_COIL_INFO(chr2(1:1120,:), 1, count*10);
  t.volRcvCoilInfo = read_COIL_INFO(chr2(1121:2240,:), 1, count*10);
  t.txCoilInfo = read_TX_COIL_INFO(chr2(2241:3480,:), 1, count*5);
  t.numCoils = read_int(chr2(3481:3484,:), 1, count);

function [t, outpos] = read_GRAD_PULSE(chr, inpos, count)
  outpos = inpos + 128 * count;
  chr2=reshape(chr(inpos:inpos+count*128-1), 128, []);
  t.ptype = read_int(chr2(1:4,:), 1, count);
  t.num = read_int(chr2(73:76,:), 1, count);
  t.scale = read_float(chr2(77:80,:), 1, count);
  t.tdelta = read_int(chr2(89:92,:), 1, count);
  t.powscale = read_float(chr2(93:96,:), 1, count);
  t.power = read_float(chr2(97:100,:), 1, count);
  t.powpos = read_float(chr2(101:104,:), 1, count);
  t.powneg = read_float(chr2(105:108,:), 1, count);
  t.powabs = read_float(chr2(109:112,:), 1, count);
  t.amptran = read_float(chr2(113:116,:), 1, count);
  t.pwm = read_int(chr2(117:120,:), 1, count);
  t.bridge = read_int(chr2(121:124,:), 1, count);
  t.intabspwmcurr = read_float(chr2(125:128,:), 1, count);

function [t, outpos] = read_RF_PULSE(chr, inpos, count)
  outpos = inpos + 112 * count;
  chr2=reshape(chr(inpos:inpos+count*112-1), 112, []);
  t.abswidth = read_float(chr2(17:20,:), 1, count);
  t.effwidth = read_float(chr2(21:24,:), 1, count);
  t.area = read_float(chr2(25:28,:), 1, count);
  t.dtycyc = read_float(chr2(29:32,:), 1, count);
  t.maxpw = read_float(chr2(33:36,:), 1, count);
  t.num = read_int(chr2(37:40,:), 1, count);
  t.max_b1 = read_float(chr2(41:44,:), 1, count);
  t.max_int_b1_sq = read_float(chr2(45:48,:), 1, count);
  t.max_rms_b1 = read_float(chr2(49:52,:), 1, count);
  t.nom_fa = read_float(chr2(53:56,:), 1, count);
  t.nom_pw = read_float(chr2(65:68,:), 1, count);
  t.nom_bw = read_float(chr2(69:72,:), 1, count);
  t.activity = read_unsigned_int(chr2(73:76,:), 1, count);
  t.reference = read_unsigned_char(chr2(77:77,:), 1, count);
  t.isodelay = read_int(chr2(81:84,:), 1, count);
  t.scale = read_float(chr2(85:88,:), 1, count);
  t.extgradfile = read_int(chr2(97:100,:), 1, count);

function [t, outpos] = read_RF_PULSE_INFO(chr, inpos, count)
  outpos = inpos + 8 * count;
  chr2=reshape(chr(inpos:inpos+count*8-1), 8, []);
  t.change = read_int(chr2(1:4,:), 1, count);
  t.newres = read_int(chr2(5:8,:), 1, count);

function [t, outpos] = read_PHYS_GRAD(chr, inpos, count)
  outpos = inpos + 156 * count;
  chr2=reshape(chr(inpos:inpos+count*156-1), 156, []);
  t.xfull = read_int(chr2(1:4,:), 1, count);
  t.yfull = read_int(chr2(5:8,:), 1, count);
  t.zfull = read_int(chr2(9:12,:), 1, count);
  t.xfs = read_float(chr2(13:16,:), 1, count);
  t.yfs = read_float(chr2(17:20,:), 1, count);
  t.zfs = read_float(chr2(21:24,:), 1, count);
  t.xrt = read_int(chr2(25:28,:), 1, count);
  t.yrt = read_int(chr2(29:32,:), 1, count);
  t.zrt = read_int(chr2(33:36,:), 1, count);
  t.xft = read_int(chr2(37:40,:), 1, count);
  t.yft = read_int(chr2(41:44,:), 1, count);
  t.zft = read_int(chr2(45:48,:), 1, count);
  t.xcc = read_float(chr2(49:52,:), 1, count);
  t.ycc = read_float(chr2(53:56,:), 1, count);
  t.zcc = read_float(chr2(57:60,:), 1, count);
  t.xbeta = read_float(chr2(61:64,:), 1, count);
  t.ybeta = read_float(chr2(65:68,:), 1, count);
  t.zbeta = read_float(chr2(69:72,:), 1, count);
  t.xirms = read_float(chr2(73:76,:), 1, count);
  t.yirms = read_float(chr2(77:80,:), 1, count);
  t.zirms = read_float(chr2(81:84,:), 1, count);
  t.xipeak = read_float(chr2(85:88,:), 1, count);
  t.yipeak = read_float(chr2(89:92,:), 1, count);
  t.zipeak = read_float(chr2(93:96,:), 1, count);
  t.xamptran = read_float(chr2(97:100,:), 1, count);
  t.yamptran = read_float(chr2(101:104,:), 1, count);
  t.zamptran = read_float(chr2(105:108,:), 1, count);
  t.xiavrgabs = read_float(chr2(109:112,:), 1, count);
  t.yiavrgabs = read_float(chr2(113:116,:), 1, count);
  t.ziavrgabs = read_float(chr2(117:120,:), 1, count);
  t.xirmspos = read_float(chr2(121:124,:), 1, count);
  t.yirmspos = read_float(chr2(125:128,:), 1, count);
  t.zirmspos = read_float(chr2(129:132,:), 1, count);
  t.xirmsneg = read_float(chr2(133:136,:), 1, count);
  t.yirmsneg = read_float(chr2(137:140,:), 1, count);
  t.zirmsneg = read_float(chr2(141:144,:), 1, count);
  t.xpwmdc = read_float(chr2(145:148,:), 1, count);
  t.ypwmdc = read_float(chr2(149:152,:), 1, count);
  t.zpwmdc = read_float(chr2(153:156,:), 1, count);

function [t, outpos] = read_t_xact(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.x = read_int(chr2(1:4,:), 1, count);
  t.xy = read_int(chr2(5:8,:), 1, count);
  t.xz = read_int(chr2(9:12,:), 1, count);
  t.xyz = read_int(chr2(13:16,:), 1, count);

function [t, outpos] = read_t_yact(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.y = read_int(chr2(1:4,:), 1, count);
  t.xy = read_int(chr2(5:8,:), 1, count);
  t.yz = read_int(chr2(9:12,:), 1, count);
  t.xyz = read_int(chr2(13:16,:), 1, count);

function [t, outpos] = read_t_zact(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.z = read_int(chr2(1:4,:), 1, count);
  t.xz = read_int(chr2(5:8,:), 1, count);
  t.yz = read_int(chr2(9:12,:), 1, count);
  t.xyz = read_int(chr2(13:16,:), 1, count);

function [t, outpos] = read_ramp_t(chr, inpos, count)
  outpos = inpos + 24 * count;
  chr2=reshape(chr(inpos:inpos+count*24-1), 24, []);
  t.xrt = read_int(chr2(1:4,:), 1, count);
  t.yrt = read_int(chr2(5:8,:), 1, count);
  t.zrt = read_int(chr2(9:12,:), 1, count);
  t.xft = read_int(chr2(13:16,:), 1, count);
  t.yft = read_int(chr2(17:20,:), 1, count);
  t.zft = read_int(chr2(21:24,:), 1, count);

function [t, outpos] = read_LOG_GRAD(chr, inpos, count)
  outpos = inpos + 300 * count;
  chr2=reshape(chr(inpos:inpos+count*300-1), 300, []);
  t.xrt = read_int(chr2(1:4,:), 1, count);
  t.yrt = read_int(chr2(5:8,:), 1, count);
  t.zrt = read_int(chr2(9:12,:), 1, count);
  t.xft = read_int(chr2(13:16,:), 1, count);
  t.yft = read_int(chr2(17:20,:), 1, count);
  t.zft = read_int(chr2(21:24,:), 1, count);
  t.opt = read_ramp_t(chr2(25:48,:), 1, count);
  t.xrta = read_t_xact(chr2(49:64,:), 1, count);
  t.yrta = read_t_yact(chr2(65:80,:), 1, count);
  t.zrta = read_t_zact(chr2(81:96,:), 1, count);
  t.xfta = read_t_xact(chr2(97:112,:), 1, count);
  t.yfta = read_t_yact(chr2(113:128,:), 1, count);
  t.zfta = read_t_zact(chr2(129:144,:), 1, count);
  t.xbeta = read_float(chr2(145:148,:), 1, count);
  t.ybeta = read_float(chr2(149:152,:), 1, count);
  t.zbeta = read_float(chr2(153:156,:), 1, count);
  t.tx_xyz = read_float(chr2(157:160,:), 1, count);
  t.ty_xyz = read_float(chr2(161:164,:), 1, count);
  t.tz_xyz = read_float(chr2(165:168,:), 1, count);
  t.tx_xy = read_float(chr2(169:172,:), 1, count);
  t.tx_xz = read_float(chr2(173:176,:), 1, count);
  t.ty_xy = read_float(chr2(177:180,:), 1, count);
  t.ty_yz = read_float(chr2(181:184,:), 1, count);
  t.tz_xz = read_float(chr2(185:188,:), 1, count);
  t.tz_yz = read_float(chr2(189:192,:), 1, count);
  t.tx = read_float(chr2(193:196,:), 1, count);
  t.ty = read_float(chr2(197:200,:), 1, count);
  t.tz = read_float(chr2(201:204,:), 1, count);
  t.xfs = read_float(chr2(205:208,:), 1, count);
  t.yfs = read_float(chr2(209:212,:), 1, count);
  t.zfs = read_float(chr2(213:216,:), 1, count);
  t.xirms = read_float(chr2(217:220,:), 1, count);
  t.yirms = read_float(chr2(221:224,:), 1, count);
  t.zirms = read_float(chr2(225:228,:), 1, count);
  t.xipeak = read_float(chr2(229:232,:), 1, count);
  t.yipeak = read_float(chr2(233:236,:), 1, count);
  t.zipeak = read_float(chr2(237:240,:), 1, count);
  t.xamptran = read_float(chr2(241:244,:), 1, count);
  t.yamptran = read_float(chr2(245:248,:), 1, count);
  t.zamptran = read_float(chr2(249:252,:), 1, count);
  t.xiavrgabs = read_float(chr2(253:256,:), 1, count);
  t.yiavrgabs = read_float(chr2(257:260,:), 1, count);
  t.ziavrgabs = read_float(chr2(261:264,:), 1, count);
  t.xirmspos = read_float(chr2(265:268,:), 1, count);
  t.yirmspos = read_float(chr2(269:272,:), 1, count);
  t.zirmspos = read_float(chr2(273:276,:), 1, count);
  t.xirmsneg = read_float(chr2(277:280,:), 1, count);
  t.yirmsneg = read_float(chr2(281:284,:), 1, count);
  t.zirmsneg = read_float(chr2(285:288,:), 1, count);
  t.xpwmdc = read_float(chr2(289:292,:), 1, count);
  t.ypwmdc = read_float(chr2(293:296,:), 1, count);
  t.zpwmdc = read_float(chr2(297:300,:), 1, count);

function [t, outpos] = read_OPT_GRAD_INPUT(chr, inpos, count)
  outpos = inpos + 96 * count;
  chr2=reshape(chr(inpos:inpos+count*96-1), 96, []);
  t.xfs = read_float(chr2(1:4,:), 1, count);
  t.yfs = read_float(chr2(5:8,:), 1, count);
  t.zfs = read_float(chr2(9:12,:), 1, count);
  t.xrt = read_int(chr2(13:16,:), 1, count);
  t.yrt = read_int(chr2(17:20,:), 1, count);
  t.zrt = read_int(chr2(21:24,:), 1, count);
  t.xbeta = read_float(chr2(25:28,:), 1, count);
  t.ybeta = read_float(chr2(29:32,:), 1, count);
  t.zbeta = read_float(chr2(33:36,:), 1, count);
  t.xfov = read_float(chr2(37:40,:), 1, count);
  t.yfov = read_float(chr2(41:44,:), 1, count);
  t.xres = read_int(chr2(45:48,:), 1, count);
  t.yres = read_int(chr2(49:52,:), 1, count);
  t.ileaves = read_int(chr2(53:56,:), 1, count);
  t.xdis = read_float(chr2(57:60,:), 1, count);
  t.ydis = read_float(chr2(61:64,:), 1, count);
  t.zdis = read_float(chr2(65:68,:), 1, count);
  t.tsp = read_float(chr2(69:72,:), 1, count);
  t.osamps = read_int(chr2(73:76,:), 1, count);
  t.fbhw = read_float(chr2(77:80,:), 1, count);
  t.vvp = read_int(chr2(81:84,:), 1, count);
  t.pnsf = read_float(chr2(85:88,:), 1, count);
  t.taratio = read_float(chr2(89:92,:), 1, count);
  t.zarea = read_float(chr2(93:96,:), 1, count);

function [t, outpos] = read_OPT_GRAD_PARAMS(chr, inpos, count)
  outpos = inpos + 96 * count;
  chr2=reshape(chr(inpos:inpos+count*96-1), 96, []);

function [t, outpos] = read_dbkey_exam_type(chr, inpos, count)
  [t, outpos] = read_unsigned_short_int(chr, inpos, count);

function [t, outpos] = read_dbkey_magic_type(chr, inpos, count)
  [t, outpos] = read_short_int(chr, inpos, count);

function [t, outpos] = read_dbkey_series_type(chr, inpos, count)
  [t, outpos] = read_short_int(chr, inpos, count);

function [t, outpos] = read_dbkey_image_type(chr, inpos, count)
  [t, outpos] = read_int(chr, inpos, count);

function [t, outpos] = read_DbKey(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.su_id = read_char(chr2(1:4,:), 1, count*4);
  t.mg_no = read_dbkey_magic_type(chr2(5:6,:), 1, count);
  t.ex_no = read_dbkey_exam_type(chr2(7:8,:), 1, count);
  t.se_no = read_dbkey_series_type(chr2(9:10,:), 1, count);
  t.im_no = read_dbkey_image_type(chr2(13:16,:), 1, count);

function [t, outpos] = read_OP_NMRID_TYPE(chr, inpos, count)
  [t, outpos] = read_char(chr, inpos, count*(12));

function [t, outpos] = read_OP_HDR1_TYPE(chr, inpos, count)
  outpos = inpos + 40 * count;
  chr2=reshape(chr(inpos:inpos+count*40-1), 40, []);
  t.rev = read_n16(chr2(1:2,:), 1, count);
  t.length = read_n16(chr2(3:4,:), 1, count);
  t.req_nmrid = read_OP_NMRID_TYPE(chr2(5:16,:), 1, count);
  t.resp_nmrid = read_OP_NMRID_TYPE(chr2(17:28,:), 1, count);
  t.opcode = read_n16(chr2(29:30,:), 1, count);
  t.packet_type = read_n16(chr2(31:32,:), 1, count);
  t.seq_num = read_n16(chr2(33:34,:), 1, count);
  t.status = read_n32(chr2(37:40,:), 1, count);

function [t, outpos] = read_OP_HDR_TYPE(chr, inpos, count)
  outpos = inpos + 40 * count;
  chr2=reshape(chr(inpos:inpos+count*40-1), 40, []);
  t.rev = read_s8(chr2(1:1,:), 1, count);
  t.endian = read_s8(chr2(2:2,:), 1, count);
  t.length = read_n16(chr2(3:4,:), 1, count);
  t.req_nmrid = read_OP_NMRID_TYPE(chr2(5:16,:), 1, count);
  t.resp_nmrid = read_OP_NMRID_TYPE(chr2(17:28,:), 1, count);
  t.opcode = read_n16(chr2(29:30,:), 1, count);
  t.packet_type = read_n16(chr2(31:32,:), 1, count);
  t.seq_num = read_n16(chr2(33:34,:), 1, count);
  t.pad = read_n16(chr2(35:36,:), 1, count);
  t.status = read_n32(chr2(37:40,:), 1, count);

function [t, outpos] = read_OP_RECN_READY_TYPE(chr, inpos, count)
  outpos = inpos + 40 * count;
  chr2=reshape(chr(inpos:inpos+count*40-1), 40, []);
  t.dbkey = read_DbKey(chr2(1:16,:), 1, count);
  t.seq_number = read_s32(chr2(17:20,:), 1, count);
  t.time_stamp = read_GEtimespec(chr2(21:28,:), 1, count);
  t.run_no = read_s32(chr2(29:32,:), 1, count);
  t.prep_flag = read_s32(chr2(33:36,:), 1, count);
  t.patient_checksum = read_n32(chr2(37:40,:), 1, count);

function [t, outpos] = read_OP_RECN_READY_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 80 * count;
  chr2=reshape(chr(inpos:inpos+count*80-1), 80, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_READY_TYPE(chr2(41:80,:), 1, count);

function [t, outpos] = read_OP_RECN_FOO_TYPE(chr, inpos, count)
  outpos = inpos + 24 * count;
  chr2=reshape(chr(inpos:inpos+count*24-1), 24, []);
  t.somes32bitint = read_s32(chr2(1:4,:), 1, count);
  t.somen16bitint = read_n16(chr2(5:6,:), 1, count);
  t.somechar = read_char(chr2(7:7,:), 1, count);
  t.someulong = read_unsigned_long(chr2(9:16,:), 1, count);
  t.somefloat = read_float(chr2(17:20,:), 1, count);

function [t, outpos] = read_OP_RECN_FOO_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 64 * count;
  chr2=reshape(chr(inpos:inpos+count*64-1), 64, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_FOO_TYPE(chr2(41:64,:), 1, count);

function [t, outpos] = read_OP_RECN_START_TYPE(chr, inpos, count)
  outpos = inpos + 12 * count;
  chr2=reshape(chr(inpos:inpos+count*12-1), 12, []);
  t.seq_number = read_s32(chr2(1:4,:), 1, count);
  t.time_stamp = read_GEtimespec(chr2(5:12,:), 1, count);

function [t, outpos] = read_OP_RECN_START_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 52 * count;
  chr2=reshape(chr(inpos:inpos+count*52-1), 52, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_START_TYPE(chr2(41:52,:), 1, count);

function [t, outpos] = read_OP_RECN_SCAN_STOPPED_TYPE(chr, inpos, count)
  outpos = inpos + 12 * count;
  chr2=reshape(chr(inpos:inpos+count*12-1), 12, []);
  t.seq_number = read_s32(chr2(1:4,:), 1, count);
  t.status = read_s32(chr2(5:8,:), 1, count);
  t.aborted_pass_num = read_s32(chr2(9:12,:), 1, count);

function [t, outpos] = read_OP_RECN_SCAN_STOPPED_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 52 * count;
  chr2=reshape(chr(inpos:inpos+count*52-1), 52, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_SCAN_STOPPED_TYPE(chr2(41:52,:), 1, count);

function [t, outpos] = read_OP_RECN_STOP_TYPE(chr, inpos, count)
  outpos = inpos + 32 * count;
  chr2=reshape(chr(inpos:inpos+count*32-1), 32, []);
  t.dbkey = read_DbKey(chr2(1:16,:), 1, count);
  t.seq_number = read_s32(chr2(17:20,:), 1, count);
  t.scan_initiator = read_char(chr2(21:32,:), 1, count*12);

function [t, outpos] = read_OP_RECN_STOP_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 72 * count;
  chr2=reshape(chr(inpos:inpos+count*72-1), 72, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_STOP_TYPE(chr2(41:72,:), 1, count);

function [t, outpos] = read_OP_RECN_IM_ALLOC_TYPE(chr, inpos, count)
  outpos = inpos + 4 * count;
  chr2=reshape(chr(inpos:inpos+count*4-1), 4, []);
  t.seq_number = read_s32(chr2(1:4,:), 1, count);

function [t, outpos] = read_OP_RECN_IM_ALLOC_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 44 * count;
  chr2=reshape(chr(inpos:inpos+count*44-1), 44, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_IM_ALLOC_TYPE(chr2(41:44,:), 1, count);

function [t, outpos] = read_OP_RECN_SCAN_STARTED_TYPE(chr, inpos, count)
  outpos = inpos + 4 * count;
  chr2=reshape(chr(inpos:inpos+count*4-1), 4, []);
  t.seq_number = read_s32(chr2(1:4,:), 1, count);

function [t, outpos] = read_OP_RECN_SCAN_STARTED_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 44 * count;
  chr2=reshape(chr(inpos:inpos+count*44-1), 44, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_SCAN_STARTED_TYPE(chr2(41:44,:), 1, count);

function [t, outpos] = read_OP_VIEWTABLE_UPDATE_TYPE(chr, inpos, count)
  outpos = inpos + 1036 * count;
  chr2=reshape(chr(inpos:inpos+count*1036-1), 1036, []);
  t.table_size = read_s32(chr2(1:4,:), 1, count);
  t.block_size = read_s32(chr2(5:8,:), 1, count);
  t.first_entry_index = read_s32(chr2(9:12,:), 1, count);
  t.table = read_s32(chr2(13:1036,:), 1, count*256);

function [t, outpos] = read_OP_VIEWTABLE_UPDATE_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 1076 * count;
  chr2=reshape(chr(inpos:inpos+count*1076-1), 1076, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.pkt = read_OP_VIEWTABLE_UPDATE_TYPE(chr2(41:1076,:), 1, count);

function [t, outpos] = read_MROR_ADDR_BLOCK(chr, inpos, count)
  outpos = inpos + 48 * count;
  chr2=reshape(chr(inpos:inpos+count*48-1), 48, []);
  t.mrhdr = read_n64(chr2(1:8,:), 1, count);
  t.pixelhdr = read_n64(chr2(9:16,:), 1, count);
  t.pixeldata = read_n64(chr2(17:24,:), 1, count);
  t.raw_offset = read_n64(chr2(25:32,:), 1, count);
  t.raw_receivers = read_n64(chr2(33:40,:), 1, count);
  t.pixeldata3 = read_n64(chr2(41:48,:), 1, count);

function [t, outpos] = read_MROR_ADDR_BLOCK_PKT(chr, inpos, count)
  outpos = inpos + 88 * count;
  chr2=reshape(chr(inpos:inpos+count*88-1), 88, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.mrab = read_MROR_ADDR_BLOCK(chr2(41:88,:), 1, count);

function [t, outpos] = read_MROR_RETRIEVAL_DONE_TYPE(chr, inpos, count)
  outpos = inpos + 4 * count;
  chr2=reshape(chr(inpos:inpos+count*4-1), 4, []);
  t.recon_ts = read_n32(chr2(1:4,:), 1, count);

function [t, outpos] = read_SCAN_CALIB_INFO_TYPE(chr, inpos, count)
  outpos = inpos + 8 * count;
  chr2=reshape(chr(inpos:inpos+count*8-1), 8, []);
  t.exam_number = read_s32(chr2(1:4,:), 1, count);
  t.calib_flag = read_s32(chr2(5:8,:), 1, count);

function [t, outpos] = read_SCAN_CALIB_INFO_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 48 * count;
  chr2=reshape(chr(inpos:inpos+count*48-1), 48, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.info = read_SCAN_CALIB_INFO_TYPE(chr2(41:48,:), 1, count);

function [t, outpos] = read_OP_RECN_SIZE_CHECK_TYPE(chr, inpos, count)
  outpos = inpos + 16 * count;
  chr2=reshape(chr(inpos:inpos+count*16-1), 16, []);
  t.total_bam_size = read_n64(chr2(1:8,:), 1, count);
  t.total_disk_size = read_n64(chr2(9:16,:), 1, count);

function [t, outpos] = read_OP_RECN_SIZE_CHECK_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 56 * count;
  chr2=reshape(chr(inpos:inpos+count*56-1), 56, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.req = read_OP_RECN_SIZE_CHECK_TYPE(chr2(41:56,:), 1, count);

function [t, outpos] = read_EXAM_SCAN_DONE_TYPE(chr, inpos, count)
  outpos = inpos + 4 * count;
  chr2=reshape(chr(inpos:inpos+count*4-1), 4, []);
  t.exam_number = read_s32(chr2(1:4,:), 1, count);

function [t, outpos] = read_EXAM_SCAN_DONE_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 44 * count;
  chr2=reshape(chr(inpos:inpos+count*44-1), 44, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.info = read_EXAM_SCAN_DONE_TYPE(chr2(41:44,:), 1, count);

function [t, outpos] = read_POSITION_DETECTION_DONE_TYPE(chr, inpos, count)
  outpos = inpos + 24 * count;
  chr2=reshape(chr(inpos:inpos+count*24-1), 24, []);
  t.object_detected = read_n32(chr2(1:4,:), 1, count);
  t.object_si_position_mm = read_f32(chr2(5:8,:), 1, count);
  t.right_most_voxel_mm = read_f32(chr2(9:12,:), 1, count);
  t.anterior_most_voxel_mm = read_f32(chr2(13:16,:), 1, count);
  t.superior_most_voxel_mm = read_f32(chr2(17:20,:), 1, count);
  t.checksum = read_n32(chr2(21:24,:), 1, count);

function [t, outpos] = read_POSITION_DETECTION_DONE_PACK_TYPE(chr, inpos, count)
  outpos = inpos + 64 * count;
  chr2=reshape(chr(inpos:inpos+count*64-1), 64, []);
  t.hdr = read_OP_HDR_TYPE(chr2(1:40,:), 1, count);
  t.info = read_POSITION_DETECTION_DONE_TYPE(chr2(41:64,:), 1, count);

function [t, outpos] = read_CARDIAC_GATE_TYPE_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_EXTERN_FILENAME(chr, inpos, count)
  [t, outpos] = read_char(chr, inpos, count*(80));

function [t, outpos] = read_PHASE_OFF(chr, inpos, count)
  outpos = inpos + 8 * count;
  chr2=reshape(chr(inpos:inpos+count*8-1), 8, []);
  t.ysign = read_int(chr2(1:4,:), 1, count);
  t.yoffs = read_int(chr2(5:8,:), 1, count);

function [t, outpos] = read_RSP_PSC_INFO(chr, inpos, count)
  outpos = inpos + 112 * count;
  chr2=reshape(chr(inpos:inpos+count*112-1), 112, []);
  t.rsppsctloc = read_float(chr2(1:4,:), 1, count);
  t.rsppscrloc = read_float(chr2(5:8,:), 1, count);
  t.rsppscphasoff = read_float(chr2(9:12,:), 1, count);
  t.rsppscrot = read_long(chr2(17:96,:), 1, count*10);
  t.rsppsclenx = read_int(chr2(97:100,:), 1, count);
  t.rsppscleny = read_int(chr2(101:104,:), 1, count);
  t.rsppsclenz = read_int(chr2(105:108,:), 1, count);

function [t, outpos] = read_GIR_INFO(chr, inpos, count)
  outpos = inpos + 44 * count;
  chr2=reshape(chr(inpos:inpos+count*44-1), 44, []);
  t.opgirthick = read_float(chr2(1:4,:), 1, count);
  t.opgirtloc = read_float(chr2(5:8,:), 1, count);
  t.opgirrot = read_float(chr2(9:44,:), 1, count*9);

function [t, outpos] = read_ZY_EXPORT(chr, inpos, count)
  outpos = inpos + 10 * count;
  chr2=reshape(chr(inpos:inpos+count*10-1), 10, []);
  t.view = read_n16(chr2(1:2,:), 1, count);
  t.slice = read_n16(chr2(3:4,:), 1, count);
  t.echo = read_n16(chr2(5:6,:), 1, count);
  t.heat = read_n16(chr2(7:8,:), 1, count);
  t.flags = read_n16(chr2(9:10,:), 1, count);

function [t, outpos] = read_VIEWORDER_MODE_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_REG_VIEWORDER_MODE_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_REGION_ORDER_MODE_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_CAL_PARAM(chr, inpos, count)
  outpos = inpos + 36 * count;
  chr2=reshape(chr(inpos:inpos+count*36-1), 36, []);
  t.shape = read_INT(chr2(1:4,:), 1, count);
  t.phaseCutoffUpper = read_INT(chr2(5:8,:), 1, count);
  t.phaseCutoffLower = read_INT(chr2(9:12,:), 1, count);
  t.sliceCutoffUpper = read_INT(chr2(13:16,:), 1, count);
  t.sliceCutoffLower = read_INT(chr2(17:20,:), 1, count);
  t.phaseRadius = read_FLOAT(chr2(21:24,:), 1, count);
  t.sliceRadius = read_FLOAT(chr2(25:28,:), 1, count);
  t.phaseOrigin = read_FLOAT(chr2(29:32,:), 1, count);
  t.sliceOrigin = read_FLOAT(chr2(33:36,:), 1, count);

function [t, outpos] = read_PARAM4D(chr, inpos, count)
  outpos = inpos + 164 * count;
  chr2=reshape(chr(inpos:inpos+count*164-1), 164, []);
  t.vieworder_mode = read_VIEWORDER_MODE_E(chr2(1:4,:), 1, count);
  t.aregion_fraction = read_float(chr2(5:8,:), 1, count);
  t.num_outer_regions = read_int(chr2(9:12,:), 1, count);
  t.num_sub_regions = read_int(chr2(13:16,:), 1, count);
  t.smoothec = read_int(chr2(17:20,:), 1, count);
  t.views_per_region = read_int(chr2(21:148,:), 1, count*32);
  t.num_transition_fraction = read_float(chr2(149:152,:), 1, count);
  t.reverse_first_region_flag = read_int(chr2(153:156,:), 1, count);
  t.regViewOrderMode = read_int(chr2(157:160,:), 1, count);
  t.nr_of_segA = read_int(chr2(161:164,:), 1, count);

function [t, outpos] = read_SPIRAL_VIEW(chr, inpos, count)
  outpos = inpos + 6 * count;
  chr2=reshape(chr(inpos:inpos+count*6-1), 6, []);
  t.phase = read_short(chr2(1:2,:), 1, count);
  t.slice = read_short(chr2(3:4,:), 1, count);
  t.leaf = read_short(chr2(5:6,:), 1, count);

function [t, outpos] = read_SLAB_OFF(chr, inpos, count)
  outpos = inpos + 8 * count;
  chr2=reshape(chr(inpos:inpos+count*8-1), 8, []);
  t.zsign = read_int(chr2(1:4,:), 1, count);
  t.zoffs = read_int(chr2(5:8,:), 1, count);

function [t, outpos] = read_CYLR_RF_TYPE_E(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_t_ktsamp(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_ViewTable_kyz(chr, inpos, count)
  outpos = inpos + 40 * count;
  chr2=reshape(chr(inpos:inpos+count*40-1), 40, []);
  t.len = read_short(chr2(1:2,:), 1, count);

function [t, outpos] = read_t_cgatetype(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_t_fcineim(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_t_fcinent(chr, inpos, count)
  [t, outpos] = read_int_(chr, inpos, count);

function [t, outpos] = read_cv_type(chr, inpos, count)
  outpos = inpos + 2264528 * count;
  chr2=reshape(chr(inpos:inpos+count*2264528-1), 2264528, []);
  t.psd_name = read_char(chr2(1:255,:), 1, count*255);
  t.host_name = read_char(chr2(256:287,:), 1, count*32);
  t.time_stamp = read_char(chr2(288:319,:), 1, count*32);
  t.sha1sum = read_char(chr2(320:367,:), 1, count*48);
  t.ASSET_MAX_SLQUANT = read_int(chr2(369:372,:), 1, count);
  t.B1Cal_mode = read_int(chr2(373:376,:), 1, count);
  t.CFHxres = read_int(chr2(377:380,:), 1, count);
  t.CFLxres = read_int(chr2(381:384,:), 1, count);
  t.ChemSatPulse = read_int(chr2(385:388,:), 1, count);
  t.CompleteEchoLoop_flag = read_int(chr2(389:392,:), 1, count);
  t.CompositeRMS_method = read_int(chr2(393:396,:), 1, count);
  t.DATA_ACQ_ORDER_ENTRIES = read_int(chr2(397:400,:), 1, count);
  t.DD_channels = read_int(chr2(401:404,:), 1, count);
  t.DD_debug = read_int(chr2(405:408,:), 1, count);
  t.DD_delay = read_int(chr2(409:412,:), 1, count);
  t.DD_nCh = read_int(chr2(413:416,:), 1, count);
  t.FSvar = read_int(chr2(417:420,:), 1, count);
  t.FTGacq1 = read_int(chr2(421:424,:), 1, count);
  t.FTGacq2 = read_int(chr2(425:428,:), 1, count);
  t.FTGau = read_float(chr2(429:432,:), 1, count);
  t.FTGecho1bw = read_float(chr2(433:436,:), 1, count);
  t.FTGfov = read_float(chr2(437:440,:), 1, count);
  t.FTGopslthickz1 = read_float(chr2(441:444,:), 1, count);
  t.FTGopslthickz2 = read_float(chr2(445:448,:), 1, count);
  t.FTGopslthickz3 = read_float(chr2(449:452,:), 1, count);
  t.FTGslthk = read_float(chr2(453:456,:), 1, count);
  t.FTGtau1 = read_int(chr2(457:460,:), 1, count);
  t.FTGtau2 = read_int(chr2(461:464,:), 1, count);
  t.FTGtecho = read_float(chr2(465:468,:), 1, count);
  t.FTGtestpulse = read_int(chr2(469:472,:), 1, count);
  t.FTGxmtadd = read_float(chr2(473:476,:), 1, count);
  t.FTGxres = read_int(chr2(477:480,:), 1, count);
  t.GAM = read_float(chr2(481:484,:), 1, count);
  t.IRinCFH = read_int(chr2(485:488,:), 1, count);
  t.PSamp_derate_factor = read_float(chr2(489:492,:), 1, count);
  t.PSasamp_derate_factor = read_float(chr2(493:496,:), 1, count);
  t.PSassr_derate_factor = read_float(chr2(497:500,:), 1, count);
  t.PScfh_shimvol_debug = read_int(chr2(501:504,:), 1, count);
  t.PScs_sat = read_int(chr2(505:508,:), 1, count);
  t.PSdebugstate = read_int(chr2(509:512,:), 1, count);
  t.PSfield_strength = read_int(chr2(513:516,:), 1, count);
  t.PSir = read_int(chr2(517:520,:), 1, count);
  t.PSmt = read_int(chr2(521:524,:), 1, count);
  t.PSoff90 = read_int(chr2(525:528,:), 1, count);
  t.PSphasoff = read_float(chr2(529:532,:), 1, count);
  t.PSphasoff_mod = read_float(chr2(533:536,:), 1, count);
  t.PSrloc = read_float(chr2(537:540,:), 1, count);
  t.PSrloc_mod = read_float(chr2(541:544,:), 1, count);
  t.PSslice_ind = read_int(chr2(545:548,:), 1, count);
  t.PSslice_num = read_int(chr2(549:552,:), 1, count);
  t.PSsr_derate_factor = read_float(chr2(553:556,:), 1, count);
  t.PStest_slab = read_int(chr2(557:560,:), 1, count);
  t.PStloc = read_float(chr2(561:564,:), 1, count);
  t.PStloc_mod = read_float(chr2(565:568,:), 1, count);
  t.PStrigger = read_int(chr2(569:572,:), 1, count);
  t.PosGzssfhcomb = read_int(chr2(573:576,:), 1, count);
  t.Posrfs5fph = read_int(chr2(577:580,:), 1, count);
  t.Posrfssf = read_int(chr2(581:584,:), 1, count);
  t.Posrfssfh = read_int(chr2(585:588,:), 1, count);
  t.Rf = read_float(chr2(589:592,:), 1, count);
  t.SAR_bodyNV_weight_lim = read_float(chr2(593:596,:), 1, count);
  t.SatRelaxers = read_int(chr2(597:600,:), 1, count);
  t.T1f = read_float(chr2(601:604,:), 1, count);
  t.T2f = read_float(chr2(605:608,:), 1, count);
  t.TG_record = read_int(chr2(609:612,:), 1, count);
  t.TGlimit = read_int(chr2(613:616,:), 1, count);
  t.TGopslthick = read_float(chr2(617:620,:), 1, count);
  t.TGopslthickx = read_float(chr2(621:624,:), 1, count);
  t.TGopslthicky = read_float(chr2(625:628,:), 1, count);
  t.TGspf = read_int(chr2(629:632,:), 1, count);
  t.TR_PASS = read_int(chr2(633:636,:), 1, count);
  t.TR_PASS3D = read_int(chr2(637:640,:), 1, count);
  t.TR_SLOP = read_int(chr2(641:644,:), 1, count);
  t.XTGacq1 = read_int(chr2(645:648,:), 1, count);
  t.XTGecho1bw = read_float(chr2(649:652,:), 1, count);
  t.XTGfov = read_float(chr2(653:656,:), 1, count);
  t.XTGtau1 = read_int(chr2(657:660,:), 1, count);
  t.XTGxres = read_int(chr2(661:664,:), 1, count);
  t.T_firstcv = read_long_int(chr2(665:672,:), 1, count);
  t.T_lastcv = read_long_int(chr2(673:680,:), 1, count);
  t.T_lasttgtex = read_long_int(chr2(681:688,:), 1, count);
  t.aTEopt_flag = read_int(chr2(689:692,:), 1, count);
  t.aTRopt_flag = read_int(chr2(693:696,:), 1, count);
  t.a_base = read_float(chr2(697:700,:), 1, count);
  t.a_base2 = read_float(chr2(701:704,:), 1, count);
  t.a_base_max = read_float(chr2(705:708,:), 1, count);
  t.a_base_proj_dephaser = read_float(chr2(709:712,:), 1, count);
  t.a_comb = read_float(chr2(713:716,:), 1, count);
  t.a_comb2 = read_float(chr2(717:720,:), 1, count);
  t.a_delta = read_float(chr2(721:724,:), 1, count);
  t.a_delta2 = read_float(chr2(725:728,:), 1, count);
  t.a_end = read_float(chr2(729:732,:), 1, count);
  t.a_end2 = read_float(chr2(733:736,:), 1, count);
  t.a_gk = read_float(chr2(737:740,:), 1, count);
  t.a_gx1 = read_float(chr2(741:744,:), 1, count);
  t.a_gx1_frac = read_float(chr2(745:748,:), 1, count);
  t.a_gx1_full = read_float(chr2(749:752,:), 1, count);
  t.a_gx1a = read_float(chr2(753:756,:), 1, count);
  t.a_gx1as = read_float(chr2(757:760,:), 1, count);
  t.a_gx1b = read_float(chr2(761:764,:), 1, count);
  t.a_gx1bftg = read_float(chr2(765:768,:), 1, count);
  t.a_gx1bxtg = read_float(chr2(769:772,:), 1, count);
  t.a_gx1cfh = read_float(chr2(773:776,:), 1, count);
  t.a_gx1d = read_float(chr2(777:780,:), 1, count);
  t.a_gx1d_frac = read_float(chr2(781:784,:), 1, count);
  t.a_gx1d_full = read_float(chr2(785:788,:), 1, count);
  t.a_gx1dtg = read_float(chr2(789:792,:), 1, count);
  t.a_gx1ftg = read_float(chr2(793:796,:), 1, count);
  t.a_gx1mon = read_float(chr2(797:800,:), 1, count);
  t.a_gx1mps1 = read_float(chr2(801:804,:), 1, count);
  t.a_gx1rs = read_float(chr2(805:808,:), 1, count);
  t.a_gx1tm = read_float(chr2(809:812,:), 1, count);
  t.a_gx1u = read_float(chr2(813:816,:), 1, count);
  t.a_gx1u_frac = read_float(chr2(817:820,:), 1, count);
  t.a_gx1u_full = read_float(chr2(821:824,:), 1, count);
  t.a_gx2 = read_float(chr2(825:828,:), 1, count);
  t.a_gx2dtg = read_float(chr2(829:832,:), 1, count);
  t.a_gx2ftg = read_float(chr2(833:836,:), 1, count);
  t.a_gx2rs = read_float(chr2(837:840,:), 1, count);
  t.a_gx2test = read_float(chr2(841:844,:), 1, count);
  t.a_gxb = read_float(chr2(845:848,:), 1, count);
  t.a_gxbrsfc1 = read_float(chr2(849:852,:), 1, count);
  t.a_gxbrsfc2 = read_float(chr2(853:856,:), 1, count);
  t.a_gxfc = read_float(chr2(857:860,:), 1, count);
  t.a_gxfc_frac = read_float(chr2(861:864,:), 1, count);
  t.a_gxfc_full = read_float(chr2(865:868,:), 1, count);
  t.a_gxfcd = read_float(chr2(869:872,:), 1, count);
  t.a_gxfcd_frac = read_float(chr2(873:876,:), 1, count);
  t.a_gxfcd_full = read_float(chr2(877:880,:), 1, count);
  t.a_gxfcmon = read_float(chr2(881:884,:), 1, count);
  t.a_gxfcu = read_float(chr2(885:888,:), 1, count);
  t.a_gxfcu_frac = read_float(chr2(889:892,:), 1, count);
  t.a_gxfcu_full = read_float(chr2(893:896,:), 1, count);
  t.a_gxflpk = read_float(chr2(897:900,:), 1, count);
  t.a_gxflpka = read_float(chr2(901:904,:), 1, count);
  t.a_gxflpkb = read_float(chr2(905:908,:), 1, count);
  t.a_gxflpvenc = read_float(chr2(909:912,:), 1, count);
  t.a_gxflpvenca = read_float(chr2(913:916,:), 1, count);
  t.a_gxflpvencb = read_float(chr2(917:920,:), 1, count);
  t.a_gxhyst1 = read_float(chr2(921:924,:), 1, count);
  t.a_gxhyst2 = read_float(chr2(925:928,:), 1, count);
  t.a_gxkas = read_float(chr2(929:932,:), 1, count);
  t.a_gxkbsdtg = read_float(chr2(933:936,:), 1, count);
  t.a_gxkbsrs = read_float(chr2(937:940,:), 1, count);
  t.a_gxkcs = read_float(chr2(941:944,:), 1, count);
  t.a_gxkdtg = read_float(chr2(945:948,:), 1, count);
  t.a_gxkfs = read_float(chr2(949:952,:), 1, count);
  t.a_gxkill = read_float(chr2(953:956,:), 1, count);
  t.a_gxkrcvn = read_float(chr2(957:960,:), 1, count);
  t.a_gxkrs = read_float(chr2(961:964,:), 1, count);
  t.a_gxks = read_float(chr2(965:968,:), 1, count);
  t.a_gxkse1 = read_float(chr2(969:972,:), 1, count);
  t.a_gxkse2 = read_float(chr2(973:976,:), 1, count);
  t.a_gxkse3 = read_float(chr2(977:980,:), 1, count);
  t.a_gxkse4 = read_float(chr2(981:984,:), 1, count);
  t.a_gxkse5 = read_float(chr2(985:988,:), 1, count);
  t.a_gxkse6 = read_float(chr2(989:992,:), 1, count);
  t.a_gxksp = read_float(chr2(993:996,:), 1, count);
  t.a_gxkssf = read_float(chr2(997:1000,:), 1, count);
  t.a_gxksx1 = read_float(chr2(1001:1004,:), 1, count);
  t.a_gxksx2 = read_float(chr2(1005:1008,:), 1, count);
  t.a_gxksy1 = read_float(chr2(1009:1012,:), 1, count);
  t.a_gxksy2 = read_float(chr2(1013:1016,:), 1, count);
  t.a_gxksz1 = read_float(chr2(1017:1020,:), 1, count);
  t.a_gxksz2 = read_float(chr2(1021:1024,:), 1, count);
  t.a_gxrf1tm = read_float(chr2(1025:1028,:), 1, count);
  t.a_gxrf2cfh = read_float(chr2(1029:1032,:), 1, count);
  t.a_gxrfsx1 = read_float(chr2(1033:1036,:), 1, count);
  t.a_gxrfsx2 = read_float(chr2(1037:1040,:), 1, count);
  t.a_gxspiral = read_float(chr2(1041:1044,:), 1, count);
  t.a_gxspiral2 = read_float(chr2(1045:1048,:), 1, count);
  t.a_gxspoil = read_float(chr2(1049:1052,:), 1, count);
  t.a_gxspoil2 = read_float(chr2(1053:1056,:), 1, count);
  t.a_gxw = read_float(chr2(1057:1060,:), 1, count);
  t.a_gxw1ftg = read_float(chr2(1061:1064,:), 1, count);
  t.a_gxw1xtg = read_float(chr2(1065:1068,:), 1, count);
  t.a_gxw2 = read_float(chr2(1069:1072,:), 1, count);
  t.a_gxw2dtg = read_float(chr2(1073:1076,:), 1, count);
  t.a_gxw2ftg = read_float(chr2(1077:1080,:), 1, count);
  t.a_gxw2rs = read_float(chr2(1081:1084,:), 1, count);
  t.a_gxwas = read_float(chr2(1085:1088,:), 1, count);
  t.a_gxwdtg = read_float(chr2(1089:1092,:), 1, count);
  t.a_gxwex = read_float(chr2(1093:1096,:), 1, count);
  t.a_gxwmon = read_float(chr2(1097:1100,:), 1, count);
  t.a_gxwmps1 = read_float(chr2(1101:1104,:), 1, count);
  t.a_gxwrs = read_float(chr2(1105:1108,:), 1, count);
  t.a_gy1 = read_float(chr2(1109:1112,:), 1, count);
  t.a_gy1a = read_float(chr2(1113:1116,:), 1, count);
  t.a_gy1as = read_float(chr2(1117:1120,:), 1, count);
  t.a_gy1asa = read_float(chr2(1121:1124,:), 1, count);
  t.a_gy1asb = read_float(chr2(1125:1128,:), 1, count);
  t.a_gy1b = read_float(chr2(1129:1132,:), 1, count);
  t.a_gy1cfh = read_float(chr2(1133:1136,:), 1, count);
  t.a_gy1dtg = read_float(chr2(1137:1140,:), 1, count);
  t.a_gy1dtga = read_float(chr2(1141:1144,:), 1, count);
  t.a_gy1dtgb = read_float(chr2(1145:1148,:), 1, count);
  t.a_gy1mon = read_float(chr2(1149:1152,:), 1, count);
  t.a_gy1mps1 = read_float(chr2(1153:1156,:), 1, count);
  t.a_gy1r = read_float(chr2(1157:1160,:), 1, count);
  t.a_gy1ra = read_float(chr2(1161:1164,:), 1, count);
  t.a_gy1ras = read_float(chr2(1165:1168,:), 1, count);
  t.a_gy1rasa = read_float(chr2(1169:1172,:), 1, count);
  t.a_gy1rasb = read_float(chr2(1173:1176,:), 1, count);
  t.a_gy1rb = read_float(chr2(1177:1180,:), 1, count);
  t.a_gy1rdtg = read_float(chr2(1181:1184,:), 1, count);
  t.a_gy1rdtga = read_float(chr2(1185:1188,:), 1, count);
  t.a_gy1rdtgb = read_float(chr2(1189:1192,:), 1, count);
  t.a_gy1rrs = read_float(chr2(1193:1196,:), 1, count);
  t.a_gy1rrsa = read_float(chr2(1197:1200,:), 1, count);
  t.a_gy1rrsb = read_float(chr2(1201:1204,:), 1, count);
  t.a_gy1rs = read_float(chr2(1205:1208,:), 1, count);
  t.a_gy1rsa = read_float(chr2(1209:1212,:), 1, count);
  t.a_gy1rsb = read_float(chr2(1213:1216,:), 1, count);
  t.a_gy1tm = read_float(chr2(1217:1220,:), 1, count);
  t.a_gy2dtg = read_float(chr2(1221:1224,:), 1, count);
  t.a_gy2dtga = read_float(chr2(1225:1228,:), 1, count);
  t.a_gy2dtgb = read_float(chr2(1229:1232,:), 1, count);
  t.a_gy2rs = read_float(chr2(1233:1236,:), 1, count);
  t.a_gy2rsa = read_float(chr2(1237:1240,:), 1, count);
  t.a_gy2rsb = read_float(chr2(1241:1244,:), 1, count);
  t.a_gyb = read_float(chr2(1245:1248,:), 1, count);
  t.a_gybrsfc1 = read_float(chr2(1249:1252,:), 1, count);
  t.a_gybrsfc2 = read_float(chr2(1253:1256,:), 1, count);
  t.a_gycylr = read_float(chr2(1257:1260,:), 1, count);
  t.a_gycylrtipup = read_float(chr2(1261:1264,:), 1, count);
  t.a_gyfe = read_float(chr2(1265:1268,:), 1, count);
  t.a_gyfe1 = read_float(chr2(1269:1272,:), 1, count);
  t.a_gyfe2 = read_float(chr2(1273:1276,:), 1, count);
  t.a_gyflpk = read_float(chr2(1277:1280,:), 1, count);
  t.a_gyflpka = read_float(chr2(1281:1284,:), 1, count);
  t.a_gyflpkb = read_float(chr2(1285:1288,:), 1, count);
  t.a_gyflpvenc = read_float(chr2(1289:1292,:), 1, count);
  t.a_gyflpvenca = read_float(chr2(1293:1296,:), 1, count);
  t.a_gyflpvencb = read_float(chr2(1297:1300,:), 1, count);
  t.a_gyhyst1 = read_float(chr2(1301:1304,:), 1, count);
  t.a_gyhyst2 = read_float(chr2(1305:1308,:), 1, count);
  t.a_gykcfh = read_float(chr2(1309:1312,:), 1, count);
  t.a_gykcfl = read_float(chr2(1313:1316,:), 1, count);
  t.a_gykcs = read_float(chr2(1317:1320,:), 1, count);
  t.a_gykfs = read_float(chr2(1321:1324,:), 1, count);
  t.a_gykill = read_float(chr2(1325:1328,:), 1, count);
  t.a_gykrcvn = read_float(chr2(1329:1332,:), 1, count);
  t.a_gyks = read_float(chr2(1333:1336,:), 1, count);
  t.a_gykse1 = read_float(chr2(1337:1340,:), 1, count);
  t.a_gykse2 = read_float(chr2(1341:1344,:), 1, count);
  t.a_gykse3 = read_float(chr2(1345:1348,:), 1, count);
  t.a_gykse4 = read_float(chr2(1349:1352,:), 1, count);
  t.a_gykse5 = read_float(chr2(1353:1356,:), 1, count);
  t.a_gykse6 = read_float(chr2(1357:1360,:), 1, count);
  t.a_gyksp = read_float(chr2(1361:1364,:), 1, count);
  t.a_gykssf = read_float(chr2(1365:1368,:), 1, count);
  t.a_gyksx1 = read_float(chr2(1369:1372,:), 1, count);
  t.a_gyksx2 = read_float(chr2(1373:1376,:), 1, count);
  t.a_gyksy1 = read_float(chr2(1377:1380,:), 1, count);
  t.a_gyksy2 = read_float(chr2(1381:1384,:), 1, count);
  t.a_gyksz1 = read_float(chr2(1385:1388,:), 1, count);
  t.a_gyksz2 = read_float(chr2(1389:1392,:), 1, count);
  t.a_gykxtgl = read_float(chr2(1393:1396,:), 1, count);
  t.a_gykxtgr = read_float(chr2(1397:1400,:), 1, count);
  t.a_gyrf0kcfh = read_float(chr2(1401:1404,:), 1, count);
  t.a_gyrf1mon = read_float(chr2(1405:1408,:), 1, count);
  t.a_gyrf1mps1 = read_float(chr2(1409:1412,:), 1, count);
  t.a_gyrf1tm = read_float(chr2(1413:1416,:), 1, count);
  t.a_gyrf1xtg = read_float(chr2(1417:1420,:), 1, count);
  t.a_gyrf2cfh = read_float(chr2(1421:1424,:), 1, count);
  t.a_gyrf2lmon = read_float(chr2(1425:1428,:), 1, count);
  t.a_gyrf2mon = read_float(chr2(1429:1432,:), 1, count);
  t.a_gyrf2rmon = read_float(chr2(1433:1436,:), 1, count);
  t.a_gyrf3cfh = read_float(chr2(1437:1440,:), 1, count);
  t.a_gyrfmontipup = read_float(chr2(1441:1444,:), 1, count);
  t.a_gyrfsy1 = read_float(chr2(1445:1448,:), 1, count);
  t.a_gyrfsy2 = read_float(chr2(1449:1452,:), 1, count);
  t.a_gyspiral = read_float(chr2(1453:1456,:), 1, count);
  t.a_gyspiral2 = read_float(chr2(1457:1460,:), 1, count);
  t.a_gyspoil = read_float(chr2(1461:1464,:), 1, count);
  t.a_gyspoil2 = read_float(chr2(1465:1468,:), 1, count);
  t.a_gz1 = read_float(chr2(1469:1472,:), 1, count);
  t.a_gz1as = read_float(chr2(1473:1476,:), 1, count);
  t.a_gz1cfl = read_float(chr2(1477:1480,:), 1, count);
  t.a_gz1d = read_float(chr2(1481:1484,:), 1, count);
  t.a_gz1dtg = read_float(chr2(1485:1488,:), 1, count);
  t.a_gz1ftg = read_float(chr2(1489:1492,:), 1, count);
  t.a_gz1mon = read_float(chr2(1493:1496,:), 1, count);
  t.a_gz1mps1 = read_float(chr2(1497:1500,:), 1, count);
  t.a_gz1rs = read_float(chr2(1501:1504,:), 1, count);
  t.a_gz1s = read_float(chr2(1505:1508,:), 1, count);
  t.a_gz1u = read_float(chr2(1509:1512,:), 1, count);
  t.a_gz1xtg = read_float(chr2(1513:1516,:), 1, count);
  t.a_gz2bftg = read_float(chr2(1517:1520,:), 1, count);
  t.a_gz2ftg = read_float(chr2(1521:1524,:), 1, count);
  t.a_gz2xtg = read_float(chr2(1525:1528,:), 1, count);
  t.a_gz3ftg = read_float(chr2(1529:1532,:), 1, count);
  t.a_gzbrsfc1 = read_float(chr2(1533:1536,:), 1, count);
  t.a_gzbrsfc1echo1 = read_float(chr2(1537:1540,:), 1, count);
  t.a_gzbrsfc1echo2 = read_float(chr2(1541:1544,:), 1, count);
  t.a_gzbrsfc2 = read_float(chr2(1545:1548,:), 1, count);
  t.a_gzcomb = read_float(chr2(1549:1552,:), 1, count);
  t.a_gzcomba = read_float(chr2(1553:1556,:), 1, count);
  t.a_gzcombb = read_float(chr2(1557:1560,:), 1, count);
  t.a_gzcombhtr = read_float(chr2(1561:1564,:), 1, count);
  t.a_gzcombhtra = read_float(chr2(1565:1568,:), 1, count);
  t.a_gzcombhtrb = read_float(chr2(1569:1572,:), 1, count);
  t.a_gzcylr = read_float(chr2(1573:1576,:), 1, count);
  t.a_gzcylrtipup = read_float(chr2(1577:1580,:), 1, count);
  t.a_gzfc = read_float(chr2(1581:1584,:), 1, count);
  t.a_gzfcbase = read_float(chr2(1585:1588,:), 1, count);
  t.a_gzfccomb = read_float(chr2(1589:1592,:), 1, count);
  t.a_gzfcd = read_float(chr2(1593:1596,:), 1, count);
  t.a_gzfcend = read_float(chr2(1597:1600,:), 1, count);
  t.a_gzfcu = read_float(chr2(1601:1604,:), 1, count);
  t.a_gzflpk = read_float(chr2(1605:1608,:), 1, count);
  t.a_gzflpka = read_float(chr2(1609:1612,:), 1, count);
  t.a_gzflpkb = read_float(chr2(1613:1616,:), 1, count);
  t.a_gzflpvenc = read_float(chr2(1617:1620,:), 1, count);
  t.a_gzflpvenca = read_float(chr2(1621:1624,:), 1, count);
  t.a_gzflpvencb = read_float(chr2(1625:1628,:), 1, count);
  t.a_gzk = read_float(chr2(1629:1632,:), 1, count);
  t.a_gzkas = read_float(chr2(1633:1636,:), 1, count);
  t.a_gzkbase = read_float(chr2(1637:1640,:), 1, count);
  t.a_gzkbsdtg = read_float(chr2(1641:1644,:), 1, count);
  t.a_gzkbsrs = read_float(chr2(1645:1648,:), 1, count);
  t.a_gzkcomb = read_float(chr2(1649:1652,:), 1, count);
  t.a_gzkcs = read_float(chr2(1653:1656,:), 1, count);
  t.a_gzkdtg = read_float(chr2(1657:1660,:), 1, count);
  t.a_gzkend = read_float(chr2(1661:1664,:), 1, count);
  t.a_gzkfs = read_float(chr2(1665:1668,:), 1, count);
  t.a_gzkgir01 = read_float(chr2(1669:1672,:), 1, count);
  t.a_gzkgir02 = read_float(chr2(1673:1676,:), 1, count);
  t.a_gzkill = read_float(chr2(1677:1680,:), 1, count);
  t.a_gzkiller = read_float(chr2(1681:1684,:), 1, count);
  t.a_gzkmon = read_float(chr2(1685:1688,:), 1, count);
  t.a_gzkmontipup = read_float(chr2(1689:1692,:), 1, count);
  t.a_gzkrcvn = read_float(chr2(1693:1696,:), 1, count);
  t.a_gzkrffrir = read_float(chr2(1697:1700,:), 1, count);
  t.a_gzkrs = read_float(chr2(1701:1704,:), 1, count);
  t.a_gzks = read_float(chr2(1705:1708,:), 1, count);
  t.a_gzks5fp = read_float(chr2(1709:1712,:), 1, count);
  t.a_gzksp = read_float(chr2(1713:1716,:), 1, count);
  t.a_gzkssf = read_float(chr2(1717:1720,:), 1, count);
  t.a_gzp = read_float(chr2(1721:1724,:), 1, count);
  t.a_gzpa = read_float(chr2(1725:1728,:), 1, count);
  t.a_gzpb = read_float(chr2(1729:1732,:), 1, count);
  t.a_gzphtr = read_float(chr2(1733:1736,:), 1, count);
  t.a_gzphtra = read_float(chr2(1737:1740,:), 1, count);
  t.a_gzphtrb = read_float(chr2(1741:1744,:), 1, count);
  t.a_gzptm = read_float(chr2(1745:1748,:), 1, count);
  t.a_gzrf0 = read_float(chr2(1749:1752,:), 1, count);
  t.a_gzrf0cfh = read_float(chr2(1753:1756,:), 1, count);
  t.a_gzrf0k = read_float(chr2(1757:1760,:), 1, count);
  t.a_gzrf1 = read_float(chr2(1761:1764,:), 1, count);
  t.a_gzrf1_ss_max = read_float(chr2(1765:1768,:), 1, count);
  t.a_gzrf1as = read_float(chr2(1769:1772,:), 1, count);
  t.a_gzrf1cfh = read_float(chr2(1773:1776,:), 1, count);
  t.a_gzrf1cfl = read_float(chr2(1777:1780,:), 1, count);
  t.a_gzrf1dtg = read_float(chr2(1781:1784,:), 1, count);
  t.a_gzrf1ftg = read_float(chr2(1785:1788,:), 1, count);
  t.a_gzrf1htr = read_float(chr2(1789:1792,:), 1, count);
  t.a_gzrf1mon = read_float(chr2(1793:1796,:), 1, count);
  t.a_gzrf1mps1 = read_float(chr2(1797:1800,:), 1, count);
  t.a_gzrf1rs = read_float(chr2(1801:1804,:), 1, count);
  t.a_gzrf1s = read_float(chr2(1805:1808,:), 1, count);
  t.a_gzrf1temp = read_float(chr2(1809:1812,:), 1, count);
  t.a_gzrf1xtg = read_float(chr2(1813:1816,:), 1, count);
  t.a_gzrf2ftg = read_float(chr2(1817:1820,:), 1, count);
  t.a_gzrf2lcfh = read_float(chr2(1821:1824,:), 1, count);
  t.a_gzrf2lmps1 = read_float(chr2(1825:1828,:), 1, count);
  t.a_gzrf2mps1 = read_float(chr2(1829:1832,:), 1, count);
  t.a_gzrf2rcfh = read_float(chr2(1833:1836,:), 1, count);
  t.a_gzrf2rmps1 = read_float(chr2(1837:1840,:), 1, count);
  t.a_gzrf2xtg = read_float(chr2(1841:1844,:), 1, count);
  t.a_gzrf3ftg = read_float(chr2(1845:1848,:), 1, count);
  t.a_gzrf3lcfh = read_float(chr2(1849:1852,:), 1, count);
  t.a_gzrf3rcfh = read_float(chr2(1853:1856,:), 1, count);
  t.a_gzrf4cfh = read_float(chr2(1857:1860,:), 1, count);
  t.a_gzrf4lcfh = read_float(chr2(1861:1864,:), 1, count);
  t.a_gzrf4rcfh = read_float(chr2(1865:1868,:), 1, count);
  t.a_gzrffrir = read_float(chr2(1869:1872,:), 1, count);
  t.a_gzrfgir01 = read_float(chr2(1873:1876,:), 1, count);
  t.a_gzrfgir02 = read_float(chr2(1877:1880,:), 1, count);
  t.a_gzrfs5fph = read_float(chr2(1881:1884,:), 1, count);
  t.a_gzrfse1 = read_float(chr2(1885:1888,:), 1, count);
  t.a_gzrfse2 = read_float(chr2(1889:1892,:), 1, count);
  t.a_gzrfse3 = read_float(chr2(1893:1896,:), 1, count);
  t.a_gzrfse4 = read_float(chr2(1897:1900,:), 1, count);
  t.a_gzrfse5 = read_float(chr2(1901:1904,:), 1, count);
  t.a_gzrfse6 = read_float(chr2(1905:1908,:), 1, count);
  t.a_gzrfssfh = read_float(chr2(1909:1912,:), 1, count);
  t.a_gzrfsz1 = read_float(chr2(1913:1916,:), 1, count);
  t.a_gzrfsz2 = read_float(chr2(1917:1920,:), 1, count);
  t.a_gzs5fphcomb = read_float(chr2(1921:1924,:), 1, count);
  t.a_gzssfhcomb = read_float(chr2(1925:1928,:), 1, count);
  t.a_gzvlw = read_float(chr2(1929:1932,:), 1, count);
  t.a_hard180 = read_float(chr2(1933:1936,:), 1, count);
  t.a_hst = read_float(chr2(1937:1940,:), 1, count);
  t.a_nomcyl = read_float(chr2(1941:1944,:), 1, count);
  t.a_omega_hs_rfcssat = read_float(chr2(1945:1948,:), 1, count);
  t.a_omega_ir0 = read_float(chr2(1949:1952,:), 1, count);
  t.a_omega_rffrir = read_float(chr2(1953:1956,:), 1, count);
  t.a_omega_rfgir01 = read_float(chr2(1957:1960,:), 1, count);
  t.a_omega_rfgir02 = read_float(chr2(1961:1964,:), 1, count);
  t.a_omegarf0cfh = read_float(chr2(1965:1968,:), 1, count);
  t.a_ph180 = read_float(chr2(1969:1972,:), 1, count);
  t.a_postgxw1ftg = read_float(chr2(1973:1976,:), 1, count);
  t.a_rf0 = read_float(chr2(1977:1980,:), 1, count);
  t.a_rf0cfh = read_float(chr2(1981:1984,:), 1, count);
  t.a_rf1 = read_float(chr2(1985:1988,:), 1, count);
  t.a_rf180 = read_float(chr2(1989:1992,:), 1, count);
  t.a_rf1as = read_float(chr2(1993:1996,:), 1, count);
  t.a_rf1cfh = read_float(chr2(1997:2000,:), 1, count);
  t.a_rf1cfl = read_float(chr2(2001:2004,:), 1, count);
  t.a_rf1dtg = read_float(chr2(2005:2008,:), 1, count);
  t.a_rf1ftg = read_float(chr2(2009:2012,:), 1, count);
  t.a_rf1htr = read_float(chr2(2013:2016,:), 1, count);
  t.a_rf1mon = read_float(chr2(2017:2020,:), 1, count);
  t.a_rf1mps1 = read_float(chr2(2021:2024,:), 1, count);
  t.a_rf1rs = read_float(chr2(2025:2028,:), 1, count);
  t.a_rf1tm = read_float(chr2(2029:2032,:), 1, count);
  t.a_rf1xtg = read_float(chr2(2033:2036,:), 1, count);
  t.a_rf2cfh = read_float(chr2(2037:2040,:), 1, count);
  t.a_rf2ftg = read_float(chr2(2041:2044,:), 1, count);
  t.a_rf2mon = read_float(chr2(2045:2048,:), 1, count);
  t.a_rf2mps1 = read_float(chr2(2049:2052,:), 1, count);
  t.a_rf2xtg = read_float(chr2(2053:2056,:), 1, count);
  t.a_rf3cfh = read_float(chr2(2057:2060,:), 1, count);
  t.a_rf3ftg = read_float(chr2(2061:2064,:), 1, count);
  t.a_rf3xtg = read_float(chr2(2065:2068,:), 1, count);
  t.a_rf4cfh = read_float(chr2(2069:2072,:), 1, count);
  t.a_rf4xtg = read_float(chr2(2073:2076,:), 1, count);
  t.a_rf90 = read_float(chr2(2077:2080,:), 1, count);
  t.a_rfbdtg = read_float(chr2(2081:2084,:), 1, count);
  t.a_rfbrs = read_float(chr2(2085:2088,:), 1, count);
  t.a_rfcssat = read_float(chr2(2089:2092,:), 1, count);
  t.a_rfcssatcfh = read_float(chr2(2093:2096,:), 1, count);
  t.a_rfcylr = read_float(chr2(2097:2100,:), 1, count);
  t.a_rfcylrtipup = read_float(chr2(2101:2104,:), 1, count);
  t.a_rfflp180 = read_float(chr2(2105:2108,:), 1, count);
  t.a_rfflp180_the = read_float(chr2(2109:2112,:), 1, count);
  t.a_rfflp90 = read_float(chr2(2113:2116,:), 1, count);
  t.a_rfflp90_the = read_float(chr2(2117:2120,:), 1, count);
  t.a_rfflp90r = read_float(chr2(2121:2124,:), 1, count);
  t.a_rfflp90r_the = read_float(chr2(2125:2128,:), 1, count);
  t.a_rffrir = read_float(chr2(2129:2132,:), 1, count);
  t.a_rffs = read_float(chr2(2133:2136,:), 1, count);
  t.a_rfgir01 = read_float(chr2(2137:2140,:), 1, count);
  t.a_rfgir02 = read_float(chr2(2141:2144,:), 1, count);
  t.a_rfmontipup = read_float(chr2(2145:2148,:), 1, count);
  t.a_rfs5fph = read_float(chr2(2149:2152,:), 1, count);
  t.a_rfse1 = read_float(chr2(2153:2156,:), 1, count);
  t.a_rfse2 = read_float(chr2(2157:2160,:), 1, count);
  t.a_rfse3 = read_float(chr2(2161:2164,:), 1, count);
  t.a_rfse4 = read_float(chr2(2165:2168,:), 1, count);
  t.a_rfse5 = read_float(chr2(2169:2172,:), 1, count);
  t.a_rfse6 = read_float(chr2(2173:2176,:), 1, count);
  t.a_rfssf = read_float(chr2(2177:2180,:), 1, count);
  t.a_rfssfh = read_float(chr2(2181:2184,:), 1, count);
  t.a_rfsx1 = read_float(chr2(2185:2188,:), 1, count);
  t.a_rfsx2 = read_float(chr2(2189:2192,:), 1, count);
  t.a_rfsy1 = read_float(chr2(2193:2196,:), 1, count);
  t.a_rfsy2 = read_float(chr2(2197:2200,:), 1, count);
  t.a_rfsz1 = read_float(chr2(2201:2204,:), 1, count);
  t.a_rfsz2 = read_float(chr2(2205:2208,:), 1, count);
  t.a_rftipup = read_float(chr2(2209:2212,:), 1, count);
  t.a_sdixon = read_float(chr2(2213:2216,:), 1, count);
  t.a_sdixon2 = read_float(chr2(2217:2220,:), 1, count);
  t.a_thcylr = read_float(chr2(2221:2224,:), 1, count);
  t.a_thcylrtipup = read_float(chr2(2225:2228,:), 1, count);
  t.a_thetarf1 = read_float(chr2(2229:2232,:), 1, count);
  t.a_xdixon = read_float(chr2(2233:2236,:), 1, count);
  t.a_ydixon = read_float(chr2(2237:2240,:), 1, count);
  t.a_zdixon = read_float(chr2(2241:2244,:), 1, count);
  t.ab1_enable = read_int(chr2(2245:2248,:), 1, count);
  t.abspower_lx = read_float(chr2(2249:2252,:), 1, count);
  t.abspower_ly = read_float(chr2(2253:2256,:), 1, count);
  t.abspower_lz = read_float(chr2(2257:2260,:), 1, count);
  t.abspower_px = read_float(chr2(2261:2264,:), 1, count);
  t.abspower_py = read_float(chr2(2265:2268,:), 1, count);
  t.abspower_pz = read_float(chr2(2269:2272,:), 1, count);
  t.accel_kt_cal_stride = read_int(chr2(2273:2276,:), 1, count);
  t.accel_outer2cal_factor = read_int(chr2(2277:2280,:), 1, count);
  t.accel_ph_defstride = read_float(chr2(2281:2284,:), 1, count);
  t.accel_ph_stride = read_float(chr2(2285:2288,:), 1, count);
  t.accel_phaseres = read_int(chr2(2289:2292,:), 1, count);
  t.accel_sl_defstride = read_float(chr2(2293:2296,:), 1, count);
  t.accel_sl_stride = read_float(chr2(2297:2300,:), 1, count);
  t.acgd_lite_target = read_float(chr2(2301:2304,:), 1, count);
  t.acq_data_only = read_int(chr2(2305:2308,:), 1, count);
  t.acq_type = read_int(chr2(2309:2312,:), 1, count);
  t.acqs = read_int(chr2(2313:2316,:), 1, count);
  t.acquire_type = read_int(chr2(2317:2320,:), 1, count);
  t.act_aregion_fraction = read_float(chr2(2321:2324,:), 1, count);
  t.act_echofrac = read_float(chr2(2325:2328,:), 1, count);
  t.act_htr = read_int(chr2(2329:2332,:), 1, count);
  t.act_navgate_tr = read_int(chr2(2333:2336,:), 1, count);
  t.act_scamp = read_float(chr2(2337:2340,:), 1, count);
  t.act_srate = read_float(chr2(2341:2344,:), 1, count);
  t.act_srate_x = read_float(chr2(2345:2348,:), 1, count);
  t.act_srate_y = read_float(chr2(2349:2352,:), 1, count);
  t.act_srate_z = read_float(chr2(2353:2356,:), 1, count);
  t.act_te = read_int(chr2(2357:2360,:), 1, count);
  t.act_te2 = read_int(chr2(2361:2364,:), 1, count);
  t.act_te_cylr = read_int(chr2(2365:2368,:), 1, count);
  t.act_tr = read_int(chr2(2369:2372,:), 1, count);
  t.add_slicereadgap = read_int(chr2(2373:2376,:), 1, count);
  t.add_tetime = read_int(chr2(2377:2380,:), 1, count);
  t.adj_act_tr = read_int(chr2(2381:2384,:), 1, count);
  t.allow_ugfsf = read_int(chr2(2385:2388,:), 1, count);
  t.alpha_rf0 = read_float(chr2(2389:2392,:), 1, count);
  t.alpha_rf0cfh = read_float(chr2(2393:2396,:), 1, count);
  t.alpha_rf1 = read_float(chr2(2397:2400,:), 1, count);
  t.alpha_rf1as = read_float(chr2(2401:2404,:), 1, count);
  t.alpha_rf1cfh = read_float(chr2(2405:2408,:), 1, count);
  t.alpha_rf1cfl = read_float(chr2(2409:2412,:), 1, count);
  t.alpha_rf1ftg = read_float(chr2(2413:2416,:), 1, count);
  t.alpha_rf1mon = read_float(chr2(2417:2420,:), 1, count);
  t.alpha_rf1mps1 = read_float(chr2(2421:2424,:), 1, count);
  t.alpha_rf1tm = read_float(chr2(2425:2428,:), 1, count);
  t.alpha_rf1xtg = read_float(chr2(2429:2432,:), 1, count);
  t.alpha_rf2cfh = read_float(chr2(2433:2436,:), 1, count);
  t.alpha_rf2ftg = read_float(chr2(2437:2440,:), 1, count);
  t.alpha_rf2mon = read_float(chr2(2441:2444,:), 1, count);
  t.alpha_rf2mps1 = read_float(chr2(2445:2448,:), 1, count);
  t.alpha_rf2xtg = read_float(chr2(2449:2452,:), 1, count);
  t.alpha_rf3cfh = read_float(chr2(2453:2456,:), 1, count);
  t.alpha_rf3ftg = read_float(chr2(2457:2460,:), 1, count);
  t.alpha_rf3xtg = read_float(chr2(2461:2464,:), 1, count);
  t.alpha_rf4cfh = read_float(chr2(2465:2468,:), 1, count);
  t.alpha_rf4xtg = read_float(chr2(2469:2472,:), 1, count);
  t.alpha_rfcssat = read_float(chr2(2473:2476,:), 1, count);
  t.alpha_rffrir = read_float(chr2(2477:2480,:), 1, count);
  t.alpha_rfgir01 = read_float(chr2(2481:2484,:), 1, count);
  t.alpha_rfgir02 = read_float(chr2(2485:2488,:), 1, count);
  t.alpha_rfmontipup = read_float(chr2(2489:2492,:), 1, count);
  t.alpha_rfse1 = read_float(chr2(2493:2496,:), 1, count);
  t.alpha_rfse2 = read_float(chr2(2497:2500,:), 1, count);
  t.alpha_rfse3 = read_float(chr2(2501:2504,:), 1, count);
  t.alpha_rfse4 = read_float(chr2(2505:2508,:), 1, count);
  t.alpha_rfse5 = read_float(chr2(2509:2512,:), 1, count);
  t.alpha_rfse6 = read_float(chr2(2513:2516,:), 1, count);
  t.alpha_rfsx1 = read_float(chr2(2517:2520,:), 1, count);
  t.alpha_rfsx2 = read_float(chr2(2521:2524,:), 1, count);
  t.alpha_rfsy1 = read_float(chr2(2525:2528,:), 1, count);
  t.alpha_rfsy2 = read_float(chr2(2529:2532,:), 1, count);
  t.alpha_rfsz1 = read_float(chr2(2533:2536,:), 1, count);
  t.alpha_rfsz2 = read_float(chr2(2537:2540,:), 1, count);
  t.amp_flpvenc_limit = read_float(chr2(2541:2544,:), 1, count);
  t.amp_flpvenc_max = read_float(chr2(2545:2548,:), 1, count);
  t.amptrans_lx = read_float(chr2(2549:2552,:), 1, count);
  t.amptrans_ly = read_float(chr2(2553:2556,:), 1, count);
  t.amptrans_lz = read_float(chr2(2557:2560,:), 1, count);
  t.amptrans_px = read_float(chr2(2561:2564,:), 1, count);
  t.amptrans_py = read_float(chr2(2565:2568,:), 1, count);
  t.amptrans_pz = read_float(chr2(2569:2572,:), 1, count);
  t.anne_channel_percentage = read_float(chr2(2573:2576,:), 1, count);
  t.anne_intensity_thres = read_float(chr2(2577:2580,:), 1, count);
  t.anne_mask_dilation_length = read_int(chr2(2581:2584,:), 1, count);
  t.annefact_c3_recon_flag = read_int(chr2(2585:2588,:), 1, count);
  t.annefact_reduction_flag = read_int(chr2(2589:2592,:), 1, count);
  t.ap_flow = read_int(chr2(2593:2596,:), 1, count);
  t.aphases_max = read_int(chr2(2597:2600,:), 1, count);
  t.apodize_level_flag = read_int(chr2(2601:2604,:), 1, count);
  t.app_grad_type = read_int(chr2(2605:2608,:), 1, count);
  t.apx_compatible = read_int(chr2(2609:2612,:), 1, count);
  t.apx_cveval_counter = read_int(chr2(2613:2616,:), 1, count);
  t.arc_cal_echo = read_int(chr2(2617:2620,:), 1, count);
  t.arc_debug_files = read_int(chr2(2621:2624,:), 1, count);
  t.arc_equant = read_int(chr2(2625:2628,:), 1, count);
  t.arc_flag = read_int(chr2(2629:2632,:), 1, count);
  t.arc_maxnetaccel = read_float(chr2(2633:2636,:), 1, count);
  t.arc_netaccel = read_float(chr2(2637:2640,:), 1, count);
  t.arc_pack_bam = read_int(chr2(2641:2644,:), 1, count);
  t.arc_ph_calwidth = read_int(chr2(2645:2648,:), 1, count);
  t.arc_ph_intaccel = read_int(chr2(2649:2652,:), 1, count);
  t.arc_ph_maxnetaccel = read_float(chr2(2653:2656,:), 1, count);
  t.arc_ph_maxstride = read_float(chr2(2657:2660,:), 1, count);
  t.arc_ph_mincalwidth = read_int(chr2(2661:2664,:), 1, count);
  t.arc_ph_netaccel = read_float(chr2(2665:2668,:), 1, count);
  t.arc_ph_reclimstride = read_float(chr2(2669:2672,:), 1, count);
  t.arc_ph_recstride = read_float(chr2(2673:2676,:), 1, count);
  t.arc_ph_stride = read_float(chr2(2677:2680,:), 1, count);
  t.arc_ph_userstride = read_float(chr2(2681:2684,:), 1, count);
  t.arc_reclimnetaccel = read_float(chr2(2685:2688,:), 1, count);
  t.arc_recnetaccel = read_float(chr2(2689:2692,:), 1, count);
  t.arc_research_flag = read_int(chr2(2693:2696,:), 1, count);
  t.arc_sl_calwidth = read_int(chr2(2697:2700,:), 1, count);
  t.arc_sl_intaccel = read_int(chr2(2701:2704,:), 1, count);
  t.arc_sl_maxnetaccel = read_float(chr2(2705:2708,:), 1, count);
  t.arc_sl_maxstride = read_float(chr2(2709:2712,:), 1, count);
  t.arc_sl_mincalwidth = read_int(chr2(2713:2716,:), 1, count);
  t.arc_sl_netaccel = read_float(chr2(2717:2720,:), 1, count);
  t.arc_sl_reclimstride = read_float(chr2(2721:2724,:), 1, count);
  t.arc_sl_recstride = read_float(chr2(2725:2728,:), 1, count);
  t.arc_sl_stride = read_float(chr2(2729:2732,:), 1, count);
  t.arc_sl_userstride = read_float(chr2(2733:2736,:), 1, count);
  t.arc_syn_pts = read_int(chr2(2737:2740,:), 1, count);
  t.area_de = read_float(chr2(2741:2744,:), 1, count);
  t.area_flpk = read_float(chr2(2745:2748,:), 1, count);
  t.area_flpvenc_std = read_float(chr2(2749:2752,:), 1, count);
  t.area_gx1 = read_float(chr2(2753:2756,:), 1, count);
  t.area_gx2 = read_float(chr2(2757:2760,:), 1, count);
  t.area_gxfc = read_float(chr2(2761:2764,:), 1, count);
  t.area_gxkcs = read_float(chr2(2765:2768,:), 1, count);
  t.area_gxkfs = read_float(chr2(2769:2772,:), 1, count);
  t.area_gxkrcvn = read_float(chr2(2773:2776,:), 1, count);
  t.area_gxks = read_float(chr2(2777:2780,:), 1, count);
  t.area_gxkse1 = read_float(chr2(2781:2784,:), 1, count);
  t.area_gxkse2 = read_float(chr2(2785:2788,:), 1, count);
  t.area_gxkse3 = read_float(chr2(2789:2792,:), 1, count);
  t.area_gxkse4 = read_float(chr2(2793:2796,:), 1, count);
  t.area_gxkse5 = read_float(chr2(2797:2800,:), 1, count);
  t.area_gxkse6 = read_float(chr2(2801:2804,:), 1, count);
  t.area_gxkssf = read_float(chr2(2805:2808,:), 1, count);
  t.area_gxksx1 = read_float(chr2(2809:2812,:), 1, count);
  t.area_gxksx2 = read_float(chr2(2813:2816,:), 1, count);
  t.area_gxksy1 = read_float(chr2(2817:2820,:), 1, count);
  t.area_gxksy2 = read_float(chr2(2821:2824,:), 1, count);
  t.area_gxksz1 = read_float(chr2(2825:2828,:), 1, count);
  t.area_gxksz2 = read_float(chr2(2829:2832,:), 1, count);
  t.area_gxw = read_float(chr2(2833:2836,:), 1, count);
  t.area_gxwas = read_float(chr2(2837:2840,:), 1, count);
  t.area_gxwex = read_float(chr2(2841:2844,:), 1, count);
  t.area_gy1grad = read_float(chr2(2845:2848,:), 1, count);
  t.area_gy1table = read_float(chr2(2849:2852,:), 1, count);
  t.area_gyakfs = read_float(chr2(2853:2856,:), 1, count);
  t.area_gyakssf = read_float(chr2(2857:2860,:), 1, count);
  t.area_gykcfh = read_float(chr2(2861:2864,:), 1, count);
  t.area_gykcfl = read_float(chr2(2865:2868,:), 1, count);
  t.area_gykcs = read_float(chr2(2869:2872,:), 1, count);
  t.area_gykfs = read_float(chr2(2873:2876,:), 1, count);
  t.area_gykrcvn = read_float(chr2(2877:2880,:), 1, count);
  t.area_gyks = read_float(chr2(2881:2884,:), 1, count);
  t.area_gykse1 = read_float(chr2(2885:2888,:), 1, count);
  t.area_gykse2 = read_float(chr2(2889:2892,:), 1, count);
  t.area_gykse3 = read_float(chr2(2893:2896,:), 1, count);
  t.area_gykse4 = read_float(chr2(2897:2900,:), 1, count);
  t.area_gykse5 = read_float(chr2(2901:2904,:), 1, count);
  t.area_gykse6 = read_float(chr2(2905:2908,:), 1, count);
  t.area_gykssf = read_float(chr2(2909:2912,:), 1, count);
  t.area_gyksx1 = read_float(chr2(2913:2916,:), 1, count);
  t.area_gyksx2 = read_float(chr2(2917:2920,:), 1, count);
  t.area_gyksy1 = read_float(chr2(2921:2924,:), 1, count);
  t.area_gyksy2 = read_float(chr2(2925:2928,:), 1, count);
  t.area_gyksz1 = read_float(chr2(2929:2932,:), 1, count);
  t.area_gyksz2 = read_float(chr2(2933:2936,:), 1, count);
  t.area_gz1 = read_float(chr2(2937:2940,:), 1, count);
  t.area_gz1as = read_float(chr2(2941:2944,:), 1, count);
  t.area_gzfc = read_float(chr2(2945:2948,:), 1, count);
  t.area_gzk = read_float(chr2(2949:2952,:), 1, count);
  t.area_gzkcs = read_float(chr2(2953:2956,:), 1, count);
  t.area_gzkfs = read_float(chr2(2957:2960,:), 1, count);
  t.area_gzkgir01 = read_float(chr2(2961:2964,:), 1, count);
  t.area_gzkgir02 = read_float(chr2(2965:2968,:), 1, count);
  t.area_gzkmon = read_float(chr2(2969:2972,:), 1, count);
  t.area_gzkmontipup = read_float(chr2(2973:2976,:), 1, count);
  t.area_gzkrcvn = read_float(chr2(2977:2980,:), 1, count);
  t.area_gzks = read_float(chr2(2981:2984,:), 1, count);
  t.area_gzks5fp = read_float(chr2(2985:2988,:), 1, count);
  t.area_gzkssf = read_float(chr2(2989:2992,:), 1, count);
  t.area_gzrf0k = read_float(chr2(2993:2996,:), 1, count);
  t.area_hst = read_float(chr2(2997:3000,:), 1, count);
  t.area_killerx = read_float(chr2(3001:3004,:), 1, count);
  t.area_killery = read_float(chr2(3005:3008,:), 1, count);
  t.area_killerz = read_float(chr2(3009:3012,:), 1, count);
  t.area_readrampas = read_float(chr2(3013:3016,:), 1, count);
  t.area_rf1 = read_float(chr2(3017:3020,:), 1, count);
  t.area_rf11 = read_float(chr2(3021:3024,:), 1, count);
  t.area_rffs = read_float(chr2(3025:3028,:), 1, count);
  t.area_rfse1 = read_float(chr2(3029:3032,:), 1, count);
  t.area_rfse2 = read_float(chr2(3033:3036,:), 1, count);
  t.area_rfse3 = read_float(chr2(3037:3040,:), 1, count);
  t.area_rfse4 = read_float(chr2(3041:3044,:), 1, count);
  t.area_rfse5 = read_float(chr2(3045:3048,:), 1, count);
  t.area_rfse6 = read_float(chr2(3049:3052,:), 1, count);
  t.area_rfssf = read_float(chr2(3053:3056,:), 1, count);
  t.area_rfssfh = read_float(chr2(3057:3060,:), 1, count);
  t.area_rfsx1 = read_float(chr2(3061:3064,:), 1, count);
  t.area_rfsx2 = read_float(chr2(3065:3068,:), 1, count);
  t.area_rfsy1 = read_float(chr2(3069:3072,:), 1, count);
  t.area_rfsy2 = read_float(chr2(3073:3076,:), 1, count);
  t.area_rfsz1 = read_float(chr2(3077:3080,:), 1, count);
  t.area_rfsz2 = read_float(chr2(3081:3084,:), 1, count);
  t.area_spoilerx = read_float(chr2(3085:3088,:), 1, count);
  t.area_spoilery = read_float(chr2(3089:3092,:), 1, count);
  t.area_spoilerz = read_float(chr2(3093:3096,:), 1, count);
  t.area_xtgykiller = read_float(chr2(3097:3100,:), 1, count);
  t.area_xtgzkiller = read_float(chr2(3101:3104,:), 1, count);
  t.aregion_fraction = read_float(chr2(3105:3108,:), 1, count);
  t.arr_check = read_int(chr2(3109:3112,:), 1, count);
  t.as_dda = read_int(chr2(3113:3116,:), 1, count);
  t.as_newgeo = read_int(chr2(3117:3120,:), 1, count);
  t.asbaseline = read_int(chr2(3121:3124,:), 1, count);
  t.asflip = read_float(chr2(3125:3128,:), 1, count);
  t.asfov = read_float(chr2(3129:3132,:), 1, count);
  t.aslenap = read_float(chr2(3133:3136,:), 1, count);
  t.aslenrl = read_float(chr2(3137:3140,:), 1, count);
  t.aslensi = read_float(chr2(3141:3144,:), 1, count);
  t.aslocap = read_float(chr2(3145:3148,:), 1, count);
  t.aslocrl = read_float(chr2(3149:3152,:), 1, count);
  t.aslocsi = read_float(chr2(3153:3156,:), 1, count);
  t.asloggrd = read_LOG_GRAD(chr2(3157:3456,:), 1, count);
  t.asobl_debug = read_int(chr2(3457:3460,:), 1, count);
  t.aspir_fa_scaling_flag = read_int(chr2(3461:3464,:), 1, count);
  t.aspir_flag = read_int(chr2(3465:3468,:), 1, count);
  t.aspir_override = read_int(chr2(3469:3472,:), 1, count);
  t.asptsize = read_int(chr2(3473:3476,:), 1, count);
  t.asrhblank = read_int(chr2(3477:3480,:), 1, count);
  t.asset_factor = read_float(chr2(3481:3484,:), 1, count);
  t.asset_supported_direction = read_int(chr2(3485:3488,:), 1, count);
  t.assetph_flag = read_int(chr2(3489:3492,:), 1, count);
  t.assetsl_factor = read_float(chr2(3493:3496,:), 1, count);
  t.assetsl_flag = read_int(chr2(3497:3500,:), 1, count);
  t.assetsl_min_opvthick = read_float(chr2(3501:3504,:), 1, count);
  t.asslquant = read_int(chr2(3505:3508,:), 1, count);
  t.asslthick = read_float(chr2(3509:3512,:), 1, count);
  t.asx_killer_area = read_float(chr2(3513:3516,:), 1, count);
  t.asxres = read_int(chr2(3517:3520,:), 1, count);
  t.asymmatrix = read_int(chr2(3521:3524,:), 1, count);
  t.asyres = read_int(chr2(3525:3528,:), 1, count);
  t.asz_killer_area = read_float(chr2(3529:3532,:), 1, count);
  t.attenlen = read_int(chr2(3533:3536,:), 1, count);
  t.attenlength = read_int(chr2(3537:3540,:), 1, count);
  t.audible_loop = read_int(chr2(3541:3544,:), 1, count);
  t.autoadvtoscn = read_int(chr2(3545:3548,:), 1, count);
  t.autocal_mode = read_int(chr2(3549:3552,:), 1, count);
  t.autolock = read_int(chr2(3553:3556,:), 1, count);
  t.autoparams_debug = read_int(chr2(3557:3560,:), 1, count);
  t.avail_RRtime = read_float(chr2(3561:3564,:), 1, count);
  t.avail_image_time = read_int(chr2(3565:3568,:), 1, count);
  t.avail_pwgx1as = read_int(chr2(3569:3572,:), 1, count);
  t.avail_pwgz1as = read_int(chr2(3573:3576,:), 1, count);
  t.avail_temp = read_int(chr2(3577:3580,:), 1, count);
  t.ave_grady_gy1_scale = read_float(chr2(3581:3584,:), 1, count);
  t.ave_gradz_gzcomb_scale = read_float(chr2(3585:3588,:), 1, count);
  t.ave_gradz_gzp_scale = read_float(chr2(3589:3592,:), 1, count);
  t.avecrushpepowscale_for_SBM_XFD = read_int(chr2(3593:3596,:), 1, count);
  t.avmax_dda = read_float(chr2(3597:3600,:), 1, count);
  t.avmaxaccel_cs_stride = read_float(chr2(3601:3604,:), 1, count);
  t.avmaxaccel_kt_stride = read_float(chr2(3605:3608,:), 1, count);
  t.avmaxaccel_mb_stride = read_float(chr2(3609:3612,:), 1, count);
  t.avmaxaccel_ph_stride = read_float(chr2(3613:3616,:), 1, count);
  t.avmaxaccel_sl_stride = read_float(chr2(3617:3620,:), 1, count);
  t.avmaxaccel_t_stride = read_float(chr2(3621:3624,:), 1, count);
  t.avmaxacqs = read_int(chr2(3625:3628,:), 1, count);
  t.avmaxallowedrescantime = read_int(chr2(3629:3632,:), 1, count);
  t.avmaxaphases = read_int(chr2(3633:3636,:), 1, count);
  t.avmaxbspti = read_int(chr2(3637:3640,:), 1, count);
  t.avmaxbval = read_int(chr2(3641:3644,:), 1, count);
  t.avmaxbvalstab = read_float(chr2(3645:3648,:), 1, count);
  t.avmaxdifnext2 = read_float(chr2(3649:3652,:), 1, count);
  t.avmaxdifnextab = read_int(chr2(3653:3656,:), 1, count);
  t.avmaxetl = read_int(chr2(3657:3660,:), 1, count);
  t.avmaxflip = read_float(chr2(3661:3664,:), 1, count);
  t.avmaxfov = read_float(chr2(3665:3668,:), 1, count);
  t.avmaxfphases = read_int(chr2(3669:3672,:), 1, count);
  t.avmaxnavaccwin = read_float(chr2(3673:3676,:), 1, count);
  t.avmaxnavautotrigtime = read_int(chr2(3677:3680,:), 1, count);
  t.avmaxnavmaxinterval = read_int(chr2(3681:3684,:), 1, count);
  t.avmaxnavpsctime = read_int(chr2(3685:3688,:), 1, count);
  t.avmaxnavrrmeastime = read_int(chr2(3689:3692,:), 1, count);
  t.avmaxnecho = read_int(chr2(3693:3696,:), 1, count);
  t.avmaxnex = read_float(chr2(3697:3700,:), 1, count);
  t.avmaxnseg = read_int(chr2(3701:3704,:), 1, count);
  t.avmaxnshots = read_int(chr2(3705:3708,:), 1, count);
  t.avmaxnspokes = read_int(chr2(3709:3712,:), 1, count);
  t.avmaxnumbvals = read_int(chr2(3713:3716,:), 1, count);
  t.avmaxnumsynbvals = read_int(chr2(3717:3720,:), 1, count);
  t.avmaxoversamplingfactor = read_float(chr2(3721:3724,:), 1, count);
  t.avmaxovl = read_int(chr2(3725:3728,:), 1, count);
  t.avmaxphasefov = read_float(chr2(3729:3732,:), 1, count);
  t.avmaxphases = read_int(chr2(3733:3736,:), 1, count);
  t.avmaxphassetfac = read_float(chr2(3737:3740,:), 1, count);
  t.avmaxrbw = read_float(chr2(3741:3744,:), 1, count);
  t.avmaxrbw2 = read_float(chr2(3745:3748,:), 1, count);
  t.avmaxrbw_system = read_float(chr2(3749:3752,:), 1, count);
  t.avmaxrep_active = read_float(chr2(3753:3756,:), 1, count);
  t.avmaxrep_rest = read_float(chr2(3757:3760,:), 1, count);
  t.avmaxslassetfac = read_float(chr2(3761:3764,:), 1, count);
  t.avmaxsldelay = read_int(chr2(3765:3768,:), 1, count);
  t.avmaxslicecnt = read_int(chr2(3769:3772,:), 1, count);
  t.avmaxslquant = read_int(chr2(3773:3776,:), 1, count);
  t.avmaxslspace = read_float(chr2(3777:3780,:), 1, count);
  t.avmaxslthick = read_float(chr2(3781:3784,:), 1, count);
  t.avmaxsynbvalstab = read_float(chr2(3785:3788,:), 1, count);
  t.avmaxt2prepte = read_int(chr2(3789:3792,:), 1, count);
  t.avmaxtdel1 = read_int(chr2(3793:3796,:), 1, count);
  t.avmaxte = read_int(chr2(3797:3800,:), 1, count);
  t.avmaxte2 = read_int(chr2(3801:3804,:), 1, count);
  t.avmaxti = read_int(chr2(3805:3808,:), 1, count);
  t.avmaxtissuet1 = read_int(chr2(3809:3812,:), 1, count);
  t.avmaxtlabel = read_int(chr2(3813:3816,:), 1, count);
  t.avmaxtouchamp = read_int(chr2(3817:3820,:), 1, count);
  t.avmaxtouchcyc = read_int(chr2(3821:3824,:), 1, count);
  t.avmaxtouchfreq = read_int(chr2(3825:3828,:), 1, count);
  t.avmaxtouchmegfreq = read_int(chr2(3829:3832,:), 1, count);
  t.avmaxtouchtphases = read_int(chr2(3833:3836,:), 1, count);
  t.avmaxtphases = read_int(chr2(3837:3840,:), 1, count);
  t.avmaxtr = read_int(chr2(3841:3844,:), 1, count);
  t.avmaxtrecovery = read_int(chr2(3845:3848,:), 1, count);
  t.avmaxtricksdel = read_int(chr2(3849:3852,:), 1, count);
  t.avmaxtseq = read_int(chr2(3853:3856,:), 1, count);
  t.avmaxvenc = read_float(chr2(3857:3860,:), 1, count);
  t.avmaxvest = read_float(chr2(3861:3864,:), 1, count);
  t.avmaxvquant = read_int(chr2(3865:3868,:), 1, count);
  t.avmaxvsphases = read_int(chr2(3869:3872,:), 1, count);
  t.avmaxxres = read_int(chr2(3873:3876,:), 1, count);
  t.avmaxyres = read_int(chr2(3877:3880,:), 1, count);
  t.avmin_dda = read_float(chr2(3881:3884,:), 1, count);
  t.avminaccel_cs_stride = read_float(chr2(3885:3888,:), 1, count);
  t.avminaccel_kt_stride = read_float(chr2(3889:3892,:), 1, count);
  t.avminaccel_mb_stride = read_float(chr2(3893:3896,:), 1, count);
  t.avminaccel_ph_stride = read_float(chr2(3897:3900,:), 1, count);
  t.avminaccel_sl_stride = read_float(chr2(3901:3904,:), 1, count);
  t.avminaccel_t_stride = read_float(chr2(3905:3908,:), 1, count);
  t.avminallowedrescantime = read_int(chr2(3909:3912,:), 1, count);
  t.avminaphases = read_int(chr2(3913:3916,:), 1, count);
  t.avminbspti = read_int(chr2(3917:3920,:), 1, count);
  t.avminbval = read_int(chr2(3921:3924,:), 1, count);
  t.avminbvalstab = read_float(chr2(3925:3928,:), 1, count);
  t.avmindifnext2 = read_float(chr2(3929:3932,:), 1, count);
  t.avmindifnextab = read_int(chr2(3933:3936,:), 1, count);
  t.avmindphases = read_int(chr2(3937:3940,:), 1, count);
  t.avminetl = read_int(chr2(3941:3944,:), 1, count);
  t.avminflip = read_float(chr2(3945:3948,:), 1, count);
  t.avminfov = read_float(chr2(3949:3952,:), 1, count);
  t.avminfphases = read_int(chr2(3953:3956,:), 1, count);
  t.avminnavaccwin = read_float(chr2(3957:3960,:), 1, count);
  t.avminnavautotrigtime = read_int(chr2(3961:3964,:), 1, count);
  t.avminnavmaxinterval = read_int(chr2(3965:3968,:), 1, count);
  t.avminnavpsctime = read_int(chr2(3969:3972,:), 1, count);
  t.avminnavrrmeastime = read_int(chr2(3973:3976,:), 1, count);
  t.avminnecho = read_int(chr2(3977:3980,:), 1, count);
  t.avminnex = read_float(chr2(3981:3984,:), 1, count);
  t.avminnseg = read_int(chr2(3985:3988,:), 1, count);
  t.avminnshots = read_int(chr2(3989:3992,:), 1, count);
  t.avminnspokes = read_int(chr2(3993:3996,:), 1, count);
  t.avminnumbvals = read_int(chr2(3997:4000,:), 1, count);
  t.avminnumsynbvals = read_int(chr2(4001:4004,:), 1, count);
  t.avminoversamplingfactor = read_float(chr2(4005:4008,:), 1, count);
  t.avminphasefov = read_float(chr2(4009:4012,:), 1, count);
  t.avminphases = read_int(chr2(4013:4016,:), 1, count);
  t.avminphassetfac = read_float(chr2(4017:4020,:), 1, count);
  t.avminrbw = read_float(chr2(4021:4024,:), 1, count);
  t.avminrbw2 = read_float(chr2(4025:4028,:), 1, count);
  t.avminrep_active = read_float(chr2(4029:4032,:), 1, count);
  t.avminrep_rest = read_float(chr2(4033:4036,:), 1, count);
  t.avminrttseq = read_int(chr2(4037:4040,:), 1, count);
  t.avminslassetfac = read_float(chr2(4041:4044,:), 1, count);
  t.avminsldelay = read_int(chr2(4045:4048,:), 1, count);
  t.avminslicecnt = read_int(chr2(4049:4052,:), 1, count);
  t.avminslquant = read_int(chr2(4053:4056,:), 1, count);
  t.avminslspace = read_float(chr2(4057:4060,:), 1, count);
  t.avminslthick = read_float(chr2(4061:4064,:), 1, count);
  t.avminsynbvalstab = read_float(chr2(4065:4068,:), 1, count);
  t.avmint2prepte = read_int(chr2(4069:4072,:), 1, count);
  t.avmintdel1 = read_int(chr2(4073:4076,:), 1, count);
  t.avminte = read_int(chr2(4077:4080,:), 1, count);
  t.avminte2 = read_int(chr2(4081:4084,:), 1, count);
  t.avminti = read_int(chr2(4085:4088,:), 1, count);
  t.avmintissuet1 = read_int(chr2(4089:4092,:), 1, count);
  t.avmintlabel = read_int(chr2(4093:4096,:), 1, count);
  t.avmintouchamp = read_int(chr2(4097:4100,:), 1, count);
  t.avmintouchcyc = read_int(chr2(4101:4104,:), 1, count);
  t.avmintouchfreq = read_int(chr2(4105:4108,:), 1, count);
  t.avmintouchmegfreq = read_int(chr2(4109:4112,:), 1, count);
  t.avmintouchtphases = read_int(chr2(4113:4116,:), 1, count);
  t.avmintphases = read_int(chr2(4117:4120,:), 1, count);
  t.avmintr = read_int(chr2(4121:4124,:), 1, count);
  t.avmintrecovery = read_int(chr2(4125:4128,:), 1, count);
  t.avmintricksdel = read_int(chr2(4129:4132,:), 1, count);
  t.avmintscan = read_float(chr2(4133:4136,:), 1, count);
  t.avmintseq = read_int(chr2(4137:4140,:), 1, count);
  t.avminvenc = read_float(chr2(4141:4144,:), 1, count);
  t.avminvest = read_float(chr2(4145:4148,:), 1, count);
  t.avminvsphases = read_int(chr2(4149:4152,:), 1, count);
  t.avminxres = read_int(chr2(4153:4156,:), 1, count);
  t.avminyres = read_int(chr2(4157:4160,:), 1, count);
  t.avround = read_int(chr2(4161:4164,:), 1, count);
  t.b1derate_flag = read_int(chr2(4165:4168,:), 1, count);
  t.b1max_scale = read_float(chr2(4169:4172,:), 1, count);
  t.b_value_3in1 = read_float(chr2(4173:4176,:), 1, count);
  t.b_value_single = read_float(chr2(4177:4180,:), 1, count);
  t.balanced_FE = read_int(chr2(4181:4184,:), 1, count);
  t.baseline = read_int(chr2(4185:4188,:), 1, count);
  t.bd_index = read_int(chr2(4189:4192,:), 1, count);
  t.bf_rfscale = read_int(chr2(4193:4196,:), 1, count);
  t.blank = read_int(chr2(4197:4200,:), 1, count);
  t.brava_flag = read_int(chr2(4201:4204,:), 1, count);
  t.bravo_fatsat = read_int(chr2(4205:4208,:), 1, count);
  t.bravo_flag = read_int(chr2(4209:4212,:), 1, count);
  t.break_flag = read_int(chr2(4213:4216,:), 1, count);
  t.breastCoil_flag = read_int(chr2(4217:4220,:), 1, count);
  t.breast_spsp_flag = read_int(chr2(4221:4224,:), 1, count);
  t.bridge_gxw2_gxwex_3dde = read_int(chr2(4225:4228,:), 1, count);
  t.brs_2d_fiesta_rf_flag = read_int(chr2(4229:4232,:), 1, count);
  t.brs_2dflag = read_int(chr2(4233:4236,:), 1, count);
  t.brs_alpha = read_float(chr2(4237:4240,:), 1, count);
  t.brs_alpha_center = read_float(chr2(4241:4244,:), 1, count);
  t.brs_areamode = read_int(chr2(4245:4248,:), 1, count);
  t.brs_blipflag = read_int(chr2(4249:4252,:), 1, count);
  t.brs_daqdel = read_float(chr2(4253:4256,:), 1, count);
  t.brs_daqdeloff = read_float(chr2(4257:4260,:), 1, count);
  t.brs_daqdeloff_zoom = read_float(chr2(4261:4264,:), 1, count);
  t.brs_ddahbs = read_int(chr2(4265:4268,:), 1, count);
  t.brs_debug_vieword = read_int(chr2(4269:4272,:), 1, count);
  t.brs_dofracz = read_int(chr2(4273:4276,:), 1, count);
  t.brs_echo_wait = read_int(chr2(4277:4280,:), 1, count);
  t.brs_excite_grad = read_int(chr2(4281:4284,:), 1, count);
  t.brs_exno = read_int(chr2(4285:4288,:), 1, count);
  t.brs_extra_esp = read_int(chr2(4289:4292,:), 1, count);
  t.brs_extra_len = read_int(chr2(4293:4296,:), 1, count);
  t.brs_extrawait = read_int(chr2(4297:4300,:), 1, count);
  t.brs_fast_rec_lpf = read_int(chr2(4301:4304,:), 1, count);
  t.brs_filtdel = read_float(chr2(4305:4308,:), 1, count);
  t.brs_flex = read_int(chr2(4309:4312,:), 1, count);
  t.brs_fov0 = read_float(chr2(4313:4316,:), 1, count);
  t.brs_fov1 = read_float(chr2(4317:4320,:), 1, count);
  t.brs_fov2 = read_float(chr2(4321:4324,:), 1, count);
  t.brs_fovpow = read_float(chr2(4325:4328,:), 1, count);
  t.brs_fracz_fact = read_float(chr2(4329:4332,:), 1, count);
  t.brs_fs_slice = read_int(chr2(4333:4336,:), 1, count);
  t.brs_fsprep_flag = read_int(chr2(4337:4340,:), 1, count);
  t.brs_fw_te_step = read_int(chr2(4341:4344,:), 1, count);
  t.brs_fwflag = read_int(chr2(4345:4348,:), 1, count);
  t.brs_gateddas = read_int(chr2(4349:4352,:), 1, count);
  t.brs_gmax = read_float(chr2(4353:4356,:), 1, count);
  t.brs_grad_derate = read_float(chr2(4357:4360,:), 1, count);
  t.brs_grad_powscale = read_float(chr2(4361:4364,:), 1, count);
  t.brs_gradlen = read_int(chr2(4365:4368,:), 1, count);
  t.brs_gradlen2 = read_int(chr2(4369:4372,:), 1, count);
  t.brs_gslew = read_float(chr2(4373:4376,:), 1, count);
  t.brs_gzvl_area_base = read_float(chr2(4377:4380,:), 1, count);
  t.brs_gzvl_delte = read_int(chr2(4381:4384,:), 1, count);
  t.brs_gzvl_flag = read_int(chr2(4385:4388,:), 1, count);
  t.brs_leafgroup = read_int(chr2(4389:4392,:), 1, count);
  t.brs_leaflen = read_int(chr2(4393:4396,:), 1, count);
  t.brs_leafskip = read_int(chr2(4397:4400,:), 1, count);
  t.brs_m1null = read_int(chr2(4401:4404,:), 1, count);
  t.brs_mapdel = read_int(chr2(4405:4408,:), 1, count);
  t.brs_mapdel_act = read_int(chr2(4409:4412,:), 1, count);
  t.brs_matrixsize_center = read_float(chr2(4413:4416,:), 1, count);
  t.brs_me_flag = read_int(chr2(4417:4420,:), 1, count);
  t.brs_mfa_flag = read_int(chr2(4421:4424,:), 1, count);
  t.brs_mfa_num = read_int(chr2(4425:4428,:), 1, count);
  t.brs_mfa_schedule = read_int(chr2(4429:4432,:), 1, count);
  t.brs_min_esp = read_int(chr2(4433:4436,:), 1, count);
  t.brs_mra_flag = read_int(chr2(4437:4440,:), 1, count);
  t.brs_nfolds = read_int(chr2(4441:4444,:), 1, count);
  t.brs_nphases = read_int(chr2(4445:4448,:), 1, count);
  t.brs_numleaves = read_int(chr2(4449:4452,:), 1, count);
  t.brs_numleaves_acq = read_int(chr2(4453:4456,:), 1, count);
  t.brs_opti = read_int(chr2(4457:4460,:), 1, count);
  t.brs_pm_numleaves = read_int(chr2(4461:4464,:), 1, count);
  t.brs_pm_type = read_int(chr2(4465:4468,:), 1, count);
  t.brs_preirdel = read_int(chr2(4469:4472,:), 1, count);
  t.brs_psc = read_int(chr2(4473:4476,:), 1, count);
  t.brs_psc_prot_no = read_int(chr2(4477:4480,:), 1, count);
  t.brs_psc_use_tracker = read_int(chr2(4481:4484,:), 1, count);
  t.brs_ramplength = read_int(chr2(4485:4488,:), 1, count);
  t.brs_ramplength2 = read_int(chr2(4489:4492,:), 1, count);
  t.brs_readoutdelay = read_int(chr2(4493:4496,:), 1, count);
  t.brs_realtime = read_int(chr2(4497:4500,:), 1, count);
  t.brs_recratio = read_float(chr2(4501:4504,:), 1, count);
  t.brs_rhrecon = read_int(chr2(4505:4508,:), 1, count);
  t.brs_rscale = read_float(chr2(4509:4512,:), 1, count);
  t.brs_rspskp = read_int(chr2(4513:4516,:), 1, count);
  t.brs_s5fp = read_int(chr2(4517:4520,:), 1, count);
  t.brs_sampfact = read_float(chr2(4521:4524,:), 1, count);
  t.brs_sampfact_center = read_float(chr2(4525:4528,:), 1, count);
  t.brs_scantype = read_int(chr2(4529:4532,:), 1, count);
  t.brs_shim_flag = read_int(chr2(4533:4536,:), 1, count);
  t.brs_shim_update_type = read_int(chr2(4537:4540,:), 1, count);
  t.brs_shim_x = read_int(chr2(4541:4544,:), 1, count);
  t.brs_shim_y = read_int(chr2(4545:4548,:), 1, count);
  t.brs_shim_z = read_int(chr2(4549:4552,:), 1, count);
  t.brs_slewmax = read_int(chr2(4553:4556,:), 1, count);
  t.brs_ssfp_flag = read_int(chr2(4557:4560,:), 1, count);
  t.brs_type = read_int(chr2(4561:4564,:), 1, count);
  t.brs_use_min_seqgrad = read_int(chr2(4565:4568,:), 1, count);
  t.brs_vieword = read_int(chr2(4569:4572,:), 1, count);
  t.brs_viewstocenter = read_int(chr2(4573:4576,:), 1, count);
  t.brs_xarea = read_float(chr2(4577:4580,:), 1, count);
  t.brs_xarea2 = read_float(chr2(4581:4584,:), 1, count);
  t.brs_xbliparea = read_float(chr2(4585:4588,:), 1, count);
  t.brs_xtarget = read_float(chr2(4589:4592,:), 1, count);
  t.brs_xx = read_float(chr2(4593:4596,:), 1, count);
  t.brs_xy = read_float(chr2(4597:4600,:), 1, count);
  t.brs_yarea = read_float(chr2(4601:4604,:), 1, count);
  t.brs_yarea2 = read_float(chr2(4605:4608,:), 1, count);
  t.brs_ybliparea = read_float(chr2(4609:4612,:), 1, count);
  t.brs_ytarget = read_float(chr2(4613:4616,:), 1, count);
  t.brs_yx = read_float(chr2(4617:4620,:), 1, count);
  t.brs_yy = read_float(chr2(4621:4624,:), 1, count);
  t.brs_zarea = read_float(chr2(4625:4628,:), 1, count);
  t.brs_zseg = read_int(chr2(4629:4632,:), 1, count);
  t.brs_ztarget = read_float(chr2(4633:4636,:), 1, count);
  t.brs_zvps = read_int(chr2(4637:4640,:), 1, count);
  t.brsfc_flag = read_int(chr2(4641:4644,:), 1, count);
  t.brsfc_longfc = read_int(chr2(4645:4648,:), 1, count);
  t.brsfmx = read_float(chr2(4649:4652,:), 1, count);
  t.brsfmy = read_float(chr2(4653:4656,:), 1, count);
  t.brsfmz = read_float(chr2(4657:4660,:), 1, count);
  t.btemp_debug = read_int(chr2(4661:4664,:), 1, count);
  t.btemp_monitor = read_int(chr2(4665:4668,:), 1, count);
  t.burstreps = read_int(chr2(4669:4672,:), 1, count);
  t.bw_rf0 = read_int(chr2(4673:4676,:), 1, count);
  t.bw_rf1 = read_int(chr2(4677:4680,:), 1, count);
  t.bw_rf1as = read_int(chr2(4681:4684,:), 1, count);
  t.bw_rf1mon = read_int(chr2(4685:4688,:), 1, count);
  t.bw_rf2mon = read_int(chr2(4689:4692,:), 1, count);
  t.bw_rffrir = read_int(chr2(4693:4696,:), 1, count);
  t.bw_rfgir01 = read_int(chr2(4697:4700,:), 1, count);
  t.bw_rfgir02 = read_int(chr2(4701:4704,:), 1, count);
  t.bw_rfmontipup = read_int(chr2(4705:4708,:), 1, count);
  t.bw_rfssfh = read_int(chr2(4709:4712,:), 1, count);
  t.cal3d_flag = read_int(chr2(4713:4716,:), 1, count);
  t.cal3d_interleave = read_int(chr2(4717:4720,:), 1, count);
  t.cal3d_nex1 = read_int(chr2(4721:4724,:), 1, count);
  t.cal3d_nex2 = read_int(chr2(4725:4728,:), 1, count);
  t.cal3d_nex3 = read_int(chr2(4729:4732,:), 1, count);
  t.cal3d_nex_mode = read_int(chr2(4733:4736,:), 1, count);
  t.cal3d_pass_set = read_int(chr2(4737:4740,:), 1, count);
  t.cal3d_pause_step = read_int(chr2(4741:4744,:), 1, count);
  t.cal3d_phases = read_int(chr2(4745:4748,:), 1, count);
  t.cal3d_state = read_int(chr2(4749:4752,:), 1, count);
  t.cal3d_state1 = read_int(chr2(4753:4756,:), 1, count);
  t.cal3d_state2 = read_int(chr2(4757:4760,:), 1, count);
  t.cal3d_state3 = read_int(chr2(4761:4764,:), 1, count);
  t.calRegion = read_CAL_PARAM(chr2(4765:4800,:), 1, count);
  t.cal_ky_ktarc = read_int(chr2(4801:4804,:), 1, count);
  t.cal_kz_ktarc = read_int(chr2(4805:4808,:), 1, count);
  t.cal_shape = read_int(chr2(4809:4812,:), 1, count);
  t.calc_rate = read_int(chr2(4813:4816,:), 1, count);
  t.calibrationPoints = read_int(chr2(4817:4820,:), 1, count);
  t.ccs_dead = read_float(chr2(4821:4824,:), 1, count);
  t.ccs_relaxers = read_int(chr2(4825:4828,:), 1, count);
  t.ccs_relaxseqtime = read_int(chr2(4829:4832,:), 1, count);
  t.ccs_relaxtime = read_int(chr2(4833:4836,:), 1, count);
  t.centric_flag = read_int(chr2(4837:4840,:), 1, count);
  t.cerdtype = read_int(chr2(4841:4844,:), 1, count);
  t.cfBbTransmitSelect = read_int(chr2(4845:4848,:), 1, count);
  t.cfDualDriveCapable = read_int(chr2(4849:4852,:), 1, count);
  t.cfEllipticDriveEnable = read_int(chr2(4853:4856,:), 1, count);
  t.cfMnsConverterSelect = read_int(chr2(4857:4860,:), 1, count);
  t.cfNbTransmitSelect = read_int(chr2(4861:4864,:), 1, count);
  t.cfOptimalSnrRecon = read_int(chr2(4865:4868,:), 1, count);
  t.cfVirtualChannelRecon = read_int(chr2(4869:4872,:), 1, count);
  t.cfaccel_cs_maxstride = read_float(chr2(4873:4876,:), 1, count);
  t.cfaccel_ph_maxstride = read_float(chr2(4877:4880,:), 1, count);
  t.cfaccel_sl_maxstride = read_float(chr2(4881:4884,:), 1, count);
  t.cfacqtodisksize = read_n64(chr2(4889:4896,:), 1, count);
  t.cfbbmod = read_int(chr2(4897:4900,:), 1, count);
  t.cfbdcabletglimit = read_int(chr2(4901:4904,:), 1, count);
  t.cfbllr = read_float(chr2(4905:4908,:), 1, count);
  t.cfbpdl = read_float(chr2(4909:4912,:), 1, count);
  t.cfbpsl = read_float(chr2(4913:4916,:), 1, count);
  t.cfbpv = read_float(chr2(4917:4920,:), 1, count);
  t.cfbqpc = read_float(chr2(4921:4924,:), 1, count);
  t.cfbwmin = read_int(chr2(4925:4928,:), 1, count);
  t.cfbwmin1 = read_int(chr2(4929:4932,:), 1, count);
  t.cfcablebw = read_int(chr2(4933:4936,:), 1, count);
  t.cfcablefreq = read_int(chr2(4937:4940,:), 1, count);
  t.cfcabletg = read_int(chr2(4941:4944,:), 1, count);
  t.cfcarddelay = read_int(chr2(4945:4948,:), 1, count);
  t.cfcerdtype = read_int(chr2(4949:4952,:), 1, count);
  t.cfcftdel = read_int(chr2(4953:4956,:), 1, count);
  t.cfcgain = read_float(chr2(4957:4960,:), 1, count);
  t.cfcoilAC_RxA = read_float(chr2(4961:4964,:), 1, count);
  t.cfcoilAC_RxB = read_float(chr2(4965:4968,:), 1, count);
  t.cfcoilAC_RxC = read_float(chr2(4969:4972,:), 1, count);
  t.cfcoilAC_RyA = read_float(chr2(4973:4976,:), 1, count);
  t.cfcoilAC_RyB = read_float(chr2(4977:4980,:), 1, count);
  t.cfcoilAC_RyC = read_float(chr2(4981:4984,:), 1, count);
  t.cfcoilAC_RzA = read_float(chr2(4985:4988,:), 1, count);
  t.cfcoilAC_RzB = read_float(chr2(4989:4992,:), 1, count);
  t.cfcoilAC_RzC = read_float(chr2(4993:4996,:), 1, count);
  t.cfcoilAC_fftpoints = read_int(chr2(4997:5000,:), 1, count);
  t.cfcoilAC_gain = read_float(chr2(5001:5004,:), 1, count);
  t.cfcoilAC_lumpL2x = read_float(chr2(5005:5008,:), 1, count);
  t.cfcoilAC_lumpL2y = read_float(chr2(5009:5012,:), 1, count);
  t.cfcoilAC_lumpL2z = read_float(chr2(5013:5016,:), 1, count);
  t.cfcoilAC_lumpL4x = read_float(chr2(5017:5020,:), 1, count);
  t.cfcoilAC_lumpL4y = read_float(chr2(5021:5024,:), 1, count);
  t.cfcoilAC_lumpL4z = read_float(chr2(5025:5028,:), 1, count);
  t.cfcoilAC_lumpR1x = read_float(chr2(5029:5032,:), 1, count);
  t.cfcoilAC_lumpR1y = read_float(chr2(5033:5036,:), 1, count);
  t.cfcoilAC_lumpR1z = read_float(chr2(5037:5040,:), 1, count);
  t.cfcoilAC_lumpR3x = read_float(chr2(5041:5044,:), 1, count);
  t.cfcoilAC_lumpR3y = read_float(chr2(5045:5048,:), 1, count);
  t.cfcoilAC_lumpR3z = read_float(chr2(5049:5052,:), 1, count);
  t.cfcoilAC_lumpR5x = read_float(chr2(5053:5056,:), 1, count);
  t.cfcoilAC_lumpR5y = read_float(chr2(5057:5060,:), 1, count);
  t.cfcoilAC_lumpR5z = read_float(chr2(5061:5064,:), 1, count);
  t.cfcoilAC_power = read_float(chr2(5065:5068,:), 1, count);
  t.cfcoilAC_power_1axis = read_float(chr2(5069:5072,:), 1, count);
  t.cfcoilAC_power_burst = read_float(chr2(5073:5076,:), 1, count);
  t.cfcoilAC_temp_base_burst = read_float(chr2(5077:5080,:), 1, count);
  t.cfcoilAC_temp_limit_burst = read_float(chr2(5081:5084,:), 1, count);
  t.cfcoilAC_timeconstant_burst = read_float(chr2(5085:5088,:), 1, count);
  t.cfcoilAC_timeres = read_float(chr2(5089:5092,:), 1, count);
  t.cfcoilAC_xgain = read_float(chr2(5093:5096,:), 1, count);
  t.cfcoilAC_ygain = read_float(chr2(5097:5100,:), 1, count);
  t.cfcoilAC_zgain = read_float(chr2(5101:5104,:), 1, count);
  t.cfcoilDC_Lx = read_float(chr2(5105:5108,:), 1, count);
  t.cfcoilDC_Ly = read_float(chr2(5109:5112,:), 1, count);
  t.cfcoilDC_Lz = read_float(chr2(5113:5116,:), 1, count);
  t.cfcoilDC_Rx = read_float(chr2(5117:5120,:), 1, count);
  t.cfcoilDC_Ry = read_float(chr2(5121:5124,:), 1, count);
  t.cfcoilDC_Rz = read_float(chr2(5125:5128,:), 1, count);
  t.cfcoilDC_gain = read_float(chr2(5129:5132,:), 1, count);
  t.cfcoilQAC_A0 = read_float(chr2(5133:5136,:), 1, count);
  t.cfcoilQAC_A1 = read_float(chr2(5137:5140,:), 1, count);
  t.cfcoilQAC_A2 = read_float(chr2(5141:5144,:), 1, count);
  t.cfcoilQAC_A3 = read_float(chr2(5145:5148,:), 1, count);
  t.cfcoilQAC_A4 = read_float(chr2(5149:5152,:), 1, count);
  t.cfcoilQAC_A5 = read_float(chr2(5153:5156,:), 1, count);
  t.cfcoilQAC_A6 = read_float(chr2(5157:5160,:), 1, count);
  t.cfcoilQAC_Xcoef = read_float(chr2(5161:5164,:), 1, count);
  t.cfcoilQAC_Ycoef = read_float(chr2(5165:5168,:), 1, count);
  t.cfcoilQAC_Zcoef = read_float(chr2(5169:5172,:), 1, count);
  t.cfcoilQAC_const = read_float(chr2(5173:5176,:), 1, count);
  t.cfcoilQAC_heat_const = read_float(chr2(5177:5180,:), 1, count);
  t.cfcoilQAC_heat_maxtime = read_float(chr2(5181:5184,:), 1, count);
  t.cfcoilQAC_heat_slope = read_float(chr2(5185:5188,:), 1, count);
  t.cfcoilQAC_maxtime = read_float(chr2(5189:5192,:), 1, count);
  t.cfcoilshld = read_int(chr2(5193:5196,:), 1, count);
  t.cfcoilswitchmethod = read_int(chr2(5197:5200,:), 1, count);
  t.cfcompress = read_int(chr2(5201:5204,:), 1, count);
  t.cfdbdtdx = read_float(chr2(5205:5208,:), 1, count);
  t.cfdbdtdy = read_float(chr2(5209:5212,:), 1, count);
  t.cfdbdtdz = read_float(chr2(5213:5216,:), 1, count);
  t.cfdbdtper = read_float(chr2(5217:5220,:), 1, count);
  t.cfdbdtper2 = read_float(chr2(5221:5224,:), 1, count);
  t.cfdbdtper_cont = read_float(chr2(5225:5228,:), 1, count);
  t.cfdbdtper_max = read_float(chr2(5229:5232,:), 1, count);
  t.cfdbdtper_norm = read_float(chr2(5233:5236,:), 1, count);
  t.cfdbdtts = read_float(chr2(5237:5240,:), 1, count);
  t.cfdbdttype = read_int(chr2(5241:5244,:), 1, count);
  t.cfdbmax = read_int(chr2(5245:5248,:), 1, count);
  t.cfderatingFactorRTSAR = read_float(chr2(5249:5252,:), 1, count);
  t.cfdfm = read_int(chr2(5253:5256,:), 1, count);
  t.cfdfmDX = read_int(chr2(5257:5260,:), 1, count);
  t.cfdfmR1 = read_int(chr2(5261:5264,:), 1, count);
  t.cfdfmTG = read_int(chr2(5265:5268,:), 1, count);
  t.cfdppericn = read_int(chr2(5269:5272,:), 1, count);
  t.cffall2x0 = read_int(chr2(5273:5276,:), 1, count);
  t.cffall2x0fw = read_int(chr2(5277:5280,:), 1, count);
  t.cffall2y0 = read_int(chr2(5281:5284,:), 1, count);
  t.cffall2y0fw = read_int(chr2(5285:5288,:), 1, count);
  t.cffall2z0 = read_int(chr2(5289:5292,:), 1, count);
  t.cffall2z0fw = read_int(chr2(5293:5296,:), 1, count);
  t.cffastprescan = read_int(chr2(5297:5300,:), 1, count);
  t.cffield = read_int(chr2(5301:5304,:), 1, count);
  t.cfgburstime = read_float(chr2(5305:5308,:), 1, count);
  t.cfgcoiltype = read_int(chr2(5309:5312,:), 1, count);
  t.cfgcontirms = read_float(chr2(5313:5316,:), 1, count);
  t.cfgmax_arthigh = read_float(chr2(5317:5320,:), 1, count);
  t.cfgmax_artmedium = read_float(chr2(5321:5324,:), 1, count);
  t.cfgmax_artmediumopt = read_float(chr2(5325:5328,:), 1, count);
  t.cfgovbody = read_int(chr2(5329:5332,:), 1, count);
  t.cfgpeakirms = read_float(chr2(5333:5336,:), 1, count);
  t.cfgpmpow = read_float(chr2(5337:5340,:), 1, count);
  t.cfgradamp = read_int(chr2(5341:5344,:), 1, count);
  t.cfgradcoil = read_int(chr2(5345:5348,:), 1, count);
  t.cfh_crusher_area = read_float(chr2(5349:5352,:), 1, count);
  t.cfh_dda = read_int(chr2(5353:5356,:), 1, count);
  t.cfh_each = read_int(chr2(5357:5360,:), 1, count);
  t.cfh_ec_position = read_float(chr2(5361:5364,:), 1, count);
  t.cfh_fov = read_float(chr2(5365:5368,:), 1, count);
  t.cfh_newgeo = read_int(chr2(5369:5372,:), 1, count);
  t.cfh_newmode = read_int(chr2(5373:5376,:), 1, count);
  t.cfh_nex = read_int(chr2(5377:5380,:), 1, count);
  t.cfh_rf1freq = read_float(chr2(5381:5384,:), 1, count);
  t.cfh_rf2freq = read_float(chr2(5385:5388,:), 1, count);
  t.cfh_rf3freq = read_float(chr2(5389:5392,:), 1, count);
  t.cfh_rf4freq = read_float(chr2(5393:5396,:), 1, count);
  t.cfh_slquant = read_int(chr2(5397:5400,:), 1, count);
  t.cfh_steam_flag = read_int(chr2(5401:5404,:), 1, count);
  t.cfh_tdaq = read_int(chr2(5405:5408,:), 1, count);
  t.cfh_ti = read_int(chr2(5409:5412,:), 1, count);
  t.cfh_tr = read_int(chr2(5413:5416,:), 1, count);
  t.cfhir_killer_area = read_float(chr2(5417:5420,:), 1, count);
  t.cfhllr = read_float(chr2(5421:5424,:), 1, count);
  t.cfhloggrd = read_LOG_GRAD(chr2(5425:5724,:), 1, count);
  t.cfhobl_debug = read_int(chr2(5725:5728,:), 1, count);
  t.cfhpdl = read_float(chr2(5729:5732,:), 1, count);
  t.cfhpsl = read_float(chr2(5733:5736,:), 1, count);
  t.cfhpv = read_float(chr2(5737:5740,:), 1, count);
  t.cfhqpc = read_float(chr2(5741:5744,:), 1, count);
  t.cfhscale = read_float(chr2(5745:5748,:), 1, count);
  t.cfhtdel = read_int(chr2(5749:5752,:), 1, count);
  t.cfhwgut = read_int(chr2(5753:5756,:), 1, count);
  t.cfhwrfut = read_int(chr2(5757:5760,:), 1, count);
  t.cfhwssput = read_int(chr2(5761:5764,:), 1, count);
  t.cfl_dda = read_int(chr2(5765:5768,:), 1, count);
  t.cfl_nex = read_int(chr2(5769:5772,:), 1, count);
  t.cfl_tdaq = read_int(chr2(5773:5776,:), 1, count);
  t.cfl_tr = read_int(chr2(5777:5780,:), 1, count);
  t.cflcoil = read_float(chr2(5781:5784,:), 1, count);
  t.cflinfrq = read_float(chr2(5785:5788,:), 1, count);
  t.cflloggrd = read_LOG_GRAD(chr2(5789:6088,:), 1, count);
  t.cfloss = read_float(chr2(6089:6092,:), 1, count);
  t.cflscale = read_float(chr2(6093:6096,:), 1, count);
  t.cfmaxave = read_float(chr2(6097:6100,:), 1, count);
  t.cfmaxavepm = read_float(chr2(6101:6104,:), 1, count);
  t.cfmaxb1ref = read_float(chr2(6105:6108,:), 1, count);
  t.cfmaxb1rmshead = read_float(chr2(6109:6112,:), 1, count);
  t.cfmaxbw = read_float(chr2(6113:6116,:), 1, count);
  t.cfmaxcave = read_float(chr2(6117:6120,:), 1, count);
  t.cfmaxcpeak = read_float(chr2(6121:6124,:), 1, count);
  t.cfmaxepeak = read_float(chr2(6125:6128,:), 1, count);
  t.cfmaxextremity = read_float(chr2(6129:6132,:), 1, count);
  t.cfmaxhave = read_float(chr2(6133:6136,:), 1, count);
  t.cfmaxpeak = read_float(chr2(6137:6140,:), 1, count);
  t.cfmgps = read_float(chr2(6141:6144,:), 1, count);
  t.cfnumartlevels = read_int(chr2(6145:6148,:), 1, count);
  t.cfnumicn = read_int(chr2(6149:6152,:), 1, count);
  t.cfnumrcvrs = read_int(chr2(6153:6156,:), 1, count);
  t.cfopenmagnet = read_int(chr2(6157:6160,:), 1, count);
  t.cfoption = read_int(chr2(6161:6164,:), 1, count);
  t.cfpicture = read_int(chr2(6165:6168,:), 1, count);
  t.cfpmgs = read_float(chr2(6169:6172,:), 1, count);
  t.cfpsdgraddly = read_int(chr2(6173:6176,:), 1, count);
  t.cfpsdrfdly = read_int(chr2(6177:6180,:), 1, count);
  t.cfpsdrfdlyx = read_int(chr2(6181:6184,:), 1, count);
  t.cfpsdrfdlyy = read_int(chr2(6185:6188,:), 1, count);
  t.cfpsdrfdlyz = read_int(chr2(6189:6192,:), 1, count);
  t.cfpure_filtering_mode = read_int(chr2(6193:6196,:), 1, count);
  t.cfpwrmonreflmeas = read_int(chr2(6197:6200,:), 1, count);
  t.cfpwrmontyp = read_int(chr2(6201:6204,:), 1, count);
  t.cfraccoil = read_float(chr2(6205:6208,:), 1, count);
  t.cframpdir = read_int(chr2(6209:6212,:), 1, count);
  t.cframpdir_tgt = read_int(chr2(6213:6216,:), 1, count);
  t.cfrcoil = read_float(chr2(6217:6220,:), 1, count);
  t.cfrealtime = read_int(chr2(6221:6224,:), 1, count);
  t.cfreceiveroffsetfreq = read_int(chr2(6225:6228,:), 1, count);
  t.cfreceiverswitchtype = read_int(chr2(6229:6232,:), 1, count);
  t.cfreceivertype = read_int(chr2(6233:6236,:), 1, count);
  t.cfrecvend = read_int(chr2(6237:6240,:), 1, count);
  t.cfrecvst = read_int(chr2(6241:6244,:), 1, count);
  t.cfrfMaxAttenuation = read_int(chr2(6245:6248,:), 1, count);
  t.cfrfact = read_int(chr2(6249:6252,:), 1, count);
  t.cfrfampftconst = read_float(chr2(6253:6256,:), 1, count);
  t.cfrfampftlinear = read_float(chr2(6257:6260,:), 1, count);
  t.cfrfampftquadratic = read_float(chr2(6261:6264,:), 1, count);
  t.cfrfamptyp = read_int(chr2(6265:6268,:), 1, count);
  t.cfrfboardtype = read_int(chr2(6269:6272,:), 1, count);
  t.cfrfmapb = read_int(chr2(6273:6276,:), 1, count);
  t.cfrfmaph = read_int(chr2(6277:6280,:), 1, count);
  t.cfrfmaps = read_int(chr2(6281:6284,:), 1, count);
  t.cfrfmdcb = read_float(chr2(6285:6288,:), 1, count);
  t.cfrfmdch = read_float(chr2(6289:6292,:), 1, count);
  t.cfrfmdcs = read_float(chr2(6293:6296,:), 1, count);
  t.cfrfminblank = read_int(chr2(6297:6300,:), 1, count);
  t.cfrfminblanktorcv = read_int(chr2(6301:6304,:), 1, count);
  t.cfrfminunblk = read_int(chr2(6305:6308,:), 1, count);
  t.cfrfmpeb = read_float(chr2(6309:6312,:), 1, count);
  t.cfrfmpeh = read_float(chr2(6313:6316,:), 1, count);
  t.cfrfmpes = read_float(chr2(6317:6320,:), 1, count);
  t.cfrfmpwb = read_int(chr2(6321:6324,:), 1, count);
  t.cfrfmpwh = read_int(chr2(6325:6328,:), 1, count);
  t.cfrfmpws = read_int(chr2(6329:6332,:), 1, count);
  t.cfrfrapb = read_int(chr2(6333:6336,:), 1, count);
  t.cfrfrapcw = read_int(chr2(6337:6340,:), 1, count);
  t.cfrfraph = read_int(chr2(6341:6344,:), 1, count);
  t.cfrfraps = read_int(chr2(6345:6348,:), 1, count);
  t.cfrfunblank = read_int(chr2(6349:6352,:), 1, count);
  t.cfrfupa = read_int(chr2(6353:6356,:), 1, count);
  t.cfrfupd = read_int(chr2(6357:6360,:), 1, count);
  t.cfrhr = read_float(chr2(6361:6364,:), 1, count);
  t.cfrinf = read_float(chr2(6365:6368,:), 1, count);
  t.cfrmp2xfs = read_int(chr2(6369:6372,:), 1, count);
  t.cfrmp2xfsfw = read_int(chr2(6373:6376,:), 1, count);
  t.cfrmp2yfs = read_int(chr2(6377:6380,:), 1, count);
  t.cfrmp2yfsfw = read_int(chr2(6381:6384,:), 1, count);
  t.cfrmp2zfs = read_int(chr2(6385:6388,:), 1, count);
  t.cfrmp2zfsfw = read_int(chr2(6389:6392,:), 1, count);
  t.cfscoutscanact = read_int(chr2(6393:6396,:), 1, count);
  t.cfsdlim = read_float(chr2(6397:6400,:), 1, count);
  t.cfslew_arthigh = read_float(chr2(6401:6404,:), 1, count);
  t.cfslew_artmedium = read_float(chr2(6405:6408,:), 1, count);
  t.cfslew_artmediumopt = read_float(chr2(6409:6412,:), 1, count);
  t.cfspectroPMcal = read_float(chr2(6413:6416,:), 1, count);
  t.cfsrmode = read_int(chr2(6417:6420,:), 1, count);
  t.cfsrmodeact = read_float(chr2(6421:6424,:), 1, count);
  t.cfsrmodeconv = read_float(chr2(6425:6428,:), 1, count);
  t.cfswgut = read_int(chr2(6429:6432,:), 1, count);
  t.cfswrfut = read_int(chr2(6433:6436,:), 1, count);
  t.cfswssput = read_int(chr2(6437:6440,:), 1, count);
  t.cfsystemmaxfov = read_float(chr2(6441:6444,:), 1, count);
  t.cftableanglex = read_float(chr2(6445:6448,:), 1, count);
  t.cftableangley = read_float(chr2(6449:6452,:), 1, count);
  t.cftableanglez = read_float(chr2(6453:6456,:), 1, count);
  t.cftablemaxaccel = read_int(chr2(6457:6460,:), 1, count);
  t.cftablemaxdecel = read_int(chr2(6461:6464,:), 1, count);
  t.cftablemaxspeed = read_int(chr2(6465:6468,:), 1, count);
  t.cftableoffsetx = read_float(chr2(6469:6472,:), 1, count);
  t.cftableoffsety = read_float(chr2(6473:6476,:), 1, count);
  t.cftableoffsetz = read_float(chr2(6477:6480,:), 1, count);
  t.cftpsnproc = read_int(chr2(6481:6484,:), 1, count);
  t.cftpsproctype = read_int(chr2(6485:6488,:), 1, count);
  t.cftpssize = read_float(chr2(6489:6492,:), 1, count);
  t.cftrnew = read_int(chr2(6493:6496,:), 1, count);
  t.cftuning = read_int(chr2(6497:6500,:), 1, count);
  t.cfvhr = read_float(chr2(6501:6504,:), 1, count);
  t.cfxamptran = read_float(chr2(6505:6508,:), 1, count);
  t.cfxasm = read_int(chr2(6509:6512,:), 1, count);
  t.cfxbeta = read_float(chr2(6513:6516,:), 1, count);
  t.cfxcc = read_float(chr2(6517:6520,:), 1, count);
  t.cfxfa = read_float(chr2(6521:6524,:), 1, count);
  t.cfxfd_power_limit = read_float(chr2(6525:6528,:), 1, count);
  t.cfxfd_temp_limit = read_float(chr2(6529:6532,:), 1, count);
  t.cfxfs = read_float(chr2(6533:6536,:), 1, count);
  t.cfxfull = read_int(chr2(6537:6540,:), 1, count);
  t.cfxgasm = read_int(chr2(6541:6544,:), 1, count);
  t.cfxgd_IGBTtemplimit = read_float(chr2(6545:6548,:), 1, count);
  t.cfxgd_busbartemplimit = read_float(chr2(6549:6552,:), 1, count);
  t.cfxgd_cableirmslimit = read_float(chr2(6553:6556,:), 1, count);
  t.cfxgd_cableirmslimit_burst = read_float(chr2(6557:6560,:), 1, count);
  t.cfxgd_cabletimeconstant_burst = read_float(chr2(6561:6564,:), 1, count);
  t.cfxgd_chokepowerlimit = read_float(chr2(6565:6568,:), 1, count);
  t.cfxgd_timeres = read_float(chr2(6569:6572,:), 1, count);
  t.cfxgram = read_int(chr2(6573:6576,:), 1, count);
  t.cfxiavrgabs = read_float(chr2(6577:6580,:), 1, count);
  t.cfxipeak = read_float(chr2(6581:6584,:), 1, count);
  t.cfxirms = read_float(chr2(6585:6588,:), 1, count);
  t.cfxirmsneg = read_float(chr2(6589:6592,:), 1, count);
  t.cfxirmspos = read_float(chr2(6593:6596,:), 1, count);
  t.cfxmgrampow = read_float(chr2(6597:6600,:), 1, count);
  t.cfxnumpower = read_int(chr2(6601:6604,:), 1, count);
  t.cfxps_avghvpwrlimit = read_float(chr2(6605:6608,:), 1, count);
  t.cfxps_avglvpwrlimit = read_float(chr2(6609:6612,:), 1, count);
  t.cfxps_avgpdulimit = read_float(chr2(6613:6616,:), 1, count);
  t.cfxpwmdc = read_float(chr2(6617:6620,:), 1, count);
  t.cfxrdelay = read_int(chr2(6621:6624,:), 1, count);
  t.cfxrsat = read_float(chr2(6625:6628,:), 1, count);
  t.cfxseries = read_int(chr2(6629:6632,:), 1, count);
  t.cfxvpwm = read_float(chr2(6633:6636,:), 1, count);
  t.cfxvsat = read_float(chr2(6637:6640,:), 1, count);
  t.cfyamptran = read_float(chr2(6641:6644,:), 1, count);
  t.cfyasm = read_int(chr2(6645:6648,:), 1, count);
  t.cfybeta = read_float(chr2(6649:6652,:), 1, count);
  t.cfycc = read_float(chr2(6653:6656,:), 1, count);
  t.cfyfa = read_float(chr2(6657:6660,:), 1, count);
  t.cfyfs = read_float(chr2(6661:6664,:), 1, count);
  t.cfyfull = read_int(chr2(6665:6668,:), 1, count);
  t.cfygasm = read_int(chr2(6669:6672,:), 1, count);
  t.cfygram = read_int(chr2(6673:6676,:), 1, count);
  t.cfyiavrgabs = read_float(chr2(6677:6680,:), 1, count);
  t.cfyipeak = read_float(chr2(6681:6684,:), 1, count);
  t.cfyirms = read_float(chr2(6685:6688,:), 1, count);
  t.cfyirmsneg = read_float(chr2(6689:6692,:), 1, count);
  t.cfyirmspos = read_float(chr2(6693:6696,:), 1, count);
  t.cfymgrampow = read_float(chr2(6697:6700,:), 1, count);
  t.cfynumpower = read_int(chr2(6701:6704,:), 1, count);
  t.cfypwmdc = read_float(chr2(6705:6708,:), 1, count);
  t.cfyrdelay = read_int(chr2(6709:6712,:), 1, count);
  t.cfyrsat = read_float(chr2(6713:6716,:), 1, count);
  t.cfyseries = read_int(chr2(6717:6720,:), 1, count);
  t.cfyvpwm = read_float(chr2(6721:6724,:), 1, count);
  t.cfyvsat = read_float(chr2(6725:6728,:), 1, count);
  t.cfzamptran = read_float(chr2(6729:6732,:), 1, count);
  t.cfzasm = read_int(chr2(6733:6736,:), 1, count);
  t.cfzbeta = read_float(chr2(6737:6740,:), 1, count);
  t.cfzcc = read_float(chr2(6741:6744,:), 1, count);
  t.cfzfa = read_float(chr2(6745:6748,:), 1, count);
  t.cfzfs = read_float(chr2(6749:6752,:), 1, count);
  t.cfzfull = read_int(chr2(6753:6756,:), 1, count);
  t.cfzgasm = read_int(chr2(6757:6760,:), 1, count);
  t.cfzgram = read_int(chr2(6761:6764,:), 1, count);
  t.cfziavrgabs = read_float(chr2(6765:6768,:), 1, count);
  t.cfzipeak = read_float(chr2(6769:6772,:), 1, count);
  t.cfzirms = read_float(chr2(6773:6776,:), 1, count);
  t.cfzirmsneg = read_float(chr2(6777:6780,:), 1, count);
  t.cfzirmspos = read_float(chr2(6781:6784,:), 1, count);
  t.cfzmgrampow = read_float(chr2(6785:6788,:), 1, count);
  t.cfznumpower = read_int(chr2(6789:6792,:), 1, count);
  t.cfzoomlim_ctl = read_int(chr2(6793:6796,:), 1, count);
  t.cfzoomlim_fov = read_int(chr2(6797:6800,:), 1, count);
  t.cfzoomlim_ofc = read_int(chr2(6801:6804,:), 1, count);
  t.cfzpwmdc = read_float(chr2(6805:6808,:), 1, count);
  t.cfzrdelay = read_int(chr2(6809:6812,:), 1, count);
  t.cfzrsat = read_float(chr2(6813:6816,:), 1, count);
  t.cfzseries = read_int(chr2(6817:6820,:), 1, count);
  t.cfzvpwm = read_float(chr2(6821:6824,:), 1, count);
  t.cfzvsat = read_float(chr2(6825:6828,:), 1, count);
  t.cgate_dda = read_int(chr2(6829:6832,:), 1, count);
  t.channel_combine_mode = read_int(chr2(6833:6836,:), 1, count);
  t.channel_compression = read_int(chr2(6837:6840,:), 1, count);
  t.chemfreq = read_int(chr2(6841:6844,:), 1, count);
  t.chemsat_acq = read_int(chr2(6845:6848,:), 1, count);
  t.chemsat_dda = read_int(chr2(6849:6852,:), 1, count);
  t.chemscale = read_float(chr2(6853:6856,:), 1, count);
  t.chemseq0 = read_int(chr2(6857:6860,:), 1, count);
  t.chemseqs = read_int(chr2(6861:6864,:), 1, count);
  t.chksum_rampdir = read_int(chr2(6865:6868,:), 1, count);
  t.chksum_rampdir_tgt = read_int(chr2(6869:6872,:), 1, count);
  t.chksum_rhdacqctrl = read_n32(chr2(6873:6876,:), 1, count);
  t.chksum_rhdacqctrl_view = read_int(chr2(6877:6880,:), 1, count);
  t.chksum_scaninfo = read_n32(chr2(6881:6884,:), 1, count);
  t.chksum_scaninfo_view = read_int(chr2(6885:6888,:), 1, count);
  t.choplet = read_int(chr2(6889:6892,:), 1, count);
  t.cine3d_arrlimit = read_float(chr2(6893:6896,:), 1, count);
  t.cine3d_flag = read_int(chr2(6897:6900,:), 1, count);
  t.cine3d_fullkviews = read_int(chr2(6901:6904,:), 1, count);
  t.cine3d_fullkviews_cal = read_int(chr2(6905:6908,:), 1, count);
  t.cine3d_ktsamp_mode = read_int(chr2(6909:6912,:), 1, count);
  t.cine3d_maxslquant = read_int(chr2(6913:6916,:), 1, count);
  t.cine3d_minslquant = read_int(chr2(6917:6920,:), 1, count);
  t.cine3d_num_segs_est = read_int(chr2(6921:6924,:), 1, count);
  t.cine3d_targetedphases_max = read_int(chr2(6925:6928,:), 1, count);
  t.cine3d_totalviews_est = read_int(chr2(6929:6932,:), 1, count);
  t.cine3d_yz_order = read_int(chr2(6933:6936,:), 1, count);
  t.cine_choplet = read_int(chr2(6937:6940,:), 1, count);
  t.cinv16_iso_delay = read_int(chr2(6941:6944,:), 1, count);
  t.coeff_pw_tg = read_float(chr2(6945:6948,:), 1, count);
  t.coil_map_2_filter_width = read_float(chr2(6949:6952,:), 1, count);
  t.coil_map_smooth_factor = read_float(chr2(6953:6956,:), 1, count);
  t.coilsw_data = read_int(chr2(6957:6960,:), 1, count);
  t.coilsw_ds = read_int(chr2(6961:6964,:), 1, count);
  t.coilsw_oc = read_int(chr2(6965:6968,:), 1, count);
  t.coll_prefls = read_int(chr2(6969:6972,:), 1, count);
  t.combined_coil_map_thres = read_float(chr2(6973:6976,:), 1, count);
  t.combo_mode = read_int(chr2(6977:6980,:), 1, count);
  t.compositeon = read_int(chr2(6981:6984,:), 1, count);
  t.comptipupon = read_int(chr2(6985:6988,:), 1, count);
  t.config_update_mode = read_int(chr2(6989:6992,:), 1, count);
  t.cont_debug = read_int(chr2(6993:6996,:), 1, count);
  t.cont_flag = read_int(chr2(6997:7000,:), 1, count);
  t.corr_factor_x = read_float(chr2(7001:7004,:), 1, count);
  t.corr_factor_y = read_float(chr2(7005:7008,:), 1, count);
  t.corr_factor_z = read_float(chr2(7009:7012,:), 1, count);
  t.corr_mode = read_int(chr2(7013:7016,:), 1, count);
  t.corr_x = read_int(chr2(7017:7020,:), 1, count);
  t.corr_y = read_int(chr2(7021:7024,:), 1, count);
  t.corr_z = read_int(chr2(7025:7028,:), 1, count);
  t.count_grd_wait = read_int(chr2(7029:7032,:), 1, count);
  t.count_rfupd = read_int(chr2(7033:7036,:), 1, count);
  t.cs_flag = read_int(chr2(7037:7040,:), 1, count);
  t.cs_sat = read_int(chr2(7041:7044,:), 1, count);
  t.cs_satstart = read_int(chr2(7045:7048,:), 1, count);
  t.cs_satstart_min = read_int(chr2(7049:7052,:), 1, count);
  t.cs_sattime = read_int(chr2(7053:7056,:), 1, count);
  t.csat_rfupa = read_int(chr2(7057:7060,:), 1, count);
  t.csat_sys_type = read_int(chr2(7061:7064,:), 1, count);
  t.csi_grid_on = read_int(chr2(7065:7068,:), 1, count);
  t.csw_time_ssi = read_int(chr2(7069:7072,:), 1, count);
  t.csw_tr = read_int(chr2(7073:7076,:), 1, count);
  t.csw_wait_before = read_int(chr2(7077:7080,:), 1, count);
  t.csw_wait_sethubindeximm = read_int(chr2(7081:7084,:), 1, count);
  t.csw_wait_setrcvportimm = read_int(chr2(7085:7088,:), 1, count);
  t.csweight = read_int(chr2(7089:7092,:), 1, count);
  t.csxkillerFlag = read_int(chr2(7093:7096,:), 1, count);
  t.cszkillerFlag = read_int(chr2(7097:7100,:), 1, count);
  t.curr_eff = read_float(chr2(7101:7104,:), 1, count);
  t.cutcorner_flag = read_int(chr2(7105:7108,:), 1, count);
  t.cutpostlobes = read_int(chr2(7109:7112,:), 1, count);
  t.cv_rfupa = read_int(chr2(7113:7116,:), 1, count);
  t.cvlock = read_int(chr2(7117:7120,:), 1, count);
  t.cyc_rf0 = read_float(chr2(7121:7124,:), 1, count);
  t.cyc_rf0cfh = read_float(chr2(7125:7128,:), 1, count);
  t.cyc_rf1 = read_float(chr2(7129:7132,:), 1, count);
  t.cyc_rf1_pre = read_float(chr2(7133:7136,:), 1, count);
  t.cyc_rf1_temp = read_float(chr2(7137:7140,:), 1, count);
  t.cyc_rf1as = read_float(chr2(7141:7144,:), 1, count);
  t.cyc_rf1cfh = read_float(chr2(7145:7148,:), 1, count);
  t.cyc_rf1cfl = read_float(chr2(7149:7152,:), 1, count);
  t.cyc_rf1dtg = read_float(chr2(7153:7156,:), 1, count);
  t.cyc_rf1ftg = read_float(chr2(7157:7160,:), 1, count);
  t.cyc_rf1htr = read_float(chr2(7161:7164,:), 1, count);
  t.cyc_rf1mon = read_float(chr2(7165:7168,:), 1, count);
  t.cyc_rf1mps1 = read_float(chr2(7169:7172,:), 1, count);
  t.cyc_rf1rs = read_float(chr2(7173:7176,:), 1, count);
  t.cyc_rf1tm = read_float(chr2(7177:7180,:), 1, count);
  t.cyc_rf1xtg = read_float(chr2(7181:7184,:), 1, count);
  t.cyc_rf2 = read_float(chr2(7185:7188,:), 1, count);
  t.cyc_rf2cfh = read_float(chr2(7189:7192,:), 1, count);
  t.cyc_rf2ftg = read_float(chr2(7193:7196,:), 1, count);
  t.cyc_rf2mon = read_float(chr2(7197:7200,:), 1, count);
  t.cyc_rf2mps1 = read_float(chr2(7201:7204,:), 1, count);
  t.cyc_rf2xtg = read_float(chr2(7205:7208,:), 1, count);
  t.cyc_rf3cfh = read_float(chr2(7209:7212,:), 1, count);
  t.cyc_rf3ftg = read_float(chr2(7213:7216,:), 1, count);
  t.cyc_rf4cfh = read_float(chr2(7217:7220,:), 1, count);
  t.cyc_rfcssat = read_float(chr2(7221:7224,:), 1, count);
  t.cyc_rffrir = read_float(chr2(7225:7228,:), 1, count);
  t.cyc_rfgir01 = read_float(chr2(7229:7232,:), 1, count);
  t.cyc_rfgir02 = read_float(chr2(7233:7236,:), 1, count);
  t.cyc_rfmontipup = read_float(chr2(7237:7240,:), 1, count);
  t.cyc_rfs = read_float(chr2(7241:7244,:), 1, count);
  t.cyc_rfse1 = read_float(chr2(7245:7248,:), 1, count);
  t.cyc_rfse2 = read_float(chr2(7249:7252,:), 1, count);
  t.cyc_rfse3 = read_float(chr2(7253:7256,:), 1, count);
  t.cyc_rfse4 = read_float(chr2(7257:7260,:), 1, count);
  t.cyc_rfse5 = read_float(chr2(7261:7264,:), 1, count);
  t.cyc_rfse6 = read_float(chr2(7265:7268,:), 1, count);
  t.cyc_rfsx1 = read_float(chr2(7269:7272,:), 1, count);
  t.cyc_rfsx2 = read_float(chr2(7273:7276,:), 1, count);
  t.cyc_rfsy1 = read_float(chr2(7277:7280,:), 1, count);
  t.cyc_rfsy2 = read_float(chr2(7281:7284,:), 1, count);
  t.cyc_rfsz1 = read_float(chr2(7285:7288,:), 1, count);
  t.cyc_rfsz2 = read_float(chr2(7289:7292,:), 1, count);
  t.cylr_dtheta = read_float(chr2(7293:7296,:), 1, count);
  t.cylr_manoff = read_int(chr2(7297:7300,:), 1, count);
  t.cylr_rf_type = read_int(chr2(7301:7304,:), 1, count);
  t.cylr_skew = read_float(chr2(7305:7308,:), 1, count);
  t.cylr_xoff = read_float(chr2(7309:7312,:), 1, count);
  t.cylr_yoff = read_float(chr2(7313:7316,:), 1, count);
  t.d3dtr = read_int(chr2(7317:7320,:), 1, count);
  t.dab_offset = read_int(chr2(7321:7324,:), 1, count);
  t.dab_packet = read_int(chr2(7325:7328,:), 1, count);
  t.dabout_length = read_int(chr2(7329:7332,:), 1, count);
  t.data_type = read_int(chr2(7333:7336,:), 1, count);
  t.dbdt_debug = read_int(chr2(7337:7340,:), 1, count);
  t.dbdt_disable = read_int(chr2(7341:7344,:), 1, count);
  t.dbdt_mode = read_int(chr2(7345:7348,:), 1, count);
  t.dbdt_option_key_status = read_int(chr2(7349:7352,:), 1, count);
  t.dbdtlevel_opt = read_int(chr2(7353:7356,:), 1, count);
  t.dda = read_int(chr2(7357:7360,:), 1, count);
  t.dda_delay = read_int(chr2(7361:7364,:), 1, count);
  t.dda_one_second = read_int(chr2(7365:7368,:), 1, count);
  t.dda_trigger_delay_disdaqs = read_int(chr2(7369:7372,:), 1, count);
  t.dda_trigger_delay_silent_countdown = read_int(chr2(7373:7376,:), 1, count);
  t.de3d_flag = read_int(chr2(7377:7380,:), 1, count);
  t.debug = read_int(chr2(7381:7384,:), 1, count);
  t.debug_card_sim = read_int(chr2(7385:7388,:), 1, count);
  t.debug_dbdt = read_int(chr2(7389:7392,:), 1, count);
  t.debug_gir = read_int(chr2(7393:7396,:), 1, count);
  t.debug_grad_spec = read_int(chr2(7397:7400,:), 1, count);
  t.debug_monloc = read_int(chr2(7401:7404,:), 1, count);
  t.debug_monrot = read_int(chr2(7405:7408,:), 1, count);
  t.debug_monrotphi = read_int(chr2(7409:7412,:), 1, count);
  t.debug_nav = read_int(chr2(7413:7416,:), 1, count);
  t.debug_order = read_int(chr2(7417:7420,:), 1, count);
  t.debug_scale = read_int(chr2(7421:7424,:), 1, count);
  t.debug_scan = read_int(chr2(7425:7428,:), 1, count);
  t.debug_shimvol_slice = read_int(chr2(7429:7432,:), 1, count);
  t.debug_sp_agp = read_int(chr2(7433:7436,:), 1, count);
  t.debug_sp_rtp = read_int(chr2(7437:7440,:), 1, count);
  t.debug_tdel = read_int(chr2(7441:7444,:), 1, count);
  t.debug_viewtab = read_int(chr2(7445:7448,:), 1, count);
  t.decimation = read_int(chr2(7449:7452,:), 1, count);
  t.delay3Drecon_flag = read_int(chr2(7453:7456,:), 1, count);
  t.delay_dda = read_int(chr2(7457:7460,:), 1, count);
  t.delay_ec_flag = read_int(chr2(7461:7464,:), 1, count);
  t.delay_ec_frames = read_int(chr2(7465:7468,:), 1, count);
  t.delay_ec_period = read_int(chr2(7469:7472,:), 1, count);
  t.delay_quiet_dda = read_int(chr2(7473:7476,:), 1, count);
  t.delay_quiet_time = read_int(chr2(7477:7480,:), 1, count);
  t.delay_rfhubsel = read_int(chr2(7481:7484,:), 1, count);
  t.deltf = read_float(chr2(7485:7488,:), 1, count);
  t.derate_ACGD = read_int(chr2(7489:7492,:), 1, count);
  t.derate_gxwex = read_int(chr2(7493:7496,:), 1, count);
  t.derateb1_NV_factor = read_float(chr2(7497:7500,:), 1, count);
  t.derateb1_body_factor = read_float(chr2(7501:7504,:), 1, count);
  t.derateb1_default = read_float(chr2(7505:7508,:), 1, count);
  t.derateb1_dir = read_int(chr2(7509:7512,:), 1, count);
  t.derateb1_min = read_float(chr2(7513:7516,:), 1, count);
  t.derateb1_noniteropt = read_float(chr2(7517:7520,:), 1, count);
  t.derateb1_opt = read_float(chr2(7521:7524,:), 1, count);
  t.detector_mode = read_int(chr2(7525:7528,:), 1, count);
  t.dex = read_int(chr2(7529:7532,:), 1, count);
  t.df = read_int(chr2(7533:7536,:), 1, count);
  t.dfg = read_float(chr2(7537:7540,:), 1, count);
  t.dfscale = read_float(chr2(7541:7544,:), 1, count);
  t.disable_exciter_unblank = read_int(chr2(7545:7548,:), 1, count);
  t.disco_1echo_flag = read_int(chr2(7549:7552,:), 1, count);
  t.disco_flag = read_int(chr2(7553:7556,:), 1, count);
  t.disco_nphases = read_int(chr2(7557:7560,:), 1, count);
  t.discodda = read_int(chr2(7561:7564,:), 1, count);
  t.discretionaryB1rms = read_float(chr2(7565:7568,:), 1, count);
  t.discretionaryPeakB1 = read_float(chr2(7569:7572,:), 1, count);
  t.discretionaryave = read_float(chr2(7573:7576,:), 1, count);
  t.discretionaryhave = read_float(chr2(7577:7580,:), 1, count);
  t.dither_on = read_int(chr2(7581:7584,:), 1, count);
  t.dither_value = read_int(chr2(7585:7588,:), 1, count);
  t.dix_freq = read_float(chr2(7589:7592,:), 1, count);
  t.dix_timeas = read_int(chr2(7593:7596,:), 1, count);
  t.dnav_win_BAratio = read_float(chr2(7597:7600,:), 1, count);
  t.do_maxrbw_check_in_cveval = read_int(chr2(7601:7604,:), 1, count);
  t.dobaselines = read_int(chr2(7605:7608,:), 1, count);
  t.dtg_dda = read_int(chr2(7609:7612,:), 1, count);
  t.dtg_esp = read_int(chr2(7613:7616,:), 1, count);
  t.dtg_iso_delay = read_int(chr2(7617:7620,:), 1, count);
  t.dtg_off90 = read_int(chr2(7621:7624,:), 1, count);
  t.dtgloggrd = read_LOG_GRAD(chr2(7625:7924,:), 1, count);
  t.dtgphorder = read_int(chr2(7925:7928,:), 1, count);
  t.dtgspgr_flag = read_int(chr2(7929:7932,:), 1, count);
  t.dtgt_exa = read_int(chr2(7933:7936,:), 1, count);
  t.dtgt_exb = read_int(chr2(7937:7940,:), 1, count);
  t.dti_plus_flag = read_int(chr2(7941:7944,:), 1, count);
  t.dummy_pw = read_int(chr2(7945:7948,:), 1, count);
  t.dummyrf_ssitime = read_int(chr2(7949:7952,:), 1, count);
  t.dummyrf_time = read_int(chr2(7953:7956,:), 1, count);
  t.dump_channel_comp_optimal_recon = read_int(chr2(7957:7960,:), 1, count);
  t.dutycycle_scale = read_float(chr2(7961:7964,:), 1, count);
  t.dynTG_b1factor = read_float(chr2(7965:7968,:), 1, count);
  t.dynTG_baseline = read_int(chr2(7969:7972,:), 1, count);
  t.dynTG_etl = read_int(chr2(7973:7976,:), 1, count);
  t.dynTG_flipangle = read_float(chr2(7977:7980,:), 1, count);
  t.dynTG_fov = read_float(chr2(7981:7984,:), 1, count);
  t.dynTG_ptsize = read_int(chr2(7985:7988,:), 1, count);
  t.dynTG_slquant = read_int(chr2(7989:7992,:), 1, count);
  t.dynTG_slthick = read_float(chr2(7993:7996,:), 1, count);
  t.dynTG_xres = read_int(chr2(7997:8000,:), 1, count);
  t.dynTG_yres = read_int(chr2(8001:8004,:), 1, count);
  t.e2_delay_dtg = read_int(chr2(8005:8008,:), 1, count);
  t.e2_delay_rs = read_int(chr2(8009:8012,:), 1, count);
  t.ec3_iteration_method = read_int(chr2(8013:8016,:), 1, count);
  t.ec3_iterations = read_int(chr2(8017:8020,:), 1, count);
  t.ecg_cont_dda_flag = read_int(chr2(8021:8024,:), 1, count);
  t.ecg_dda = read_int(chr2(8025:8028,:), 1, count);
  t.ecg_dda_delay = read_int(chr2(8029:8032,:), 1, count);
  t.echo1bw = read_float(chr2(8033:8036,:), 1, count);
  t.echo1bwas = read_float(chr2(8037:8040,:), 1, count);
  t.echo1bwcfh = read_float(chr2(8041:8044,:), 1, count);
  t.echo1bwcfl = read_float(chr2(8045:8048,:), 1, count);
  t.echo1bwdtg = read_float(chr2(8049:8052,:), 1, count);
  t.echo1bwrcvn = read_float(chr2(8053:8056,:), 1, count);
  t.echo1bwrs = read_float(chr2(8057:8060,:), 1, count);
  t.echo1monbw = read_float(chr2(8061:8064,:), 1, count);
  t.echo2bw = read_float(chr2(8065:8068,:), 1, count);
  t.echo_sort_dir = read_int(chr2(8069:8072,:), 1, count);
  t.echoint = read_int(chr2(8073:8076,:), 1, count);
  t.eeff = read_int(chr2(8077:8080,:), 1, count);
  t.eepf = read_int(chr2(8081:8084,:), 1, count);
  t.eff_cfh_te = read_int(chr2(8085:8088,:), 1, count);
  t.eg_phaseres = read_int(chr2(8089:8092,:), 1, count);
  t.elava_flag = read_int(chr2(8093:8096,:), 1, count);
  t.ellipt_debug_files = read_int(chr2(8097:8100,:), 1, count);
  t.ellipt_flag = read_int(chr2(8101:8104,:), 1, count);
  t.enable_alpha = read_int(chr2(8105:8108,:), 1, count);
  t.enable_sbm = read_int(chr2(8109:8112,:), 1, count);
  t.enablfracdec = read_int(chr2(8113:8116,:), 1, count);
  t.encode = read_float(chr2(8117:8120,:), 1, count);
  t.encode2 = read_float(chr2(8121:8124,:), 1, count);
  t.encode_group = read_int(chr2(8125:8128,:), 1, count);
  t.end_gycylra = read_float(chr2(8129:8132,:), 1, count);
  t.end_gycylratipup = read_float(chr2(8133:8136,:), 1, count);
  t.end_gzcylra = read_float(chr2(8137:8140,:), 1, count);
  t.end_gzcylratipup = read_float(chr2(8141:8144,:), 1, count);
  t.end_segment_delay = read_int(chr2(8145:8148,:), 1, count);
  t.endview_iamp = read_int(chr2(8149:8152,:), 1, count);
  t.endview_iampas = read_int(chr2(8153:8156,:), 1, count);
  t.endview_iampdtg = read_int(chr2(8157:8160,:), 1, count);
  t.endview_iamprs = read_int(chr2(8161:8164,:), 1, count);
  t.endview_scale = read_float(chr2(8165:8168,:), 1, count);
  t.endview_scaleas = read_float(chr2(8169:8172,:), 1, count);
  t.endview_scaledtg = read_float(chr2(8173:8176,:), 1, count);
  t.endview_scalers = read_float(chr2(8177:8180,:), 1, count);
  t.endviewz_iamp = read_int(chr2(8181:8184,:), 1, count);
  t.endviewz_scale = read_float(chr2(8185:8188,:), 1, count);
  t.enforce_cal_for_channel_combine = read_int(chr2(8189:8192,:), 1, count);
  t.enforce_dbdtopt = read_int(chr2(8193:8196,:), 1, count);
  t.enforce_inrangetr = read_int(chr2(8197:8200,:), 1, count);
  t.enforce_minseqseg = read_int(chr2(8201:8204,:), 1, count);
  t.enhanced_nav_flag = read_int(chr2(8205:8208,:), 1, count);
  t.epi_ir_on = read_int(chr2(8209:8212,:), 1, count);
  t.equant = read_int(chr2(8213:8216,:), 1, count);
  t.esp = read_int(chr2(8217:8220,:), 1, count);
  t.esp_msde = read_int(chr2(8221:8224,:), 1, count);
  t.ethick = read_float(chr2(8225:8228,:), 1, count);
  t.exnex = read_int(chr2(8229:8232,:), 1, count);
  t.exsat1_dist = read_float(chr2(8233:8236,:), 1, count);
  t.exsat1_normth_A = read_float(chr2(8237:8240,:), 1, count);
  t.exsat1_normth_R = read_float(chr2(8241:8244,:), 1, count);
  t.exsat1_normth_S = read_float(chr2(8245:8248,:), 1, count);
  t.exsat2_dist = read_float(chr2(8249:8252,:), 1, count);
  t.exsat2_normth_A = read_float(chr2(8253:8256,:), 1, count);
  t.exsat2_normth_R = read_float(chr2(8257:8260,:), 1, count);
  t.exsat2_normth_S = read_float(chr2(8261:8264,:), 1, count);
  t.exsat3_dist = read_float(chr2(8265:8268,:), 1, count);
  t.exsat3_normth_A = read_float(chr2(8269:8272,:), 1, count);
  t.exsat3_normth_R = read_float(chr2(8273:8276,:), 1, count);
  t.exsat3_normth_S = read_float(chr2(8277:8280,:), 1, count);
  t.exsat4_dist = read_float(chr2(8281:8284,:), 1, count);
  t.exsat4_normth_A = read_float(chr2(8285:8288,:), 1, count);
  t.exsat4_normth_R = read_float(chr2(8289:8292,:), 1, count);
  t.exsat4_normth_S = read_float(chr2(8293:8296,:), 1, count);
  t.exsat5_dist = read_float(chr2(8297:8300,:), 1, count);
  t.exsat5_normth_A = read_float(chr2(8301:8304,:), 1, count);
  t.exsat5_normth_R = read_float(chr2(8305:8308,:), 1, count);
  t.exsat5_normth_S = read_float(chr2(8309:8312,:), 1, count);
  t.exsat6_dist = read_float(chr2(8313:8316,:), 1, count);
  t.exsat6_normth_A = read_float(chr2(8317:8320,:), 1, count);
  t.exsat6_normth_R = read_float(chr2(8321:8324,:), 1, count);
  t.exsat6_normth_S = read_float(chr2(8325:8328,:), 1, count);
  t.exsatthick1 = read_float(chr2(8329:8332,:), 1, count);
  t.exsatthick2 = read_float(chr2(8333:8336,:), 1, count);
  t.exsatthick3 = read_float(chr2(8337:8340,:), 1, count);
  t.exsatthick4 = read_float(chr2(8341:8344,:), 1, count);
  t.exsatthick5 = read_float(chr2(8345:8348,:), 1, count);
  t.exsatthick6 = read_float(chr2(8349:8352,:), 1, count);
  t.extraRRlimit = read_int(chr2(8353:8356,:), 1, count);
  t.extraScale = read_float(chr2(8357:8360,:), 1, count);
  t.extras = read_int(chr2(8361:8364,:), 1, count);
  t.extraspecial_flag = read_int(chr2(8365:8368,:), 1, count);
  t.extraspecial_seq_order_flag = read_int(chr2(8369:8372,:), 1, count);
  t.fa_scale_debug = read_int(chr2(8373:8376,:), 1, count);
  t.fast_xtr = read_int(chr2(8377:8380,:), 1, count);
  t.fastprescan = read_int(chr2(8381:8384,:), 1, count);
  t.fatFlag = read_int(chr2(8385:8388,:), 1, count);
  t.fatT1 = read_int(chr2(8389:8392,:), 1, count);
  t.fat_delta = read_float(chr2(8393:8396,:), 1, count);
  t.fat_flag = read_int(chr2(8397:8400,:), 1, count);
  t.fat_offset = read_int(chr2(8401:8404,:), 1, count);
  t.fatkiller_flag = read_int(chr2(8405:8408,:), 1, count);
  t.fc_debug = read_int(chr2(8409:8412,:), 1, count);
  t.fcineim = read_int(chr2(8413:8416,:), 1, count);
  t.fcinent = read_int(chr2(8417:8420,:), 1, count);
  t.fecho_factor = read_float(chr2(8421:8424,:), 1, count);
  t.fermi_r_factor = read_float(chr2(8425:8428,:), 1, count);
  t.fermi_rc = read_float(chr2(8429:8432,:), 1, count);
  t.fermi_w_factor = read_float(chr2(8433:8436,:), 1, count);
  t.fermi_wc = read_float(chr2(8437:8440,:), 1, count);
  t.fermr_coef_1024 = read_int(chr2(8441:8444,:), 1, count);
  t.ff4error = read_float(chr2(8445:8448,:), 1, count);
  t.field_strength = read_int(chr2(8449:8452,:), 1, count);
  t.fieldstrength = read_float(chr2(8453:8456,:), 1, count);
  t.fiesta_gated_dda = read_int(chr2(8457:8460,:), 1, count);
  t.fiesta_gated_flat_dda = read_int(chr2(8461:8464,:), 1, count);
  t.fiesta_gated_ramp_dda = read_int(chr2(8465:8468,:), 1, count);
  t.fiesta_gated_ramp_down = read_int(chr2(8469:8472,:), 1, count);
  t.fiesta_killer_flag = read_int(chr2(8473:8476,:), 1, count);
  t.fiesta_rampup_type = read_int(chr2(8477:8480,:), 1, count);
  t.filter_cfh_fid = read_int(chr2(8481:8484,:), 1, count);
  t.filter_cfl_fid = read_int(chr2(8485:8488,:), 1, count);
  t.filter_echo1 = read_int(chr2(8489:8492,:), 1, count);
  t.filter_echo1as = read_int(chr2(8493:8496,:), 1, count);
  t.filter_echo1dtg = read_int(chr2(8497:8500,:), 1, count);
  t.filter_echo1ftg = read_int(chr2(8501:8504,:), 1, count);
  t.filter_echo1mon = read_int(chr2(8505:8508,:), 1, count);
  t.filter_echo1mps1 = read_int(chr2(8509:8512,:), 1, count);
  t.filter_echo1rs = read_int(chr2(8513:8516,:), 1, count);
  t.filter_echo1tm = read_int(chr2(8517:8520,:), 1, count);
  t.filter_echo1xtg = read_int(chr2(8521:8524,:), 1, count);
  t.filter_echo2 = read_int(chr2(8525:8528,:), 1, count);
  t.filter_echo2ftg = read_int(chr2(8529:8532,:), 1, count);
  t.filter_rcvn_fid = read_int(chr2(8533:8536,:), 1, count);
  t.filterslot1 = read_int(chr2(8537:8540,:), 1, count);
  t.filterslot2 = read_int(chr2(8541:8544,:), 1, count);
  t.firstSeriesFlag = read_int(chr2(8545:8548,:), 1, count);
  t.first_prepscan = read_STATUS(chr2(8549:8552,:), 1, count);
  t.first_scan = read_STATUS(chr2(8553:8556,:), 1, count);
  t.fix_fermi = read_int(chr2(8557:8560,:), 1, count);
  t.fl_width_x_frac = read_float(chr2(8561:8564,:), 1, count);
  t.fl_width_x_full = read_float(chr2(8565:8568,:), 1, count);
  t.flexte_flag = read_int(chr2(8569:8572,:), 1, count);
  t.flextr_flag = read_int(chr2(8573:8576,:), 1, count);
  t.flip_hard180 = read_float(chr2(8577:8580,:), 1, count);
  t.flip_pctas = read_float(chr2(8581:8584,:), 1, count);
  t.flip_rf0 = read_float(chr2(8585:8588,:), 1, count);
  t.flip_rf0cfh = read_float(chr2(8589:8592,:), 1, count);
  t.flip_rf1 = read_float(chr2(8593:8596,:), 1, count);
  t.flip_rf180 = read_float(chr2(8597:8600,:), 1, count);
  t.flip_rf1as = read_float(chr2(8601:8604,:), 1, count);
  t.flip_rf1cfh = read_float(chr2(8605:8608,:), 1, count);
  t.flip_rf1cfl = read_float(chr2(8609:8612,:), 1, count);
  t.flip_rf1dtg = read_float(chr2(8613:8616,:), 1, count);
  t.flip_rf1ftg = read_float(chr2(8617:8620,:), 1, count);
  t.flip_rf1mon = read_float(chr2(8621:8624,:), 1, count);
  t.flip_rf1mps1 = read_float(chr2(8625:8628,:), 1, count);
  t.flip_rf1rs = read_float(chr2(8629:8632,:), 1, count);
  t.flip_rf1tm = read_float(chr2(8633:8636,:), 1, count);
  t.flip_rf1xtg = read_float(chr2(8637:8640,:), 1, count);
  t.flip_rf2cfh = read_float(chr2(8641:8644,:), 1, count);
  t.flip_rf2ftg = read_float(chr2(8645:8648,:), 1, count);
  t.flip_rf2mon = read_float(chr2(8649:8652,:), 1, count);
  t.flip_rf2mps1 = read_float(chr2(8653:8656,:), 1, count);
  t.flip_rf2xtg = read_float(chr2(8657:8660,:), 1, count);
  t.flip_rf3cfh = read_float(chr2(8661:8664,:), 1, count);
  t.flip_rf3ftg = read_float(chr2(8665:8668,:), 1, count);
  t.flip_rf3xtg = read_float(chr2(8669:8672,:), 1, count);
  t.flip_rf4cfh = read_float(chr2(8673:8676,:), 1, count);
  t.flip_rf4xtg = read_float(chr2(8677:8680,:), 1, count);
  t.flip_rf90 = read_float(chr2(8681:8684,:), 1, count);
  t.flip_rfbdtg = read_float(chr2(8685:8688,:), 1, count);
  t.flip_rfbrs = read_float(chr2(8689:8692,:), 1, count);
  t.flip_rfcssat = read_float(chr2(8693:8696,:), 1, count);
  t.flip_rfcssat_noscale = read_float(chr2(8697:8700,:), 1, count);
  t.flip_rfcssatcfh = read_float(chr2(8701:8704,:), 1, count);
  t.flip_rfcylr = read_float(chr2(8705:8708,:), 1, count);
  t.flip_rfcylr_navsat = read_float(chr2(8709:8712,:), 1, count);
  t.flip_rfcylrtipup = read_float(chr2(8713:8716,:), 1, count);
  t.flip_rfflp180 = read_float(chr2(8717:8720,:), 1, count);
  t.flip_rfflp90 = read_float(chr2(8721:8724,:), 1, count);
  t.flip_rfflp90r = read_float(chr2(8725:8728,:), 1, count);
  t.flip_rffrir = read_float(chr2(8729:8732,:), 1, count);
  t.flip_rffs = read_float(chr2(8733:8736,:), 1, count);
  t.flip_rfgir01 = read_float(chr2(8737:8740,:), 1, count);
  t.flip_rfgir02 = read_float(chr2(8741:8744,:), 1, count);
  t.flip_rfmon_navsat = read_float(chr2(8745:8748,:), 1, count);
  t.flip_rfmontipup = read_float(chr2(8749:8752,:), 1, count);
  t.flip_rfs5fph = read_float(chr2(8753:8756,:), 1, count);
  t.flip_rfse1 = read_float(chr2(8757:8760,:), 1, count);
  t.flip_rfse2 = read_float(chr2(8761:8764,:), 1, count);
  t.flip_rfse3 = read_float(chr2(8765:8768,:), 1, count);
  t.flip_rfse4 = read_float(chr2(8769:8772,:), 1, count);
  t.flip_rfse5 = read_float(chr2(8773:8776,:), 1, count);
  t.flip_rfse6 = read_float(chr2(8777:8780,:), 1, count);
  t.flip_rfssf = read_float(chr2(8781:8784,:), 1, count);
  t.flip_rfssfh = read_float(chr2(8785:8788,:), 1, count);
  t.flip_rfsx1 = read_float(chr2(8789:8792,:), 1, count);
  t.flip_rfsx2 = read_float(chr2(8793:8796,:), 1, count);
  t.flip_rfsy1 = read_float(chr2(8797:8800,:), 1, count);
  t.flip_rfsy2 = read_float(chr2(8801:8804,:), 1, count);
  t.flip_rfsz1 = read_float(chr2(8805:8808,:), 1, count);
  t.flip_rfsz2 = read_float(chr2(8809:8812,:), 1, count);
  t.flip_rftipup = read_float(chr2(8813:8816,:), 1, count);
  t.flow4D_flag = read_int(chr2(8817:8820,:), 1, count);
  t.flow_comp_type = read_int(chr2(8821:8824,:), 1, count);
  t.flow_wdth_x = read_float(chr2(8825:8828,:), 1, count);
  t.flow_wdth_y = read_float(chr2(8829:8832,:), 1, count);
  t.flow_wdth_z = read_float(chr2(8833:8836,:), 1, count);
  t.flowpos1x = read_int(chr2(8837:8840,:), 1, count);
  t.flowpos1y = read_int(chr2(8841:8844,:), 1, count);
  t.flowpos1z = read_int(chr2(8845:8848,:), 1, count);
  t.flowpos2x = read_int(chr2(8849:8852,:), 1, count);
  t.flowpos2y = read_int(chr2(8853:8856,:), 1, count);
  t.flowpos2z = read_int(chr2(8857:8860,:), 1, count);
  t.fn = read_float(chr2(8861:8864,:), 1, count);
  t.fnecho_frac = read_float(chr2(8865:8868,:), 1, count);
  t.fnecho_lim = read_float(chr2(8869:8872,:), 1, count);
  t.force_gradOpt_loop_break = read_int(chr2(8873:8876,:), 1, count);
  t.fov_advisory_ignore_mslices = read_int(chr2(8877:8880,:), 1, count);
  t.fov_factor = read_float(chr2(8881:8884,:), 1, count);
  t.fov_freq_scale = read_float(chr2(8885:8888,:), 1, count);
  t.fov_lim_mps = read_float(chr2(8889:8892,:), 1, count);
  t.fov_phase_scale = read_float(chr2(8893:8896,:), 1, count);
  t.fov_scaling = read_float(chr2(8897:8900,:), 1, count);
  t.frac_rf = read_int(chr2(8901:8904,:), 1, count);
  t.fract_echo_annefact_reduction = read_float(chr2(8905:8908,:), 1, count);
  t.freqSign = read_int(chr2(8909:8912,:), 1, count);
  t.freq_scale = read_float(chr2(8913:8916,:), 1, count);
  t.fs_2pi = read_int(chr2(8917:8920,:), 1, count);
  t.fs_pcfiesta_flag = read_int(chr2(8921:8924,:), 1, count);
  t.fs_pi = read_int(chr2(8925:8928,:), 1, count);
  t.ftg_dda = read_int(chr2(8929:8932,:), 1, count);
  t.ftgscale = read_float(chr2(8933:8936,:), 1, count);
  t.ftgtr = read_int(chr2(8937:8940,:), 1, count);
  t.ftmra_debug = read_int(chr2(8941:8944,:), 1, count);
  t.ftmra_dfsat_flag = read_int(chr2(8945:8948,:), 1, count);
  t.ftmra_enable_flag = read_int(chr2(8949:8952,:), 1, count);
  t.ftmra_exsat_flag = read_int(chr2(8953:8956,:), 1, count);
  t.ftmra_flag = read_int(chr2(8957:8960,:), 1, count);
  t.ftmra_hard180_act = read_int(chr2(8961:8964,:), 1, count);
  t.ftmra_sat_flag = read_int(chr2(8965:8968,:), 1, count);
  t.fullte_flag = read_int(chr2(8969:8972,:), 1, count);
  t.gated_dda = read_int(chr2(8973:8976,:), 1, count);
  t.gating = read_int(chr2(8977:8980,:), 1, count);
  t.genview_ellipt_cal = read_int(chr2(8981:8984,:), 1, count);
  t.genview_fovVthick_scale = read_float(chr2(8985:8988,:), 1, count);
  t.genview_maxaphase = read_int(chr2(8989:8992,:), 1, count);
  t.genview_totalviews = read_int(chr2(8993:8996,:), 1, count);
  t.get_fullecho = read_int(chr2(8997:9000,:), 1, count);
  t.gir_newgeo = read_int(chr2(9001:9004,:), 1, count);
  t.gir_obl_debug = read_int(chr2(9005:9008,:), 1, count);
  t.gir_rfiso1 = read_int(chr2(9009:9012,:), 1, count);
  t.gir_rfiso2 = read_int(chr2(9013:9016,:), 1, count);
  t.gir_start = read_int(chr2(9017:9020,:), 1, count);
  t.gir_td0 = read_int(chr2(9021:9024,:), 1, count);
  t.gir_time = read_int(chr2(9025:9028,:), 1, count);
  t.gir_time_daq = read_int(chr2(9029:9032,:), 1, count);
  t.gir_time_eval = read_int(chr2(9033:9036,:), 1, count);
  t.girloggrd = read_LOG_GRAD(chr2(9037:9336,:), 1, count);
  t.gldelayf = read_float(chr2(9337:9340,:), 1, count);
  t.glimit = read_float(chr2(9341:9344,:), 1, count);
  t.glimit_x = read_float(chr2(9345:9348,:), 1, count);
  t.glimit_y = read_float(chr2(9349:9352,:), 1, count);
  t.glimit_z = read_float(chr2(9353:9356,:), 1, count);
  t.golden_ratio_flag = read_int(chr2(9357:9360,:), 1, count);
  t.gradChokeFlag = read_int(chr2(9361:9364,:), 1, count);
  t.gradCoilMethod = read_int(chr2(9365:9368,:), 1, count);
  t.gradDCsafeMethod = read_int(chr2(9369:9372,:), 1, count);
  t.gradDriverMethod = read_int(chr2(9373:9376,:), 1, count);
  t.gradHeatFile = read_int(chr2(9377:9380,:), 1, count);
  t.gradHeatFlag = read_int(chr2(9381:9384,:), 1, count);
  t.gradHeatMethod = read_int(chr2(9385:9388,:), 1, count);
  t.gradOpt_GX2 = read_int(chr2(9389:9392,:), 1, count);
  t.gradOpt_Piter_count = read_int(chr2(9393:9396,:), 1, count);
  t.gradOpt_Ptor = read_float(chr2(9397:9400,:), 1, count);
  t.gradOpt_Pweight = read_float(chr2(9401:9404,:), 1, count);
  t.gradOpt_TE = read_int(chr2(9405:9408,:), 1, count);
  t.gradOpt_TEfactor = read_float(chr2(9409:9412,:), 1, count);
  t.gradOpt_TEfactor_Max = read_float(chr2(9413:9416,:), 1, count);
  t.gradOpt_TEfactor_Min = read_float(chr2(9417:9420,:), 1, count);
  t.gradOpt_TRfactor = read_float(chr2(9421:9424,:), 1, count);
  t.gradOpt_TRfactor_Max = read_float(chr2(9425:9428,:), 1, count);
  t.gradOpt_TRfactor_Min = read_float(chr2(9429:9432,:), 1, count);
  t.gradOpt_aTETR_method = read_int(chr2(9433:9436,:), 1, count);
  t.gradOpt_convergence_flag = read_int(chr2(9437:9440,:), 1, count);
  t.gradOpt_flag = read_int(chr2(9441:9444,:), 1, count);
  t.gradOpt_iter_count = read_int(chr2(9445:9448,:), 1, count);
  t.gradOpt_nonconv_tor = read_float(chr2(9449:9452,:), 1, count);
  t.gradOpt_nonconv_tor_limit = read_float(chr2(9453:9456,:), 1, count);
  t.gradOpt_powerOpt_flag = read_int(chr2(9457:9460,:), 1, count);
  t.gradOpt_powerTE = read_float(chr2(9461:9464,:), 1, count);
  t.gradOpt_powerTR = read_float(chr2(9465:9468,:), 1, count);
  t.gradOpt_ratio = read_float(chr2(9469:9472,:), 1, count);
  t.gradOpt_run_flag = read_int(chr2(9473:9476,:), 1, count);
  t.gradOpt_scale = read_float(chr2(9477:9480,:), 1, count);
  t.gradOpt_scale_Max = read_float(chr2(9481:9484,:), 1, count);
  t.gradOpt_scale_Min = read_float(chr2(9485:9488,:), 1, count);
  t.gradOpt_slewRate = read_float(chr2(9489:9492,:), 1, count);
  t.gradOpt_slewRate_limit = read_float(chr2(9493:9496,:), 1, count);
  t.gradOpt_slewRate_tmp = read_float(chr2(9497:9500,:), 1, count);
  t.gradOpt_tor = read_float(chr2(9501:9504,:), 1, count);
  t.gradOpt_weight = read_float(chr2(9505:9508,:), 1, count);
  t.grad_intensity_thres = read_float(chr2(9509:9512,:), 1, count);
  t.grad_spec_change_flag = read_int(chr2(9513:9516,:), 1, count);
  t.grad_spec_ctrl = read_int(chr2(9517:9520,:), 1, count);
  t.gradient_mode = read_int(chr2(9521:9524,:), 1, count);
  t.grid_fov_factor = read_int(chr2(9525:9528,:), 1, count);
  t.gsat_scale = read_float(chr2(9529:9532,:), 1, count);
  t.gscale_hard180 = read_float(chr2(9533:9536,:), 1, count);
  t.gscale_kill = read_float(chr2(9537:9540,:), 1, count);
  t.gscale_omega_hs_rfcssat = read_float(chr2(9541:9544,:), 1, count);
  t.gscale_omega_ir0 = read_float(chr2(9545:9548,:), 1, count);
  t.gscale_omega_rffrir = read_float(chr2(9549:9552,:), 1, count);
  t.gscale_omega_rfgir01 = read_float(chr2(9553:9556,:), 1, count);
  t.gscale_omega_rfgir02 = read_float(chr2(9557:9560,:), 1, count);
  t.gscale_omegarf0cfh = read_float(chr2(9561:9564,:), 1, count);
  t.gscale_rf0 = read_float(chr2(9565:9568,:), 1, count);
  t.gscale_rf0cfh = read_float(chr2(9569:9572,:), 1, count);
  t.gscale_rf1 = read_float(chr2(9573:9576,:), 1, count);
  t.gscale_rf1as = read_float(chr2(9577:9580,:), 1, count);
  t.gscale_rf1cfh = read_float(chr2(9581:9584,:), 1, count);
  t.gscale_rf1cfl = read_float(chr2(9585:9588,:), 1, count);
  t.gscale_rf1dtg = read_float(chr2(9589:9592,:), 1, count);
  t.gscale_rf1ftg = read_float(chr2(9593:9596,:), 1, count);
  t.gscale_rf1mon = read_float(chr2(9597:9600,:), 1, count);
  t.gscale_rf1mps1 = read_float(chr2(9601:9604,:), 1, count);
  t.gscale_rf1rs = read_float(chr2(9605:9608,:), 1, count);
  t.gscale_rf1tm = read_float(chr2(9609:9612,:), 1, count);
  t.gscale_rf1xtg = read_float(chr2(9613:9616,:), 1, count);
  t.gscale_rf2ftg = read_float(chr2(9617:9620,:), 1, count);
  t.gscale_rf2mon = read_float(chr2(9621:9624,:), 1, count);
  t.gscale_rf2mps1 = read_float(chr2(9625:9628,:), 1, count);
  t.gscale_rf2xtg = read_float(chr2(9629:9632,:), 1, count);
  t.gscale_rf3ftg = read_float(chr2(9633:9636,:), 1, count);
  t.gscale_rf3xtg = read_float(chr2(9637:9640,:), 1, count);
  t.gscale_rf4xtg = read_float(chr2(9641:9644,:), 1, count);
  t.gscale_rf90 = read_float(chr2(9645:9648,:), 1, count);
  t.gscale_rfcssat = read_float(chr2(9649:9652,:), 1, count);
  t.gscale_rfflp180 = read_float(chr2(9653:9656,:), 1, count);
  t.gscale_rfflp180_the = read_float(chr2(9657:9660,:), 1, count);
  t.gscale_rfflp90 = read_float(chr2(9661:9664,:), 1, count);
  t.gscale_rfflp90_the = read_float(chr2(9665:9668,:), 1, count);
  t.gscale_rfflp90r = read_float(chr2(9669:9672,:), 1, count);
  t.gscale_rfflp90r_the = read_float(chr2(9673:9676,:), 1, count);
  t.gscale_rffrir = read_float(chr2(9677:9680,:), 1, count);
  t.gscale_rfgir01 = read_float(chr2(9681:9684,:), 1, count);
  t.gscale_rfgir02 = read_float(chr2(9685:9688,:), 1, count);
  t.gscale_rfmontipup = read_float(chr2(9689:9692,:), 1, count);
  t.gscale_rfse1 = read_float(chr2(9693:9696,:), 1, count);
  t.gscale_rfse2 = read_float(chr2(9697:9700,:), 1, count);
  t.gscale_rfse3 = read_float(chr2(9701:9704,:), 1, count);
  t.gscale_rfse4 = read_float(chr2(9705:9708,:), 1, count);
  t.gscale_rfse5 = read_float(chr2(9709:9712,:), 1, count);
  t.gscale_rfse6 = read_float(chr2(9713:9716,:), 1, count);
  t.gscale_rfsx1 = read_float(chr2(9717:9720,:), 1, count);
  t.gscale_rfsx2 = read_float(chr2(9721:9724,:), 1, count);
  t.gscale_rfsy1 = read_float(chr2(9725:9728,:), 1, count);
  t.gscale_rfsy2 = read_float(chr2(9729:9732,:), 1, count);
  t.gscale_rfsz1 = read_float(chr2(9733:9736,:), 1, count);
  t.gscale_rfsz2 = read_float(chr2(9737:9740,:), 1, count);
  t.gscale_rftipup = read_float(chr2(9741:9744,:), 1, count);
  t.gxfctarget = read_float(chr2(9745:9748,:), 1, count);
  t.gxwex_bridge = read_int(chr2(9749:9752,:), 1, count);
  t.gxwex_on = read_int(chr2(9753:9756,:), 1, count);
  t.gxwex_target = read_float(chr2(9757:9760,:), 1, count);
  t.gxwex_target_hfdslite = read_float(chr2(9761:9764,:), 1, count);
  t.gxwex_target_hfdslite_value_3dde = read_float(chr2(9765:9768,:), 1, count);
  t.gyfctarget = read_float(chr2(9769:9772,:), 1, count);
  t.gykcs_max = read_int(chr2(9773:9776,:), 1, count);
  t.gz1_first_moment = read_float(chr2(9777:9780,:), 1, count);
  t.gz1_zero_moment = read_float(chr2(9781:9784,:), 1, count);
  t.gz_time = read_int(chr2(9785:9788,:), 1, count);
  t.gzfctarget = read_float(chr2(9789:9792,:), 1, count);
  t.gzptime = read_int(chr2(9793:9796,:), 1, count);
  t.gztype = read_int(chr2(9797:9800,:), 1, count);
  t.had_sat = read_int(chr2(9801:9804,:), 1, count);
  t.hard180time = read_int(chr2(9805:9808,:), 1, count);
  t.headneck_pos_scan = read_int(chr2(9809:9812,:), 1, count);
  t.heart3d_flag = read_int(chr2(9813:9816,:), 1, count);
  t.higher_dbdt_flag = read_int(chr2(9817:9820,:), 1, count);
  t.hires_recon = read_int(chr2(9821:9824,:), 1, count);
  t.hist_wait_time = read_int(chr2(9825:9828,:), 1, count);
  t.hrf1a = read_int(chr2(9829:9832,:), 1, count);
  t.hrf1b = read_int(chr2(9833:9836,:), 1, count);
  t.hst_flag = read_int(chr2(9837:9840,:), 1, count);
  t.hst_length = read_int(chr2(9841:9844,:), 1, count);
  t.ia_cine3d = read_int(chr2(9845:9848,:), 1, count);
  t.ia_coilsw_off = read_int(chr2(9849:9852,:), 1, count);
  t.ia_coilsw_on = read_int(chr2(9853:9856,:), 1, count);
  t.ia_contrfhubsel = read_int(chr2(9857:9860,:), 1, count);
  t.ia_contrfsel = read_int(chr2(9861:9864,:), 1, count);
  t.ia_dDDIQ = read_int(chr2(9865:9868,:), 1, count);
  t.ia_ddphase = read_int(chr2(9869:9872,:), 1, count);
  t.ia_de = read_int(chr2(9873:9876,:), 1, count);
  t.ia_dtreg = read_int(chr2(9877:9880,:), 1, count);
  t.ia_dtregpass = read_int(chr2(9881:9884,:), 1, count);
  t.ia_endgycylra = read_int(chr2(9885:9888,:), 1, count);
  t.ia_endgycylratipup = read_int(chr2(9889:9892,:), 1, count);
  t.ia_endgzcylra = read_int(chr2(9893:9896,:), 1, count);
  t.ia_endgzcylratipup = read_int(chr2(9897:9900,:), 1, count);
  t.ia_gx1 = read_int(chr2(9901:9904,:), 1, count);
  t.ia_gx1as = read_int(chr2(9905:9908,:), 1, count);
  t.ia_gx1bftg = read_int(chr2(9909:9912,:), 1, count);
  t.ia_gx1bxtg = read_int(chr2(9913:9916,:), 1, count);
  t.ia_gx1cfh = read_int(chr2(9917:9920,:), 1, count);
  t.ia_gx1d = read_int(chr2(9921:9924,:), 1, count);
  t.ia_gx1dtg = read_int(chr2(9925:9928,:), 1, count);
  t.ia_gx1fed = read_int(chr2(9929:9932,:), 1, count);
  t.ia_gx1fen = read_int(chr2(9933:9936,:), 1, count);
  t.ia_gx1feu = read_int(chr2(9937:9940,:), 1, count);
  t.ia_gx1ftg = read_int(chr2(9941:9944,:), 1, count);
  t.ia_gx1mon = read_int(chr2(9945:9948,:), 1, count);
  t.ia_gx1mps1 = read_int(chr2(9949:9952,:), 1, count);
  t.ia_gx1rs = read_int(chr2(9953:9956,:), 1, count);
  t.ia_gx1tm = read_int(chr2(9957:9960,:), 1, count);
  t.ia_gx1u = read_int(chr2(9961:9964,:), 1, count);
  t.ia_gx1wa = read_int(chr2(9965:9968,:), 1, count);
  t.ia_gx1wb = read_int(chr2(9969:9972,:), 1, count);
  t.ia_gx2 = read_int(chr2(9973:9976,:), 1, count);
  t.ia_gx2dtg = read_int(chr2(9977:9980,:), 1, count);
  t.ia_gx2fed = read_int(chr2(9981:9984,:), 1, count);
  t.ia_gx2fen = read_int(chr2(9985:9988,:), 1, count);
  t.ia_gx2feu = read_int(chr2(9989:9992,:), 1, count);
  t.ia_gx2ftg = read_int(chr2(9993:9996,:), 1, count);
  t.ia_gx2rs = read_int(chr2(9997:10000,:), 1, count);
  t.ia_gx2test = read_int(chr2(10001:10004,:), 1, count);
  t.ia_gxb = read_int(chr2(10005:10008,:), 1, count);
  t.ia_gxbrsfc1 = read_int(chr2(10009:10012,:), 1, count);
  t.ia_gxbrsfc2 = read_int(chr2(10013:10016,:), 1, count);
  t.ia_gxfc = read_int(chr2(10017:10020,:), 1, count);
  t.ia_gxfcd = read_int(chr2(10021:10024,:), 1, count);
  t.ia_gxfcmon = read_int(chr2(10025:10028,:), 1, count);
  t.ia_gxfcu = read_int(chr2(10029:10032,:), 1, count);
  t.ia_gxflpk = read_int(chr2(10033:10036,:), 1, count);
  t.ia_gxflpkwa = read_int(chr2(10037:10040,:), 1, count);
  t.ia_gxflpkwb = read_int(chr2(10041:10044,:), 1, count);
  t.ia_gxflpvenc = read_int(chr2(10045:10048,:), 1, count);
  t.ia_gxflpvencwa = read_int(chr2(10049:10052,:), 1, count);
  t.ia_gxflpvencwb = read_int(chr2(10053:10056,:), 1, count);
  t.ia_gxhyst1 = read_int(chr2(10057:10060,:), 1, count);
  t.ia_gxhyst2 = read_int(chr2(10061:10064,:), 1, count);
  t.ia_gxkas = read_int(chr2(10065:10068,:), 1, count);
  t.ia_gxkbsdtg = read_int(chr2(10069:10072,:), 1, count);
  t.ia_gxkbsrs = read_int(chr2(10073:10076,:), 1, count);
  t.ia_gxkcs = read_int(chr2(10077:10080,:), 1, count);
  t.ia_gxkdtg = read_int(chr2(10081:10084,:), 1, count);
  t.ia_gxkfs = read_int(chr2(10085:10088,:), 1, count);
  t.ia_gxkill = read_int(chr2(10089:10092,:), 1, count);
  t.ia_gxkrcvn = read_int(chr2(10093:10096,:), 1, count);
  t.ia_gxkrs = read_int(chr2(10097:10100,:), 1, count);
  t.ia_gxks = read_int(chr2(10101:10104,:), 1, count);
  t.ia_gxkse1 = read_int(chr2(10105:10108,:), 1, count);
  t.ia_gxkse2 = read_int(chr2(10109:10112,:), 1, count);
  t.ia_gxkse3 = read_int(chr2(10113:10116,:), 1, count);
  t.ia_gxkse4 = read_int(chr2(10117:10120,:), 1, count);
  t.ia_gxkse5 = read_int(chr2(10121:10124,:), 1, count);
  t.ia_gxkse6 = read_int(chr2(10125:10128,:), 1, count);
  t.ia_gxksp = read_int(chr2(10129:10132,:), 1, count);
  t.ia_gxkssf = read_int(chr2(10133:10136,:), 1, count);
  t.ia_gxksx1 = read_int(chr2(10137:10140,:), 1, count);
  t.ia_gxksx2 = read_int(chr2(10141:10144,:), 1, count);
  t.ia_gxksy1 = read_int(chr2(10145:10148,:), 1, count);
  t.ia_gxksy2 = read_int(chr2(10149:10152,:), 1, count);
  t.ia_gxksz1 = read_int(chr2(10153:10156,:), 1, count);
  t.ia_gxksz2 = read_int(chr2(10157:10160,:), 1, count);
  t.ia_gxrf1tm = read_int(chr2(10161:10164,:), 1, count);
  t.ia_gxrf2cfh = read_int(chr2(10165:10168,:), 1, count);
  t.ia_gxrfsx1 = read_int(chr2(10169:10172,:), 1, count);
  t.ia_gxrfsx2 = read_int(chr2(10173:10176,:), 1, count);
  t.ia_gxspiral = read_int(chr2(10177:10180,:), 1, count);
  t.ia_gxspiral2 = read_int(chr2(10181:10184,:), 1, count);
  t.ia_gxspoil = read_int(chr2(10185:10188,:), 1, count);
  t.ia_gxspoil2 = read_int(chr2(10189:10192,:), 1, count);
  t.ia_gxw = read_int(chr2(10193:10196,:), 1, count);
  t.ia_gxw1ftg = read_int(chr2(10197:10200,:), 1, count);
  t.ia_gxw1xtg = read_int(chr2(10201:10204,:), 1, count);
  t.ia_gxw2 = read_int(chr2(10205:10208,:), 1, count);
  t.ia_gxw2dtg = read_int(chr2(10209:10212,:), 1, count);
  t.ia_gxw2ftg = read_int(chr2(10213:10216,:), 1, count);
  t.ia_gxw2rs = read_int(chr2(10217:10220,:), 1, count);
  t.ia_gxwas = read_int(chr2(10221:10224,:), 1, count);
  t.ia_gxwdtg = read_int(chr2(10225:10228,:), 1, count);
  t.ia_gxwex = read_int(chr2(10229:10232,:), 1, count);
  t.ia_gxwmon = read_int(chr2(10233:10236,:), 1, count);
  t.ia_gxwmps1 = read_int(chr2(10237:10240,:), 1, count);
  t.ia_gxwrs = read_int(chr2(10241:10244,:), 1, count);
  t.ia_gy1 = read_int(chr2(10245:10248,:), 1, count);
  t.ia_gy1as = read_int(chr2(10249:10252,:), 1, count);
  t.ia_gy1aswa = read_int(chr2(10253:10256,:), 1, count);
  t.ia_gy1aswb = read_int(chr2(10257:10260,:), 1, count);
  t.ia_gy1cfh = read_int(chr2(10261:10264,:), 1, count);
  t.ia_gy1dtg = read_int(chr2(10265:10268,:), 1, count);
  t.ia_gy1dtgwa = read_int(chr2(10269:10272,:), 1, count);
  t.ia_gy1dtgwb = read_int(chr2(10273:10276,:), 1, count);
  t.ia_gy1fed = read_int(chr2(10277:10280,:), 1, count);
  t.ia_gy1fen = read_int(chr2(10281:10284,:), 1, count);
  t.ia_gy1feu = read_int(chr2(10285:10288,:), 1, count);
  t.ia_gy1mon = read_int(chr2(10289:10292,:), 1, count);
  t.ia_gy1mps1 = read_int(chr2(10293:10296,:), 1, count);
  t.ia_gy1r = read_int(chr2(10297:10300,:), 1, count);
  t.ia_gy1ras = read_int(chr2(10301:10304,:), 1, count);
  t.ia_gy1raswa = read_int(chr2(10305:10308,:), 1, count);
  t.ia_gy1raswb = read_int(chr2(10309:10312,:), 1, count);
  t.ia_gy1rdtg = read_int(chr2(10313:10316,:), 1, count);
  t.ia_gy1rdtgwa = read_int(chr2(10317:10320,:), 1, count);
  t.ia_gy1rdtgwb = read_int(chr2(10321:10324,:), 1, count);
  t.ia_gy1rrs = read_int(chr2(10325:10328,:), 1, count);
  t.ia_gy1rrswa = read_int(chr2(10329:10332,:), 1, count);
  t.ia_gy1rrswb = read_int(chr2(10333:10336,:), 1, count);
  t.ia_gy1rs = read_int(chr2(10337:10340,:), 1, count);
  t.ia_gy1rswa = read_int(chr2(10341:10344,:), 1, count);
  t.ia_gy1rswb = read_int(chr2(10345:10348,:), 1, count);
  t.ia_gy1rwa = read_int(chr2(10349:10352,:), 1, count);
  t.ia_gy1rwb = read_int(chr2(10353:10356,:), 1, count);
  t.ia_gy1tm = read_int(chr2(10357:10360,:), 1, count);
  t.ia_gy1wa = read_int(chr2(10361:10364,:), 1, count);
  t.ia_gy1wb = read_int(chr2(10365:10368,:), 1, count);
  t.ia_gy2dtg = read_int(chr2(10369:10372,:), 1, count);
  t.ia_gy2dtgwa = read_int(chr2(10373:10376,:), 1, count);
  t.ia_gy2dtgwb = read_int(chr2(10377:10380,:), 1, count);
  t.ia_gy2fed = read_int(chr2(10381:10384,:), 1, count);
  t.ia_gy2fen = read_int(chr2(10385:10388,:), 1, count);
  t.ia_gy2feu = read_int(chr2(10389:10392,:), 1, count);
  t.ia_gy2rs = read_int(chr2(10393:10396,:), 1, count);
  t.ia_gy2rswa = read_int(chr2(10397:10400,:), 1, count);
  t.ia_gy2rswb = read_int(chr2(10401:10404,:), 1, count);
  t.ia_gyb = read_int(chr2(10405:10408,:), 1, count);
  t.ia_gybrsfc1 = read_int(chr2(10409:10412,:), 1, count);
  t.ia_gybrsfc2 = read_int(chr2(10413:10416,:), 1, count);
  t.ia_gycylr = read_int(chr2(10417:10420,:), 1, count);
  t.ia_gycylrtipup = read_int(chr2(10421:10424,:), 1, count);
  t.ia_gyfe = read_int(chr2(10425:10428,:), 1, count);
  t.ia_gyfe1 = read_int(chr2(10429:10432,:), 1, count);
  t.ia_gyfe2 = read_int(chr2(10433:10436,:), 1, count);
  t.ia_gyflpk = read_int(chr2(10437:10440,:), 1, count);
  t.ia_gyflpkwa = read_int(chr2(10441:10444,:), 1, count);
  t.ia_gyflpkwb = read_int(chr2(10445:10448,:), 1, count);
  t.ia_gyflpvenc = read_int(chr2(10449:10452,:), 1, count);
  t.ia_gyflpvencwa = read_int(chr2(10453:10456,:), 1, count);
  t.ia_gyflpvencwb = read_int(chr2(10457:10460,:), 1, count);
  t.ia_gyhyst1 = read_int(chr2(10461:10464,:), 1, count);
  t.ia_gyhyst2 = read_int(chr2(10465:10468,:), 1, count);
  t.ia_gykcfh = read_int(chr2(10469:10472,:), 1, count);
  t.ia_gykcfl = read_int(chr2(10473:10476,:), 1, count);
  t.ia_gykcs = read_int(chr2(10477:10480,:), 1, count);
  t.ia_gykcs_max = read_int(chr2(10481:10484,:), 1, count);
  t.ia_gykfs = read_int(chr2(10485:10488,:), 1, count);
  t.ia_gykill = read_int(chr2(10489:10492,:), 1, count);
  t.ia_gykrcvn = read_int(chr2(10493:10496,:), 1, count);
  t.ia_gykse1 = read_int(chr2(10497:10500,:), 1, count);
  t.ia_gykse2 = read_int(chr2(10501:10504,:), 1, count);
  t.ia_gykse3 = read_int(chr2(10505:10508,:), 1, count);
  t.ia_gykse4 = read_int(chr2(10509:10512,:), 1, count);
  t.ia_gykse5 = read_int(chr2(10513:10516,:), 1, count);
  t.ia_gykse6 = read_int(chr2(10517:10520,:), 1, count);
  t.ia_gyksp = read_int(chr2(10521:10524,:), 1, count);
  t.ia_gykssf = read_int(chr2(10525:10528,:), 1, count);
  t.ia_gyksx1 = read_int(chr2(10529:10532,:), 1, count);
  t.ia_gyksx2 = read_int(chr2(10533:10536,:), 1, count);
  t.ia_gyksy1 = read_int(chr2(10537:10540,:), 1, count);
  t.ia_gyksy2 = read_int(chr2(10541:10544,:), 1, count);
  t.ia_gyksz1 = read_int(chr2(10545:10548,:), 1, count);
  t.ia_gyksz2 = read_int(chr2(10549:10552,:), 1, count);
  t.ia_gykxtgl = read_int(chr2(10553:10556,:), 1, count);
  t.ia_gykxtgr = read_int(chr2(10557:10560,:), 1, count);
  t.ia_gyrf0kcfh = read_int(chr2(10561:10564,:), 1, count);
  t.ia_gyrf1mon = read_int(chr2(10565:10568,:), 1, count);
  t.ia_gyrf1mps1 = read_int(chr2(10569:10572,:), 1, count);
  t.ia_gyrf1tm = read_int(chr2(10573:10576,:), 1, count);
  t.ia_gyrf1xtg = read_int(chr2(10577:10580,:), 1, count);
  t.ia_gyrf2cfh = read_int(chr2(10581:10584,:), 1, count);
  t.ia_gyrf2lmon = read_int(chr2(10585:10588,:), 1, count);
  t.ia_gyrf2mon = read_int(chr2(10589:10592,:), 1, count);
  t.ia_gyrf2rmon = read_int(chr2(10593:10596,:), 1, count);
  t.ia_gyrf3cfh = read_int(chr2(10597:10600,:), 1, count);
  t.ia_gyrfmontipup = read_int(chr2(10601:10604,:), 1, count);
  t.ia_gyrfsy1 = read_int(chr2(10605:10608,:), 1, count);
  t.ia_gyrfsy2 = read_int(chr2(10609:10612,:), 1, count);
  t.ia_gyspiral = read_int(chr2(10613:10616,:), 1, count);
  t.ia_gyspiral2 = read_int(chr2(10617:10620,:), 1, count);
  t.ia_gyspoil = read_int(chr2(10621:10624,:), 1, count);
  t.ia_gyspoil2 = read_int(chr2(10625:10628,:), 1, count);
  t.ia_gz1 = read_int(chr2(10629:10632,:), 1, count);
  t.ia_gz1as = read_int(chr2(10633:10636,:), 1, count);
  t.ia_gz1cfl = read_int(chr2(10637:10640,:), 1, count);
  t.ia_gz1d = read_int(chr2(10641:10644,:), 1, count);
  t.ia_gz1dtg = read_int(chr2(10645:10648,:), 1, count);
  t.ia_gz1fed = read_int(chr2(10649:10652,:), 1, count);
  t.ia_gz1fen = read_int(chr2(10653:10656,:), 1, count);
  t.ia_gz1feu = read_int(chr2(10657:10660,:), 1, count);
  t.ia_gz1ftg = read_int(chr2(10661:10664,:), 1, count);
  t.ia_gz1mon = read_int(chr2(10665:10668,:), 1, count);
  t.ia_gz1mps1 = read_int(chr2(10669:10672,:), 1, count);
  t.ia_gz1rs = read_int(chr2(10673:10676,:), 1, count);
  t.ia_gz1s = read_int(chr2(10677:10680,:), 1, count);
  t.ia_gz1u = read_int(chr2(10681:10684,:), 1, count);
  t.ia_gz1xtg = read_int(chr2(10685:10688,:), 1, count);
  t.ia_gz2bftg = read_int(chr2(10689:10692,:), 1, count);
  t.ia_gz2fed = read_int(chr2(10693:10696,:), 1, count);
  t.ia_gz2fen = read_int(chr2(10697:10700,:), 1, count);
  t.ia_gz2feu = read_int(chr2(10701:10704,:), 1, count);
  t.ia_gz2ftg = read_int(chr2(10705:10708,:), 1, count);
  t.ia_gz2xtg = read_int(chr2(10709:10712,:), 1, count);
  t.ia_gz3ftg = read_int(chr2(10713:10716,:), 1, count);
  t.ia_gzbrsfc1 = read_int(chr2(10717:10720,:), 1, count);
  t.ia_gzbrsfc1echo1 = read_int(chr2(10721:10724,:), 1, count);
  t.ia_gzbrsfc1echo2 = read_int(chr2(10725:10728,:), 1, count);
  t.ia_gzbrsfc2 = read_int(chr2(10729:10732,:), 1, count);
  t.ia_gzcomb = read_int(chr2(10733:10736,:), 1, count);
  t.ia_gzcombhtr = read_int(chr2(10737:10740,:), 1, count);
  t.ia_gzcombhtrwa = read_int(chr2(10741:10744,:), 1, count);
  t.ia_gzcombhtrwb = read_int(chr2(10745:10748,:), 1, count);
  t.ia_gzcombwa = read_int(chr2(10749:10752,:), 1, count);
  t.ia_gzcombwb = read_int(chr2(10753:10756,:), 1, count);
  t.ia_gzcylr = read_int(chr2(10757:10760,:), 1, count);
  t.ia_gzcylrtipup = read_int(chr2(10761:10764,:), 1, count);
  t.ia_gzfcbase = read_int(chr2(10765:10768,:), 1, count);
  t.ia_gzfccomb = read_int(chr2(10769:10772,:), 1, count);
  t.ia_gzfcd = read_int(chr2(10773:10776,:), 1, count);
  t.ia_gzfcend = read_int(chr2(10777:10780,:), 1, count);
  t.ia_gzfcu = read_int(chr2(10781:10784,:), 1, count);
  t.ia_gzflpk = read_int(chr2(10785:10788,:), 1, count);
  t.ia_gzflpkwa = read_int(chr2(10789:10792,:), 1, count);
  t.ia_gzflpkwb = read_int(chr2(10793:10796,:), 1, count);
  t.ia_gzflpvenc = read_int(chr2(10797:10800,:), 1, count);
  t.ia_gzflpvencwa = read_int(chr2(10801:10804,:), 1, count);
  t.ia_gzflpvencwb = read_int(chr2(10805:10808,:), 1, count);
  t.ia_gzk = read_int(chr2(10809:10812,:), 1, count);
  t.ia_gzkas = read_int(chr2(10813:10816,:), 1, count);
  t.ia_gzkbsdtg = read_int(chr2(10817:10820,:), 1, count);
  t.ia_gzkbsrs = read_int(chr2(10821:10824,:), 1, count);
  t.ia_gzkcs = read_int(chr2(10825:10828,:), 1, count);
  t.ia_gzkdtg = read_int(chr2(10829:10832,:), 1, count);
  t.ia_gzkfs = read_int(chr2(10833:10836,:), 1, count);
  t.ia_gzkgir01 = read_int(chr2(10837:10840,:), 1, count);
  t.ia_gzkgir02 = read_int(chr2(10841:10844,:), 1, count);
  t.ia_gzkill = read_int(chr2(10845:10848,:), 1, count);
  t.ia_gzkiller = read_int(chr2(10849:10852,:), 1, count);
  t.ia_gzkmon = read_int(chr2(10853:10856,:), 1, count);
  t.ia_gzkmontipup = read_int(chr2(10857:10860,:), 1, count);
  t.ia_gzkrcvn = read_int(chr2(10861:10864,:), 1, count);
  t.ia_gzkrffrir = read_int(chr2(10865:10868,:), 1, count);
  t.ia_gzkrs = read_int(chr2(10869:10872,:), 1, count);
  t.ia_gzks = read_int(chr2(10873:10876,:), 1, count);
  t.ia_gzks5fp = read_int(chr2(10877:10880,:), 1, count);
  t.ia_gzksp = read_int(chr2(10881:10884,:), 1, count);
  t.ia_gzkssf = read_int(chr2(10885:10888,:), 1, count);
  t.ia_gzp = read_int(chr2(10889:10892,:), 1, count);
  t.ia_gzphtr = read_int(chr2(10893:10896,:), 1, count);
  t.ia_gzphtrwa = read_int(chr2(10897:10900,:), 1, count);
  t.ia_gzphtrwb = read_int(chr2(10901:10904,:), 1, count);
  t.ia_gzptm = read_int(chr2(10905:10908,:), 1, count);
  t.ia_gzpwa = read_int(chr2(10909:10912,:), 1, count);
  t.ia_gzpwb = read_int(chr2(10913:10916,:), 1, count);
  t.ia_gzrf0 = read_int(chr2(10917:10920,:), 1, count);
  t.ia_gzrf0cfh = read_int(chr2(10921:10924,:), 1, count);
  t.ia_gzrf0k = read_int(chr2(10925:10928,:), 1, count);
  t.ia_gzrf1 = read_int(chr2(10929:10932,:), 1, count);
  t.ia_gzrf1_temp = read_float(chr2(10933:10936,:), 1, count);
  t.ia_gzrf1as = read_int(chr2(10937:10940,:), 1, count);
  t.ia_gzrf1cfh = read_int(chr2(10941:10944,:), 1, count);
  t.ia_gzrf1cfl = read_int(chr2(10945:10948,:), 1, count);
  t.ia_gzrf1dtg = read_int(chr2(10949:10952,:), 1, count);
  t.ia_gzrf1ftg = read_int(chr2(10953:10956,:), 1, count);
  t.ia_gzrf1htr = read_int(chr2(10957:10960,:), 1, count);
  t.ia_gzrf1mon = read_int(chr2(10961:10964,:), 1, count);
  t.ia_gzrf1mps1 = read_int(chr2(10965:10968,:), 1, count);
  t.ia_gzrf1rs = read_int(chr2(10969:10972,:), 1, count);
  t.ia_gzrf1s = read_int(chr2(10973:10976,:), 1, count);
  t.ia_gzrf1xtg = read_int(chr2(10977:10980,:), 1, count);
  t.ia_gzrf2ftg = read_int(chr2(10981:10984,:), 1, count);
  t.ia_gzrf2lcfh = read_int(chr2(10985:10988,:), 1, count);
  t.ia_gzrf2lmps1 = read_int(chr2(10989:10992,:), 1, count);
  t.ia_gzrf2mps1 = read_int(chr2(10993:10996,:), 1, count);
  t.ia_gzrf2rcfh = read_int(chr2(10997:11000,:), 1, count);
  t.ia_gzrf2rmps1 = read_int(chr2(11001:11004,:), 1, count);
  t.ia_gzrf2xtg = read_int(chr2(11005:11008,:), 1, count);
  t.ia_gzrf3ftg = read_int(chr2(11009:11012,:), 1, count);
  t.ia_gzrf3lcfh = read_int(chr2(11013:11016,:), 1, count);
  t.ia_gzrf3rcfh = read_int(chr2(11017:11020,:), 1, count);
  t.ia_gzrf4cfh = read_int(chr2(11021:11024,:), 1, count);
  t.ia_gzrf4lcfh = read_int(chr2(11025:11028,:), 1, count);
  t.ia_gzrf4rcfh = read_int(chr2(11029:11032,:), 1, count);
  t.ia_gzrffrir = read_int(chr2(11033:11036,:), 1, count);
  t.ia_gzrfgir01 = read_int(chr2(11037:11040,:), 1, count);
  t.ia_gzrfgir02 = read_int(chr2(11041:11044,:), 1, count);
  t.ia_gzrfs5fph = read_int(chr2(11045:11048,:), 1, count);
  t.ia_gzrfse1 = read_int(chr2(11049:11052,:), 1, count);
  t.ia_gzrfse2 = read_int(chr2(11053:11056,:), 1, count);
  t.ia_gzrfse3 = read_int(chr2(11057:11060,:), 1, count);
  t.ia_gzrfse4 = read_int(chr2(11061:11064,:), 1, count);
  t.ia_gzrfse5 = read_int(chr2(11065:11068,:), 1, count);
  t.ia_gzrfse6 = read_int(chr2(11069:11072,:), 1, count);
  t.ia_gzrfssfh = read_int(chr2(11073:11076,:), 1, count);
  t.ia_gzrfsz1 = read_int(chr2(11077:11080,:), 1, count);
  t.ia_gzrfsz2 = read_int(chr2(11081:11084,:), 1, count);
  t.ia_gzs5fphcomb = read_int(chr2(11085:11088,:), 1, count);
  t.ia_gzssfhcomb = read_int(chr2(11089:11092,:), 1, count);
  t.ia_gzvlw = read_int(chr2(11093:11096,:), 1, count);
  t.ia_hard180 = read_int(chr2(11097:11100,:), 1, count);
  t.ia_omega_hs_rfcssat = read_int(chr2(11101:11104,:), 1, count);
  t.ia_omega_ir0 = read_int(chr2(11105:11108,:), 1, count);
  t.ia_omega_rffrir = read_int(chr2(11109:11112,:), 1, count);
  t.ia_omega_rfgir01 = read_int(chr2(11113:11116,:), 1, count);
  t.ia_omega_rfgir02 = read_int(chr2(11117:11120,:), 1, count);
  t.ia_omegarf0cfh = read_int(chr2(11121:11124,:), 1, count);
  t.ia_ph180 = read_int(chr2(11125:11128,:), 1, count);
  t.ia_phs_rf3xtg = read_int(chr2(11129:11132,:), 1, count);
  t.ia_phs_rf4xtg = read_int(chr2(11133:11136,:), 1, count);
  t.ia_postgxw1ftg = read_int(chr2(11137:11140,:), 1, count);
  t.ia_rcvrbl = read_int(chr2(11141:11144,:), 1, count);
  t.ia_rcvrbl2 = read_int(chr2(11145:11148,:), 1, count);
  t.ia_rf0 = read_int(chr2(11149:11152,:), 1, count);
  t.ia_rf0cfh = read_int(chr2(11153:11156,:), 1, count);
  t.ia_rf1 = read_int(chr2(11157:11160,:), 1, count);
  t.ia_rf180 = read_int(chr2(11161:11164,:), 1, count);
  t.ia_rf1_temp = read_float(chr2(11165:11168,:), 1, count);
  t.ia_rf1as = read_int(chr2(11169:11172,:), 1, count);
  t.ia_rf1cfh = read_int(chr2(11173:11176,:), 1, count);
  t.ia_rf1cfl = read_int(chr2(11177:11180,:), 1, count);
  t.ia_rf1dtg = read_int(chr2(11181:11184,:), 1, count);
  t.ia_rf1ftg = read_int(chr2(11185:11188,:), 1, count);
  t.ia_rf1htr = read_int(chr2(11189:11192,:), 1, count);
  t.ia_rf1mon = read_int(chr2(11193:11196,:), 1, count);
  t.ia_rf1mps1 = read_int(chr2(11197:11200,:), 1, count);
  t.ia_rf1rs = read_int(chr2(11201:11204,:), 1, count);
  t.ia_rf1tm = read_int(chr2(11205:11208,:), 1, count);
  t.ia_rf1xtg = read_int(chr2(11209:11212,:), 1, count);
  t.ia_rf2cfh = read_int(chr2(11213:11216,:), 1, count);
  t.ia_rf2ftg = read_int(chr2(11217:11220,:), 1, count);
  t.ia_rf2mon = read_int(chr2(11221:11224,:), 1, count);
  t.ia_rf2mps1 = read_int(chr2(11225:11228,:), 1, count);
  t.ia_rf2xtg = read_int(chr2(11229:11232,:), 1, count);
  t.ia_rf3cfh = read_int(chr2(11233:11236,:), 1, count);
  t.ia_rf3ftg = read_int(chr2(11237:11240,:), 1, count);
  t.ia_rf3xtg = read_int(chr2(11241:11244,:), 1, count);
  t.ia_rf4cfh = read_int(chr2(11245:11248,:), 1, count);
  t.ia_rf4xtg = read_int(chr2(11249:11252,:), 1, count);
  t.ia_rf90 = read_int(chr2(11253:11256,:), 1, count);
  t.ia_rfbdtg = read_int(chr2(11257:11260,:), 1, count);
  t.ia_rfbdtg_theta = read_int(chr2(11261:11264,:), 1, count);
  t.ia_rfbrs = read_int(chr2(11265:11268,:), 1, count);
  t.ia_rfbrs_theta = read_int(chr2(11269:11272,:), 1, count);
  t.ia_rfcssat = read_int(chr2(11273:11276,:), 1, count);
  t.ia_rfcssatcfh = read_int(chr2(11277:11280,:), 1, count);
  t.ia_rfcylr = read_int(chr2(11281:11284,:), 1, count);
  t.ia_rfcylrtipup = read_int(chr2(11285:11288,:), 1, count);
  t.ia_rfflp180 = read_int(chr2(11289:11292,:), 1, count);
  t.ia_rfflp180_the = read_int(chr2(11293:11296,:), 1, count);
  t.ia_rfflp90 = read_int(chr2(11297:11300,:), 1, count);
  t.ia_rfflp90_the = read_int(chr2(11301:11304,:), 1, count);
  t.ia_rfflp90r = read_int(chr2(11305:11308,:), 1, count);
  t.ia_rfflp90r_the = read_int(chr2(11309:11312,:), 1, count);
  t.ia_rffrir = read_int(chr2(11313:11316,:), 1, count);
  t.ia_rffs = read_int(chr2(11317:11320,:), 1, count);
  t.ia_rfgir01 = read_int(chr2(11321:11324,:), 1, count);
  t.ia_rfgir02 = read_int(chr2(11325:11328,:), 1, count);
  t.ia_rfmontipup = read_int(chr2(11329:11332,:), 1, count);
  t.ia_rfs5fph = read_int(chr2(11333:11336,:), 1, count);
  t.ia_rfse1 = read_int(chr2(11337:11340,:), 1, count);
  t.ia_rfse2 = read_int(chr2(11341:11344,:), 1, count);
  t.ia_rfse3 = read_int(chr2(11345:11348,:), 1, count);
  t.ia_rfse4 = read_int(chr2(11349:11352,:), 1, count);
  t.ia_rfse5 = read_int(chr2(11353:11356,:), 1, count);
  t.ia_rfse6 = read_int(chr2(11357:11360,:), 1, count);
  t.ia_rfssf = read_int(chr2(11361:11364,:), 1, count);
  t.ia_rfssfh = read_int(chr2(11365:11368,:), 1, count);
  t.ia_rfsx1 = read_int(chr2(11369:11372,:), 1, count);
  t.ia_rfsx2 = read_int(chr2(11373:11376,:), 1, count);
  t.ia_rfsy1 = read_int(chr2(11377:11380,:), 1, count);
  t.ia_rfsy2 = read_int(chr2(11381:11384,:), 1, count);
  t.ia_rfsz1 = read_int(chr2(11385:11388,:), 1, count);
  t.ia_rfsz2 = read_int(chr2(11389:11392,:), 1, count);
  t.ia_rftipup = read_int(chr2(11393:11396,:), 1, count);
  t.ia_sdixon = read_int(chr2(11397:11400,:), 1, count);
  t.ia_sdixon2 = read_int(chr2(11401:11404,:), 1, count);
  t.ia_stgycylra = read_int(chr2(11405:11408,:), 1, count);
  t.ia_stgycylratipup = read_int(chr2(11409:11412,:), 1, count);
  t.ia_stgzcylra = read_int(chr2(11413:11416,:), 1, count);
  t.ia_stgzcylratipup = read_int(chr2(11417:11420,:), 1, count);
  t.ia_thcylr = read_int(chr2(11421:11424,:), 1, count);
  t.ia_thcylrtipup = read_int(chr2(11425:11428,:), 1, count);
  t.ia_thetarf1 = read_int(chr2(11429:11432,:), 1, count);
  t.ia_xdixon = read_int(chr2(11433:11436,:), 1, count);
  t.ia_ydixon = read_int(chr2(11437:11440,:), 1, count);
  t.ia_zdixon = read_int(chr2(11441:11444,:), 1, count);
  t.ideal_debug = read_int(chr2(11445:11448,:), 1, count);
  t.ideal_echo_mode = read_int(chr2(11449:11452,:), 1, count);
  t.ideal_flag = read_int(chr2(11453:11456,:), 1, count);
  t.ideal_max = read_int(chr2(11457:11460,:), 1, count);
  t.ideal_max_im = read_int(chr2(11461:11464,:), 1, count);
  t.ideal_max_locs = read_int(chr2(11465:11468,:), 1, count);
  t.ideal_min = read_int(chr2(11469:11472,:), 1, count);
  t.ideal_min_te = read_int(chr2(11473:11476,:), 1, count);
  t.ideal_necho = read_int(chr2(11477:11480,:), 1, count);
  t.ideal_no_mag_im = read_int(chr2(11481:11484,:), 1, count);
  t.ideal_opt_te = read_int(chr2(11485:11488,:), 1, count);
  t.ideal_pw = read_int(chr2(11489:11492,:), 1, count);
  t.ideal_shift1 = read_int(chr2(11493:11496,:), 1, count);
  t.ideal_shift2 = read_int(chr2(11497:11500,:), 1, count);
  t.ideal_shift3 = read_int(chr2(11501:11504,:), 1, count);
  t.ideal_shift_max = read_int(chr2(11505:11508,:), 1, count);
  t.ideal_te1 = read_int(chr2(11509:11512,:), 1, count);
  t.ideal_te2 = read_int(chr2(11513:11516,:), 1, count);
  t.ideal_te3 = read_int(chr2(11517:11520,:), 1, count);
  t.idealiq_enable_higher_flip = read_int(chr2(11521:11524,:), 1, count);
  t.idealiq_esp = read_int(chr2(11525:11528,:), 1, count);
  t.idealiq_flag = read_int(chr2(11529:11532,:), 1, count);
  t.idealiq_nshots = read_int(chr2(11533:11536,:), 1, count);
  t.idealiq_optfa = read_int(chr2(11537:11540,:), 1, count);
  t.idealiq_pc_dda = read_int(chr2(11541:11544,:), 1, count);
  t.idealiq_pc_dimension = read_int(chr2(11545:11548,:), 1, count);
  t.idealiq_pc_extra_TR = read_int(chr2(11549:11552,:), 1, count);
  t.idealiq_pc_flag = read_int(chr2(11553:11556,:), 1, count);
  t.idealiq_pc_ylines = read_int(chr2(11557:11560,:), 1, count);
  t.idealiq_pc_ylower = read_int(chr2(11561:11564,:), 1, count);
  t.idealiq_pc_yupper = read_int(chr2(11565:11568,:), 1, count);
  t.idealiq_pc_zlines = read_int(chr2(11569:11572,:), 1, count);
  t.idealiq_pc_zlower = read_int(chr2(11573:11576,:), 1, count);
  t.idealiq_pc_zupper = read_int(chr2(11577:11580,:), 1, count);
  t.idealiq_ps_echo = read_int(chr2(11581:11584,:), 1, count);
  t.idealiq_pw = read_int(chr2(11585:11588,:), 1, count);
  t.ifir_dnav_flag = read_int(chr2(11589:11592,:), 1, count);
  t.ifir_dummy_pe = read_int(chr2(11593:11596,:), 1, count);
  t.ifir_flag = read_int(chr2(11597:11600,:), 1, count);
  t.ifir_frir_flag = read_int(chr2(11601:11604,:), 1, count);
  t.ifir_position = read_float(chr2(11605:11608,:), 1, count);
  t.ifir_stir_flag = read_int(chr2(11609:11612,:), 1, count);
  t.ifir_vthick = read_float(chr2(11613:11616,:), 1, count);
  t.ih_idealdbg_cv1 = read_float(chr2(11617:11620,:), 1, count);
  t.ih_idealdbg_cv10 = read_float(chr2(11621:11624,:), 1, count);
  t.ih_idealdbg_cv11 = read_float(chr2(11625:11628,:), 1, count);
  t.ih_idealdbg_cv12 = read_float(chr2(11629:11632,:), 1, count);
  t.ih_idealdbg_cv13 = read_float(chr2(11633:11636,:), 1, count);
  t.ih_idealdbg_cv14 = read_float(chr2(11637:11640,:), 1, count);
  t.ih_idealdbg_cv15 = read_float(chr2(11641:11644,:), 1, count);
  t.ih_idealdbg_cv16 = read_float(chr2(11645:11648,:), 1, count);
  t.ih_idealdbg_cv17 = read_float(chr2(11649:11652,:), 1, count);
  t.ih_idealdbg_cv18 = read_float(chr2(11653:11656,:), 1, count);
  t.ih_idealdbg_cv19 = read_float(chr2(11657:11660,:), 1, count);
  t.ih_idealdbg_cv2 = read_float(chr2(11661:11664,:), 1, count);
  t.ih_idealdbg_cv20 = read_float(chr2(11665:11668,:), 1, count);
  t.ih_idealdbg_cv21 = read_float(chr2(11669:11672,:), 1, count);
  t.ih_idealdbg_cv22 = read_float(chr2(11673:11676,:), 1, count);
  t.ih_idealdbg_cv23 = read_float(chr2(11677:11680,:), 1, count);
  t.ih_idealdbg_cv24 = read_float(chr2(11681:11684,:), 1, count);
  t.ih_idealdbg_cv25 = read_float(chr2(11685:11688,:), 1, count);
  t.ih_idealdbg_cv26 = read_float(chr2(11689:11692,:), 1, count);
  t.ih_idealdbg_cv27 = read_float(chr2(11693:11696,:), 1, count);
  t.ih_idealdbg_cv28 = read_float(chr2(11697:11700,:), 1, count);
  t.ih_idealdbg_cv29 = read_float(chr2(11701:11704,:), 1, count);
  t.ih_idealdbg_cv3 = read_float(chr2(11705:11708,:), 1, count);
  t.ih_idealdbg_cv30 = read_float(chr2(11709:11712,:), 1, count);
  t.ih_idealdbg_cv31 = read_float(chr2(11713:11716,:), 1, count);
  t.ih_idealdbg_cv32 = read_float(chr2(11717:11720,:), 1, count);
  t.ih_idealdbg_cv4 = read_float(chr2(11721:11724,:), 1, count);
  t.ih_idealdbg_cv5 = read_float(chr2(11725:11728,:), 1, count);
  t.ih_idealdbg_cv6 = read_float(chr2(11729:11732,:), 1, count);
  t.ih_idealdbg_cv7 = read_float(chr2(11733:11736,:), 1, count);
  t.ih_idealdbg_cv8 = read_float(chr2(11737:11740,:), 1, count);
  t.ih_idealdbg_cv9 = read_float(chr2(11741:11744,:), 1, count);
  t.ihbsoffsetfreq = read_int(chr2(11745:11748,:), 1, count);
  t.ihbspti = read_int(chr2(11749:11752,:), 1, count);
  t.ihcardt1map_hb_pattern = read_int(chr2(11753:11756,:), 1, count);
  t.ihdixonipte = read_int(chr2(11757:11760,:), 1, count);
  t.ihdixonoopte = read_int(chr2(11761:11764,:), 1, count);
  t.ihdixonte = read_int(chr2(11765:11768,:), 1, count);
  t.iheesp = read_int(chr2(11769:11772,:), 1, count);
  t.ihesp = read_float(chr2(11773:11776,:), 1, count);
  t.ihfcineim = read_int(chr2(11777:11780,:), 1, count);
  t.ihfcinent = read_int(chr2(11781:11784,:), 1, count);
  t.ihflip = read_float(chr2(11785:11788,:), 1, count);
  t.ihinplanexres = read_float(chr2(11789:11792,:), 1, count);
  t.ihinplaneyres = read_float(chr2(11793:11796,:), 1, count);
  t.ihlabeltime = read_int(chr2(11797:11800,:), 1, count);
  t.ihmaxtdelphase = read_int(chr2(11801:11804,:), 1, count);
  t.ihnegscanspacing = read_int(chr2(11805:11808,:), 1, count);
  t.ihnew_series = read_int(chr2(11809:11812,:), 1, count);
  t.ihnex = read_float(chr2(11813:11816,:), 1, count);
  t.ihoffsetfreq = read_int(chr2(11817:11820,:), 1, count);
  t.ihpostlabeldelay = read_int(chr2(11821:11824,:), 1, count);
  t.ihrbwperpix = read_float(chr2(11825:11828,:), 1, count);
  t.ihtagfa = read_float(chr2(11829:11832,:), 1, count);
  t.ihtagor = read_float(chr2(11833:11836,:), 1, count);
  t.ihtdel1 = read_int(chr2(11837:11840,:), 1, count);
  t.ihte1 = read_int(chr2(11841:11844,:), 1, count);
  t.ihte10 = read_int(chr2(11845:11848,:), 1, count);
  t.ihte11 = read_int(chr2(11849:11852,:), 1, count);
  t.ihte12 = read_int(chr2(11853:11856,:), 1, count);
  t.ihte13 = read_int(chr2(11857:11860,:), 1, count);
  t.ihte14 = read_int(chr2(11861:11864,:), 1, count);
  t.ihte15 = read_int(chr2(11865:11868,:), 1, count);
  t.ihte16 = read_int(chr2(11869:11872,:), 1, count);
  t.ihte2 = read_int(chr2(11873:11876,:), 1, count);
  t.ihte3 = read_int(chr2(11877:11880,:), 1, count);
  t.ihte4 = read_int(chr2(11881:11884,:), 1, count);
  t.ihte5 = read_int(chr2(11885:11888,:), 1, count);
  t.ihte6 = read_int(chr2(11889:11892,:), 1, count);
  t.ihte7 = read_int(chr2(11893:11896,:), 1, count);
  t.ihte8 = read_int(chr2(11897:11900,:), 1, count);
  t.ihte9 = read_int(chr2(11901:11904,:), 1, count);
  t.ihti = read_int(chr2(11905:11908,:), 1, count);
  t.ihtr = read_int(chr2(11909:11912,:), 1, count);
  t.ihvbw1 = read_float(chr2(11913:11916,:), 1, count);
  t.ihvbw10 = read_float(chr2(11917:11920,:), 1, count);
  t.ihvbw11 = read_float(chr2(11921:11924,:), 1, count);
  t.ihvbw12 = read_float(chr2(11925:11928,:), 1, count);
  t.ihvbw13 = read_float(chr2(11929:11932,:), 1, count);
  t.ihvbw14 = read_float(chr2(11933:11936,:), 1, count);
  t.ihvbw15 = read_float(chr2(11937:11940,:), 1, count);
  t.ihvbw16 = read_float(chr2(11941:11944,:), 1, count);
  t.ihvbw2 = read_float(chr2(11945:11948,:), 1, count);
  t.ihvbw3 = read_float(chr2(11949:11952,:), 1, count);
  t.ihvbw4 = read_float(chr2(11953:11956,:), 1, count);
  t.ihvbw5 = read_float(chr2(11957:11960,:), 1, count);
  t.ihvbw6 = read_float(chr2(11961:11964,:), 1, count);
  t.ihvbw7 = read_float(chr2(11965:11968,:), 1, count);
  t.ihvbw8 = read_float(chr2(11969:11972,:), 1, count);
  t.ihvbw9 = read_float(chr2(11973:11976,:), 1, count);
  t.imagenum = read_int(chr2(11977:11980,:), 1, count);
  t.imaxectricksview = read_int(chr2(11981:11984,:), 1, count);
  t.init_xtg_deadtime = read_int(chr2(11985:11988,:), 1, count);
  t.initialize_gradOpt = read_int(chr2(11989:11992,:), 1, count);
  t.initialize_scale = read_int(chr2(11993:11996,:), 1, count);
  t.initnewgeo = read_int(chr2(11997:12000,:), 1, count);
  t.inter_necho = read_int(chr2(12001:12004,:), 1, count);
  t.intermittant_chemsat = read_int(chr2(12005:12008,:), 1, count);
  t.intslab_flag = read_int(chr2(12009:12012,:), 1, count);
  t.invertphase = read_int(chr2(12013:12016,:), 1, count);
  t.ipg_trigtest = read_int(chr2(12017:12020,:), 1, count);
  t.ir_seqtime_adjust = read_int(chr2(12021:12024,:), 1, count);
  t.irdisdacqs = read_int(chr2(12025:12028,:), 1, count);
  t.irfreq = read_int(chr2(12029:12032,:), 1, count);
  t.irmsx = read_float(chr2(12033:12036,:), 1, count);
  t.irmsy = read_float(chr2(12037:12040,:), 1, count);
  t.irmsz = read_float(chr2(12041:12044,:), 1, count);
  t.irprep_flag = read_int(chr2(12045:12048,:), 1, count);
  t.irscale = read_float(chr2(12049:12052,:), 1, count);
  t.isi_done = read_int(chr2(12053:12056,:), 1, count);
  t.isi_extra = read_int(chr2(12057:12060,:), 1, count);
  t.isi_extra_gir = read_int(chr2(12061:12064,:), 1, count);
  t.isi_flag = read_int(chr2(12065:12068,:), 1, count);
  t.isi_girdelay = read_int(chr2(12069:12072,:), 1, count);
  t.isi_satdelay = read_int(chr2(12073:12076,:), 1, count);
  t.isi_sliceextra = read_int(chr2(12077:12080,:), 1, count);
  t.isibit = read_short_int(chr2(12081:12082,:), 1, count);
  t.iso_delay = read_int(chr2(12085:12088,:), 1, count);
  t.iso_delay_frac = read_float(chr2(12089:12092,:), 1, count);
  t.iso_delay_rfflp90 = read_int(chr2(12093:12096,:), 1, count);
  t.iso_delay_rfflp90r = read_int(chr2(12097:12100,:), 1, count);
  t.jstd_exponent_NV = read_float(chr2(12101:12104,:), 1, count);
  t.jstd_exponent_body = read_float(chr2(12105:12108,:), 1, count);
  t.jstd_multiplier_NV = read_float(chr2(12109:12112,:), 1, count);
  t.jstd_multiplier_body = read_float(chr2(12113:12116,:), 1, count);
  t.k_ideal_pi = read_int(chr2(12117:12120,:), 1, count);
  t.kacq_uid_washin = read_int(chr2(12121:12124,:), 1, count);
  t.kaiser_ramplen = read_int(chr2(12125:12128,:), 1, count);
  t.kband_width = read_int(chr2(12129:12132,:), 1, count);
  t.kernel_regions = read_int(chr2(12133:12136,:), 1, count);
  t.kernel_regions_max = read_int(chr2(12137:12140,:), 1, count);
  t.kernel_regions_min = read_int(chr2(12141:12144,:), 1, count);
  t.killer01_time = read_int(chr2(12145:12148,:), 1, count);
  t.killer02_time = read_int(chr2(12149:12152,:), 1, count);
  t.killer_axis = read_WF_PROCESSOR(chr2(12153:12156,:), 1, count);
  t.krewind_flag = read_int(chr2(12157:12160,:), 1, count);
  t.krfermecorr_factor = read_float(chr2(12161:12164,:), 1, count);
  t.ktarc_flag = read_int(chr2(12165:12168,:), 1, count);
  t.lava_ave_mode = read_int(chr2(12169:12172,:), 1, count);
  t.lava_flag = read_int(chr2(12173:12176,:), 1, count);
  t.linestodiscard = read_int(chr2(12177:12180,:), 1, count);
  t.llimte1 = read_int(chr2(12181:12184,:), 1, count);
  t.llimte2 = read_int(chr2(12185:12188,:), 1, count);
  t.llimte3 = read_int(chr2(12189:12192,:), 1, count);
  t.local_tg = read_int(chr2(12193:12196,:), 1, count);
  t.locposition_rfgir01 = read_float(chr2(12197:12200,:), 1, count);
  t.locposition_rfgir02 = read_float(chr2(12201:12204,:), 1, count);
  t.loggrd = read_LOG_GRAD(chr2(12205:12504,:), 1, count);
  t.look_for_trig = read_int(chr2(12505:12508,:), 1, count);
  t.loopdelay = read_int(chr2(12509:12512,:), 1, count);
  t.loopdelay2 = read_int(chr2(12513:12516,:), 1, count);
  t.lp_mode = read_int(chr2(12517:12520,:), 1, count);
  t.lp_stretch = read_float(chr2(12521:12524,:), 1, count);
  t.lx_pwmtime = read_int(chr2(12525:12528,:), 1, count);
  t.ly_pwmtime = read_int(chr2(12529:12532,:), 1, count);
  t.lz_pwmtime = read_int(chr2(12533:12536,:), 1, count);
  t.mag_create = read_int(chr2(12537:12540,:), 1, count);
  t.mag_mask = read_int(chr2(12541:12544,:), 1, count);
  t.maskPoints = read_int(chr2(12545:12548,:), 1, count);
  t.mask_phase_flag = read_int(chr2(12549:12552,:), 1, count);
  t.mask_regions = read_int(chr2(12553:12556,:), 1, count);
  t.mask_regions_max = read_int(chr2(12557:12560,:), 1, count);
  t.mask_regions_min = read_int(chr2(12561:12564,:), 1, count);
  t.maskv_ftmra_flag = read_int(chr2(12565:12568,:), 1, count);
  t.maxGradRes = read_int(chr2(12569:12572,:), 1, count);
  t.maxSeriesTime = read_float(chr2(12573:12576,:), 1, count);
  t.max_area_gxwex = read_float(chr2(12577:12580,:), 1, count);
  t.max_aspir_fa = read_float(chr2(12581:12584,:), 1, count);
  t.max_avg_time = read_int(chr2(12585:12588,:), 1, count);
  t.max_bamslice = read_int(chr2(12589:12592,:), 1, count);
  t.max_ff_error = read_float(chr2(12593:12596,:), 1, count);
  t.max_navgate_tr = read_int(chr2(12597:12600,:), 1, count);
  t.max_pencodes = read_int(chr2(12601:12604,:), 1, count);
  t.max_regsar = read_int(chr2(12605:12608,:), 1, count);
  t.max_resp_wait = read_int(chr2(12609:12612,:), 1, count);
  t.max_satsar = read_int(chr2(12613:12616,:), 1, count);
  t.max_seqsar = read_int(chr2(12617:12620,:), 1, count);
  t.max_seqsar_orig = read_int(chr2(12621:12624,:), 1, count);
  t.max_seqsar_prepoff = read_int(chr2(12625:12628,:), 1, count);
  t.max_seqsarmon = read_int(chr2(12629:12632,:), 1, count);
  t.max_slicesar_prepoff = read_int(chr2(12633:12636,:), 1, count);
  t.max_slquant = read_int(chr2(12637:12640,:), 1, count);
  t.max_ss_fa = read_float(chr2(12641:12644,:), 1, count);
  t.max_tdel1_time = read_int(chr2(12645:12648,:), 1, count);
  t.maxb1_rf1 = read_float(chr2(12649:12652,:), 1, count);
  t.maxkiller_time = read_int(chr2(12653:12656,:), 1, count);
  t.maxpc_cor = read_int(chr2(12657:12660,:), 1, count);
  t.maxpc_debug = read_int(chr2(12661:12664,:), 1, count);
  t.maxpc_points = read_int(chr2(12665:12668,:), 1, count);
  t.maxx = read_int(chr2(12669:12672,:), 1, count);
  t.maxy = read_int(chr2(12673:12676,:), 1, count);
  t.measured_TG = read_int(chr2(12677:12680,:), 1, count);
  t.medal_autote_flag = read_int(chr2(12681:12684,:), 1, count);
  t.medal_autotelock_flag = read_int(chr2(12685:12688,:), 1, count);
  t.medal_echo_mode = read_int(chr2(12689:12692,:), 1, count);
  t.medal_enh_flag = read_int(chr2(12693:12696,:), 1, count);
  t.medal_etl = read_int(chr2(12697:12700,:), 1, count);
  t.medal_flag = read_int(chr2(12701:12704,:), 1, count);
  t.medal_flexecho_order_flag = read_int(chr2(12705:12708,:), 1, count);
  t.medal_freq_ave = read_float(chr2(12709:12712,:), 1, count);
  t.medal_freq_max = read_float(chr2(12713:12716,:), 1, count);
  t.medal_freq_min = read_float(chr2(12717:12720,:), 1, count);
  t.medal_fw_freq_ave = read_float(chr2(12721:12724,:), 1, count);
  t.medal_fw_freq_llimit = read_float(chr2(12725:12728,:), 1, count);
  t.medal_fw_freq_ulimit = read_float(chr2(12729:12732,:), 1, count);
  t.medal_ip_te = read_int(chr2(12733:12736,:), 1, count);
  t.medal_ip_te_max = read_int(chr2(12737:12740,:), 1, count);
  t.medal_ip_te_min = read_int(chr2(12741:12744,:), 1, count);
  t.medal_ip_te_minus = read_int(chr2(12745:12748,:), 1, count);
  t.medal_ip_te_plus = read_int(chr2(12749:12752,:), 1, count);
  t.medal_k_ip_pi = read_int(chr2(12753:12756,:), 1, count);
  t.medal_k_oop_pi = read_int(chr2(12757:12760,:), 1, count);
  t.medal_max = read_int(chr2(12761:12764,:), 1, count);
  t.medal_max_xres = read_int(chr2(12765:12768,:), 1, count);
  t.medal_min = read_int(chr2(12769:12772,:), 1, count);
  t.medal_multitr_flag = read_int(chr2(12773:12776,:), 1, count);
  t.medal_necho = read_int(chr2(12777:12780,:), 1, count);
  t.medal_oop_te = read_int(chr2(12781:12784,:), 1, count);
  t.medal_oop_te_max = read_int(chr2(12785:12788,:), 1, count);
  t.medal_oop_te_min = read_int(chr2(12789:12792,:), 1, count);
  t.medal_oop_te_minus = read_int(chr2(12793:12796,:), 1, count);
  t.medal_oop_te_plus = read_int(chr2(12797:12800,:), 1, count);
  t.medal_pi_ave = read_int(chr2(12801:12804,:), 1, count);
  t.medal_pi_max = read_int(chr2(12805:12808,:), 1, count);
  t.medal_pi_min = read_int(chr2(12809:12812,:), 1, count);
  t.medal_pw = read_int(chr2(12813:12816,:), 1, count);
  t.medal_shift1 = read_int(chr2(12817:12820,:), 1, count);
  t.medal_shift2 = read_int(chr2(12821:12824,:), 1, count);
  t.medal_shift_max = read_int(chr2(12825:12828,:), 1, count);
  t.medal_te1 = read_int(chr2(12829:12832,:), 1, count);
  t.medal_te1_upper = read_int(chr2(12833:12836,:), 1, count);
  t.medal_te2 = read_int(chr2(12837:12840,:), 1, count);
  t.medal_te2_upper = read_int(chr2(12841:12844,:), 1, count);
  t.merge_defaultTE = read_int(chr2(12845:12848,:), 1, count);
  t.merge_echoIndex = read_float(chr2(12849:12852,:), 1, count);
  t.merge_flag = read_int(chr2(12853:12856,:), 1, count);
  t.merge_min_echoes = read_int(chr2(12857:12860,:), 1, count);
  t.merge_mintr = read_int(chr2(12861:12864,:), 1, count);
  t.merge_satweight = read_float(chr2(12865:12868,:), 1, count);
  t.merge_targetTE = read_int(chr2(12869:12872,:), 1, count);
  t.mild_note_support = read_int(chr2(12873:12876,:), 1, count);
  t.min180te = read_int(chr2(12877:12880,:), 1, count);
  t.min_delay_sec = read_float(chr2(12881:12884,:), 1, count);
  t.min_delay_time = read_int(chr2(12885:12888,:), 1, count);
  t.min_dtgte = read_int(chr2(12889:12892,:), 1, count);
  t.min_end_segment_delay = read_int(chr2(12893:12896,:), 1, count);
  t.min_montr = read_int(chr2(12897:12900,:), 1, count);
  t.min_pencodes = read_int(chr2(12901:12904,:), 1, count);
  t.min_rfampcpblty = read_int(chr2(12905:12908,:), 1, count);
  t.min_rfampcpblty_prepoff = read_int(chr2(12909:12912,:), 1, count);
  t.min_rfavgpow = read_int(chr2(12913:12916,:), 1, count);
  t.min_rfavgpow_prepoff = read_int(chr2(12917:12920,:), 1, count);
  t.min_rfdycc = read_int(chr2(12921:12924,:), 1, count);
  t.min_rfdycc_prepoff = read_int(chr2(12925:12928,:), 1, count);
  t.min_rfrmsb1 = read_int(chr2(12929:12932,:), 1, count);
  t.min_rfrmsb1_prepoff = read_int(chr2(12933:12936,:), 1, count);
  t.min_rste = read_int(chr2(12937:12940,:), 1, count);
  t.min_segment_tr = read_int(chr2(12941:12944,:), 1, count);
  t.min_seq1 = read_int(chr2(12945:12948,:), 1, count);
  t.min_seq2 = read_int(chr2(12949:12952,:), 1, count);
  t.min_seq2_echo2 = read_int(chr2(12953:12956,:), 1, count);
  t.min_seq2_echo3 = read_int(chr2(12957:12960,:), 1, count);
  t.min_seq2_echo4 = read_int(chr2(12961:12964,:), 1, count);
  t.min_seq3 = read_int(chr2(12965:12968,:), 1, count);
  t.min_seqgrad = read_int(chr2(12969:12972,:), 1, count);
  t.min_seqrfamp = read_int(chr2(12973:12976,:), 1, count);
  t.min_seqrfamp_prepoff = read_int(chr2(12977:12980,:), 1, count);
  t.min_seqrfampmon = read_int(chr2(12981:12984,:), 1, count);
  t.min_seqx = read_int(chr2(12985:12988,:), 1, count);
  t.min_seqxz = read_int(chr2(12989:12992,:), 1, count);
  t.min_slquant = read_int(chr2(12993:12996,:), 1, count);
  t.min_specirti = read_int(chr2(12997:13000,:), 1, count);
  t.min_tdel1_fiesta = read_int(chr2(13001:13004,:), 1, count);
  t.min_tdel1_time = read_int(chr2(13005:13008,:), 1, count);
  t.min_tefe = read_int(chr2(13009:13012,:), 1, count);
  t.min_tegy = read_int(chr2(13013:13016,:), 1, count);
  t.min_tegz = read_int(chr2(13017:13020,:), 1, count);
  t.min_tenfe = read_int(chr2(13021:13024,:), 1, count);
  t.min_ti = read_int(chr2(13025:13028,:), 1, count);
  t.min_tseq_irprep = read_int(chr2(13029:13032,:), 1, count);
  t.minimize_RFunblank_time = read_int(chr2(13033:13036,:), 1, count);
  t.minpcflattop = read_int(chr2(13037:13040,:), 1, count);
  t.minph_iso_delay = read_int(chr2(13041:13044,:), 1, count);
  t.minseqbusbar_t = read_int(chr2(13045:13048,:), 1, count);
  t.minseqbusbarmon_t = read_int(chr2(13049:13052,:), 1, count);
  t.minseqcable_maxpow_t = read_int(chr2(13053:13056,:), 1, count);
  t.minseqcable_t = read_int(chr2(13057:13060,:), 1, count);
  t.minseqcableburst_t = read_int(chr2(13061:13064,:), 1, count);
  t.minseqcablemon_t = read_int(chr2(13065:13068,:), 1, count);
  t.minseqchoke_t = read_int(chr2(13069:13072,:), 1, count);
  t.minseqcoil_esp = read_int(chr2(13073:13076,:), 1, count);
  t.minseqcoil_t = read_int(chr2(13077:13080,:), 1, count);
  t.minseqcoilburst_t = read_int(chr2(13081:13084,:), 1, count);
  t.minseqcoilmon_t = read_int(chr2(13085:13088,:), 1, count);
  t.minseqgpm_maxpow_t = read_int(chr2(13089:13092,:), 1, count);
  t.minseqgpm_t = read_int(chr2(13093:13096,:), 1, count);
  t.minseqgram_t = read_int(chr2(13097:13100,:), 1, count);
  t.minseqgrddrv_case_t = read_int(chr2(13101:13104,:), 1, count);
  t.minseqgrddrv_t = read_int(chr2(13105:13108,:), 1, count);
  t.minseqgrddrvmon_t = read_int(chr2(13109:13112,:), 1, count);
  t.minseqgrddrvx_t = read_int(chr2(13113:13116,:), 1, count);
  t.minseqgrddrvxmon_t = read_int(chr2(13117:13120,:), 1, count);
  t.minseqgrddrvy_t = read_int(chr2(13121:13124,:), 1, count);
  t.minseqgrddrvymon_t = read_int(chr2(13125:13128,:), 1, count);
  t.minseqgrddrvz_t = read_int(chr2(13129:13132,:), 1, count);
  t.minseqgrddrvzmon_t = read_int(chr2(13133:13136,:), 1, count);
  t.minseqpwm_x = read_int(chr2(13137:13140,:), 1, count);
  t.minseqpwm_y = read_int(chr2(13141:13144,:), 1, count);
  t.minseqpwm_z = read_int(chr2(13145:13148,:), 1, count);
  t.minseqrf_cal = read_int(chr2(13149:13152,:), 1, count);
  t.mkgspec_epi2_flag = read_int(chr2(13153:13156,:), 1, count);
  t.mkgspec_flag = read_int(chr2(13157:13160,:), 1, count);
  t.mkgspec_x_gmax_flag = read_int(chr2(13161:13164,:), 1, count);
  t.mkgspec_x_sr_flag = read_int(chr2(13165:13168,:), 1, count);
  t.mkgspec_y_gmax_flag = read_int(chr2(13169:13172,:), 1, count);
  t.mkgspec_y_sr_flag = read_int(chr2(13173:13176,:), 1, count);
  t.mkgspec_z_gmax_flag = read_int(chr2(13177:13180,:), 1, count);
  t.mkgspec_z_sr_flag = read_int(chr2(13181:13184,:), 1, count);
  t.mlevon = read_int(chr2(13185:13188,:), 1, count);
  t.mon_acqfov = read_float(chr2(13189:13192,:), 1, count);
  t.mon_angle = read_float(chr2(13193:13196,:), 1, count);
  t.mon_dabdelay = read_int(chr2(13197:13200,:), 1, count);
  t.mon_fcomp = read_int(chr2(13201:13204,:), 1, count);
  t.mon_fov = read_float(chr2(13205:13208,:), 1, count);
  t.mon_loc = read_SCAN_INFO(chr2(13209:13280,:), 1, count);
  t.mon_navgs = read_int(chr2(13281:13284,:), 1, count);
  t.mon_run_setrcvportimm = read_int(chr2(13285:13288,:), 1, count);
  t.mon_ssi_time = read_int(chr2(13289:13292,:), 1, count);
  t.mon_tr = read_int(chr2(13293:13296,:), 1, count);
  t.mon_tr_nav = read_int(chr2(13297:13300,:), 1, count);
  t.mon_tr_wait = read_int(chr2(13301:13304,:), 1, count);
  t.mon_trigger_delay = read_int(chr2(13305:13308,:), 1, count);
  t.mon_vthick = read_float(chr2(13309:13312,:), 1, count);
  t.mon_vthicky = read_float(chr2(13313:13316,:), 1, count);
  t.mon_vthickz = read_float(chr2(13317:13320,:), 1, count);
  t.mon_xres = read_int(chr2(13321:13324,:), 1, count);
  t.monave_sar = read_float(chr2(13325:13328,:), 1, count);
  t.moncave_sar = read_float(chr2(13329:13332,:), 1, count);
  t.monitor_axis = read_int(chr2(13333:13336,:), 1, count);
  t.monitor_page = read_int(chr2(13337:13340,:), 1, count);
  t.monitor_test = read_int(chr2(13341:13344,:), 1, count);
  t.monloc_shift = read_float(chr2(13345:13348,:), 1, count);
  t.monloggrd = read_LOG_GRAD(chr2(13349:13648,:), 1, count);
  t.monnewgeo = read_int(chr2(13649:13652,:), 1, count);
  t.monobl_debug = read_int(chr2(13653:13656,:), 1, count);
  t.monobl_method = read_int(chr2(13657:13660,:), 1, count);
  t.monpeak_sar = read_float(chr2(13661:13664,:), 1, count);
  t.monphygrd = read_PHYS_GRAD(chr2(13665:13820,:), 1, count);
  t.monrot_phi = read_float(chr2(13821:13824,:), 1, count);
  t.monwritectrl = read_int(chr2(13825:13828,:), 1, count);
  t.motsa_ovrhd = read_int(chr2(13829:13832,:), 1, count);
  t.mph_flag = read_int(chr2(13833:13836,:), 1, count);
  t.mps1rf1_inst = read_int(chr2(13837:13840,:), 1, count);
  t.mpsfov = read_float(chr2(13841:13844,:), 1, count);
  t.msde_dda = read_int(chr2(13845:13848,:), 1, count);
  t.msde_flag = read_int(chr2(13849:13852,:), 1, count);
  t.msde_rate = read_float(chr2(13853:13856,:), 1, count);
  t.msde_rfflp180_type = read_int(chr2(13857:13860,:), 1, count);
  t.msde_rfflp90_type = read_int(chr2(13861:13864,:), 1, count);
  t.msde_type = read_int(chr2(13865:13868,:), 1, count);
  t.msde_venc_polarity = read_int(chr2(13869:13872,:), 1, count);
  t.msde_venc_wait_flag = read_int(chr2(13873:13876,:), 1, count);
  t.multiEcho_flag = read_int(chr2(13877:13880,:), 1, count);
  t.multi_channel = read_int(chr2(13881:13884,:), 1, count);
  t.myfreq_off = read_float(chr2(13885:13888,:), 1, count);
  t.myphase_off = read_float(chr2(13889:13892,:), 1, count);
  t.myslice_off = read_float(chr2(13893:13896,:), 1, count);
  t.n_hard180 = read_int(chr2(13897:13900,:), 1, count);
  t.n_omega_hs_rfcssat = read_int(chr2(13901:13904,:), 1, count);
  t.n_omega_ir0 = read_int(chr2(13905:13908,:), 1, count);
  t.n_omega_rffrir = read_int(chr2(13909:13912,:), 1, count);
  t.n_omega_rfgir01 = read_int(chr2(13913:13916,:), 1, count);
  t.n_omega_rfgir02 = read_int(chr2(13917:13920,:), 1, count);
  t.n_omegarf0cfh = read_int(chr2(13921:13924,:), 1, count);
  t.n_rf90 = read_int(chr2(13925:13928,:), 1, count);
  t.n_rfflp180 = read_int(chr2(13929:13932,:), 1, count);
  t.n_rfflp180_the = read_int(chr2(13933:13936,:), 1, count);
  t.n_rfflp90 = read_int(chr2(13937:13940,:), 1, count);
  t.n_rfflp90_the = read_int(chr2(13941:13944,:), 1, count);
  t.n_rfflp90r = read_int(chr2(13945:13948,:), 1, count);
  t.n_rfflp90r_the = read_int(chr2(13949:13952,:), 1, count);
  t.n_rftipup = read_int(chr2(13953:13956,:), 1, count);
  t.nav_1st_factor = read_float(chr2(13957:13960,:), 1, count);
  t.nav_alg = read_int(chr2(13961:13964,:), 1, count);
  t.nav_angle_adj = read_int(chr2(13965:13968,:), 1, count);
  t.nav_avaiRRtime = read_int(chr2(13969:13972,:), 1, count);
  t.nav_channel = read_int(chr2(13973:13976,:), 1, count);
  t.nav_chemdda = read_int(chr2(13977:13980,:), 1, count);
  t.nav_coilsel_index = read_int(chr2(13981:13984,:), 1, count);
  t.nav_coilsel_tr = read_int(chr2(13985:13988,:), 1, count);
  t.nav_dda = read_int(chr2(13989:13992,:), 1, count);
  t.nav_debug_flag = read_int(chr2(13993:13996,:), 1, count);
  t.nav_dir = read_int(chr2(13997:14000,:), 1, count);
  t.nav_dual_mode = read_int(chr2(14001:14004,:), 1, count);
  t.nav_dump_time = read_int(chr2(14005:14008,:), 1, count);
  t.nav_irprep_flag = read_int(chr2(14009:14012,:), 1, count);
  t.nav_last_factor = read_float(chr2(14013:14016,:), 1, count);
  t.nav_linear_ramp_down = read_int(chr2(14017:14020,:), 1, count);
  t.nav_linear_ramp_up = read_int(chr2(14021:14024,:), 1, count);
  t.nav_min_tseq_irprep = read_int(chr2(14025:14028,:), 1, count);
  t.nav_normalization = read_int(chr2(14029:14032,:), 1, count);
  t.nav_nreps = read_int(chr2(14033:14036,:), 1, count);
  t.nav_pause_after_prescan = read_int(chr2(14037:14040,:), 1, count);
  t.nav_prescan_tr = read_int(chr2(14041:14044,:), 1, count);
  t.nav_save_raw_data = read_int(chr2(14045:14048,:), 1, count);
  t.nav_scantime_refresh = read_int(chr2(14049:14052,:), 1, count);
  t.nav_scantime_refresh_pts = read_int(chr2(14053:14056,:), 1, count);
  t.nav_sr = read_int(chr2(14057:14060,:), 1, count);
  t.nav_ss = read_int(chr2(14061:14064,:), 1, count);
  t.nav_test = read_int(chr2(14065:14068,:), 1, count);
  t.nav_time_per_seg = read_int(chr2(14069:14072,:), 1, count);
  t.nav_time_per_yview = read_int(chr2(14073:14076,:), 1, count);
  t.nav_time_per_zsegment = read_int(chr2(14077:14080,:), 1, count);
  t.nav_timing_flag = read_int(chr2(14081:14084,:), 1, count);
  t.nav_tipup_ratio = read_float(chr2(14085:14088,:), 1, count);
  t.nav_tseq_irprep = read_int(chr2(14089:14092,:), 1, count);
  t.nav_type = read_int(chr2(14093:14096,:), 1, count);
  t.nav_wait_flag = read_int(chr2(14097:14100,:), 1, count);
  t.nav_window = read_float(chr2(14101:14104,:), 1, count);
  t.navend_time = read_int(chr2(14105:14108,:), 1, count);
  t.navgate_dda = read_int(chr2(14109:14112,:), 1, count);
  t.navgate_flag = read_int(chr2(14113:14116,:), 1, count);
  t.navgate_target_tr = read_int(chr2(14117:14120,:), 1, count);
  t.navgs = read_int(chr2(14121:14124,:), 1, count);
  t.navigatorCYL_flag = read_int(chr2(14125:14128,:), 1, count);
  t.navigator_flag = read_int(chr2(14129:14132,:), 1, count);
  t.navky_segments = read_int(chr2(14133:14136,:), 1, count);
  t.navky_views_per_segment = read_int(chr2(14137:14140,:), 1, count);
  t.navkz_views_per_segment = read_int(chr2(14141:14144,:), 1, count);
  t.navsat_flag = read_int(chr2(14145:14148,:), 1, count);
  t.navscale = read_float(chr2(14149:14152,:), 1, count);
  t.navseg_weight = read_float(chr2(14153:14156,:), 1, count);
  t.navsegment_dda = read_int(chr2(14157:14160,:), 1, count);
  t.navtrig_factor = read_float(chr2(14161:14164,:), 1, count);
  t.navtrig_flag = read_int(chr2(14165:14168,:), 1, count);
  t.navtrig_target_tr = read_int(chr2(14169:14172,:), 1, count);
  t.navtrig_wait_before_imaging = read_int(chr2(14173:14176,:), 1, count);
  t.navtrig_waittime = read_int(chr2(14177:14180,:), 1, count);
  t.nbw_ssrf = read_float(chr2(14181:14184,:), 1, count);
  t.ncvAdjustedDelay = read_int(chr2(14185:14188,:), 1, count);
  t.ncvGateMaxWait = read_int(chr2(14189:14192,:), 1, count);
  t.negpowerx = read_float(chr2(14193:14196,:), 1, count);
  t.negpowery = read_float(chr2(14197:14200,:), 1, count);
  t.negpowerz = read_float(chr2(14201:14204,:), 1, count);
  t.negx = read_int(chr2(14205:14208,:), 1, count);
  t.negy = read_int(chr2(14209:14212,:), 1, count);
  t.negz = read_int(chr2(14213:14216,:), 1, count);
  t.new_view = read_STATUS(chr2(14217:14220,:), 1, count);
  t.nex = read_int(chr2(14221:14224,:), 1, count);
  t.nex_save = read_int(chr2(14225:14228,:), 1, count);
  t.nflow4D = read_int(chr2(14229:14232,:), 1, count);
  t.nofermi = read_int(chr2(14233:14236,:), 1, count);
  t.nograd = read_int(chr2(14237:14240,:), 1, count);
  t.non_tetime = read_int(chr2(14241:14244,:), 1, count);
  t.non_tetime_mon = read_int(chr2(14245:14248,:), 1, count);
  t.nop = read_float(chr2(14249:14252,:), 1, count);
  t.nope = read_int(chr2(14253:14256,:), 1, count);
  t.noswitch_coil = read_int(chr2(14257:14260,:), 1, count);
  t.noswitch_coil_psc = read_int(chr2(14261:14264,:), 1, count);
  t.noswitch_slab = read_int(chr2(14265:14268,:), 1, count);
  t.noswitch_slab_psc = read_int(chr2(14269:14272,:), 1, count);
  t.nr_of_segA = read_int(chr2(14273:14276,:), 1, count);
  t.nr_of_segments = read_int(chr2(14277:14280,:), 1, count);
  t.nreps = read_int(chr2(14281:14284,:), 1, count);
  t.ns3d_flag = read_int(chr2(14285:14288,:), 1, count);
  t.nseg_per_nav_tr = read_int(chr2(14289:14292,:), 1, count);
  t.nsegments = read_int(chr2(14293:14296,:), 1, count);
  t.num_audibles = read_int(chr2(14297:14300,:), 1, count);
  t.num_autotr_cveval_iter = read_int(chr2(14301:14304,:), 1, count);
  t.num_avg_bline = read_int(chr2(14305:14308,:), 1, count);
  t.num_baseline_pts = read_int(chr2(14309:14312,:), 1, count);
  t.num_dummy_segmentedTR = read_int(chr2(14313:14316,:), 1, count);
  t.num_filter_slots = read_int(chr2(14317:14320,:), 1, count);
  t.num_images = read_int(chr2(14321:14324,:), 1, count);
  t.num_mask_regions = read_int(chr2(14325:14328,:), 1, count);
  t.num_outer_loops = read_int(chr2(14329:14332,:), 1, count);
  t.num_regions = read_int(chr2(14333:14336,:), 1, count);
  t.num_rf1lobe = read_int(chr2(14337:14340,:), 1, count);
  t.num_rfflp180 = read_int(chr2(14341:14344,:), 1, count);
  t.num_sats = read_int(chr2(14345:14348,:), 1, count);
  t.num_shot = read_int(chr2(14349:14352,:), 1, count);
  t.num_slice_rr = read_int(chr2(14353:14356,:), 1, count);
  t.num_sub_regions = read_int(chr2(14357:14360,:), 1, count);
  t.num_throwaways = read_int(chr2(14361:14364,:), 1, count);
  t.num_transition_fraction = read_float(chr2(14365:14368,:), 1, count);
  t.num_views_per_nav_tr = read_int(chr2(14369:14372,:), 1, count);
  t.num_virchan = read_int(chr2(14373:14376,:), 1, count);
  t.numpts2pass = read_int(chr2(14377:14380,:), 1, count);
  t.numrecv = read_int(chr2(14381:14384,:), 1, count);
  t.numsatramp = read_int(chr2(14385:14388,:), 1, count);
  t.obl_debug = read_int(chr2(14389:14392,:), 1, count);
  t.obl_method = read_int(chr2(14393:14396,:), 1, count);
  t.oblique_monplane = read_int(chr2(14397:14400,:), 1, count);
  t.oblmethod_dbdt_flag = read_int(chr2(14401:14404,:), 1, count);
  t.oddnex_npw = read_int(chr2(14405:14408,:), 1, count);
  t.oeff = read_int(chr2(14409:14412,:), 1, count);
  t.oepf = read_int(chr2(14413:14416,:), 1, count);
  t.off90 = read_int(chr2(14417:14420,:), 1, count);
  t.off90as = read_int(chr2(14421:14424,:), 1, count);
  t.off90minor = read_int(chr2(14425:14428,:), 1, count);
  t.off_gzvlw = read_int(chr2(14429:14432,:), 1, count);
  t.off_hard180 = read_int(chr2(14433:14436,:), 1, count);
  t.off_omega_hs_rfcssat = read_int(chr2(14437:14440,:), 1, count);
  t.off_omega_ir0 = read_int(chr2(14441:14444,:), 1, count);
  t.off_omega_rffrir = read_int(chr2(14445:14448,:), 1, count);
  t.off_omega_rfgir01 = read_int(chr2(14449:14452,:), 1, count);
  t.off_omega_rfgir02 = read_int(chr2(14453:14456,:), 1, count);
  t.off_omegarf0cfh = read_int(chr2(14457:14460,:), 1, count);
  t.off_rf0 = read_int(chr2(14461:14464,:), 1, count);
  t.off_rf0cfh = read_int(chr2(14465:14468,:), 1, count);
  t.off_rf1 = read_int(chr2(14469:14472,:), 1, count);
  t.off_rf1as = read_int(chr2(14473:14476,:), 1, count);
  t.off_rf1cfh = read_int(chr2(14477:14480,:), 1, count);
  t.off_rf1cfl = read_int(chr2(14481:14484,:), 1, count);
  t.off_rf1ftg = read_int(chr2(14485:14488,:), 1, count);
  t.off_rf1mon = read_int(chr2(14489:14492,:), 1, count);
  t.off_rf1mps1 = read_int(chr2(14493:14496,:), 1, count);
  t.off_rf1tm = read_int(chr2(14497:14500,:), 1, count);
  t.off_rf1xtg = read_int(chr2(14501:14504,:), 1, count);
  t.off_rf2cfh = read_int(chr2(14505:14508,:), 1, count);
  t.off_rf2ftg = read_int(chr2(14509:14512,:), 1, count);
  t.off_rf2mon = read_int(chr2(14513:14516,:), 1, count);
  t.off_rf2mps1 = read_int(chr2(14517:14520,:), 1, count);
  t.off_rf2xtg = read_int(chr2(14521:14524,:), 1, count);
  t.off_rf3cfh = read_int(chr2(14525:14528,:), 1, count);
  t.off_rf3ftg = read_int(chr2(14529:14532,:), 1, count);
  t.off_rf3xtg = read_int(chr2(14533:14536,:), 1, count);
  t.off_rf4cfh = read_int(chr2(14537:14540,:), 1, count);
  t.off_rf4xtg = read_int(chr2(14541:14544,:), 1, count);
  t.off_rf90 = read_int(chr2(14545:14548,:), 1, count);
  t.off_rfcssat = read_int(chr2(14549:14552,:), 1, count);
  t.off_rfflp180 = read_int(chr2(14553:14556,:), 1, count);
  t.off_rfflp180_the = read_int(chr2(14557:14560,:), 1, count);
  t.off_rfflp90 = read_int(chr2(14561:14564,:), 1, count);
  t.off_rfflp90_the = read_int(chr2(14565:14568,:), 1, count);
  t.off_rfflp90r = read_int(chr2(14569:14572,:), 1, count);
  t.off_rfflp90r_the = read_int(chr2(14573:14576,:), 1, count);
  t.off_rffrir = read_int(chr2(14577:14580,:), 1, count);
  t.off_rffs = read_int(chr2(14581:14584,:), 1, count);
  t.off_rfgir01 = read_int(chr2(14585:14588,:), 1, count);
  t.off_rfgir02 = read_int(chr2(14589:14592,:), 1, count);
  t.off_rfmontipup = read_int(chr2(14593:14596,:), 1, count);
  t.off_rfs5fph = read_int(chr2(14597:14600,:), 1, count);
  t.off_rfse1 = read_int(chr2(14601:14604,:), 1, count);
  t.off_rfse2 = read_int(chr2(14605:14608,:), 1, count);
  t.off_rfse3 = read_int(chr2(14609:14612,:), 1, count);
  t.off_rfse4 = read_int(chr2(14613:14616,:), 1, count);
  t.off_rfse5 = read_int(chr2(14617:14620,:), 1, count);
  t.off_rfse6 = read_int(chr2(14621:14624,:), 1, count);
  t.off_rfssf = read_int(chr2(14625:14628,:), 1, count);
  t.off_rfssfh = read_int(chr2(14629:14632,:), 1, count);
  t.off_rfsx1 = read_int(chr2(14633:14636,:), 1, count);
  t.off_rfsx2 = read_int(chr2(14637:14640,:), 1, count);
  t.off_rfsy1 = read_int(chr2(14641:14644,:), 1, count);
  t.off_rfsy2 = read_int(chr2(14645:14648,:), 1, count);
  t.off_rfsz1 = read_int(chr2(14649:14652,:), 1, count);
  t.off_rfsz2 = read_int(chr2(14653:14656,:), 1, count);
  t.off_rftipup = read_int(chr2(14657:14660,:), 1, count);
  t.off_thetarf1 = read_int(chr2(14661:14664,:), 1, count);
  t.offset = read_int(chr2(14665:14668,:), 1, count);
  t.offset_rfgir01 = read_int(chr2(14669:14672,:), 1, count);
  t.offset_rfgir02 = read_int(chr2(14673:14676,:), 1, count);
  t.ogsfMax = read_float(chr2(14677:14680,:), 1, count);
  t.ogsfMin = read_float(chr2(14681:14684,:), 1, count);
  t.ogsfX1 = read_float(chr2(14685:14688,:), 1, count);
  t.ogsfX2 = read_float(chr2(14689:14692,:), 1, count);
  t.ogsfX2_limit_Min = read_float(chr2(14693:14696,:), 1, count);
  t.ogsfXw = read_float(chr2(14697:14700,:), 1, count);
  t.ogsfXwex = read_float(chr2(14701:14704,:), 1, count);
  t.ogsfY = read_float(chr2(14705:14708,:), 1, count);
  t.ogsfYk = read_float(chr2(14709:14712,:), 1, count);
  t.ogsfZ = read_float(chr2(14713:14716,:), 1, count);
  t.ogsfZk = read_float(chr2(14717:14720,:), 1, count);
  t.ogsf_limit_Max = read_float(chr2(14721:14724,:), 1, count);
  t.ogsf_limit_Min = read_float(chr2(14725:14728,:), 1, count);
  t.old_phase = read_int(chr2(14729:14732,:), 1, count);
  t.omega_amp = read_float(chr2(14733:14736,:), 1, count);
  t.omega_scale = read_float(chr2(14737:14740,:), 1, count);
  t.op3dcine_fiesta = read_int(chr2(14741:14744,:), 1, count);
  t.op3dcine_spgr = read_int(chr2(14745:14748,:), 1, count);
  t.op3dgradwarp = read_int(chr2(14749:14752,:), 1, count);
  t.op4dflow = read_int(chr2(14753:14756,:), 1, count);
  t.opET = read_int(chr2(14757:14760,:), 1, count);
  t.opab1 = read_int(chr2(14761:14764,:), 1, count);
  t.opaccel_cs_stride = read_float(chr2(14765:14768,:), 1, count);
  t.opaccel_kt_stride = read_int(chr2(14769:14772,:), 1, count);
  t.opaccel_mb_stride = read_int(chr2(14773:14776,:), 1, count);
  t.opaccel_ph_stride = read_float(chr2(14777:14780,:), 1, count);
  t.opaccel_sl_stride = read_float(chr2(14781:14784,:), 1, count);
  t.opaccel_t_stride = read_float(chr2(14785:14788,:), 1, count);
  t.opacqo = read_int(chr2(14789:14792,:), 1, count);
  t.opacs = read_int(chr2(14793:14796,:), 1, count);
  t.opadvgate = read_int(chr2(14797:14800,:), 1, count);
  t.opallowedrescantime = read_int(chr2(14801:14804,:), 1, count);
  t.opanatomy = read_int(chr2(14805:14808,:), 1, count);
  t.opapa = read_int(chr2(14809:14812,:), 1, count);
  t.opapcsiis = read_float(chr2(14813:14816,:), 1, count);
  t.opapflow = read_int(chr2(14817:14820,:), 1, count);
  t.opaphases = read_int(chr2(14821:14824,:), 1, count);
  t.oparc = read_int(chr2(14825:14828,:), 1, count);
  t.oparr = read_int(chr2(14829:14832,:), 1, count);
  t.oparrmon = read_int(chr2(14833:14836,:), 1, count);
  t.opascalcfov = read_int(chr2(14837:14840,:), 1, count);
  t.opasl = read_int(chr2(14841:14844,:), 1, count);
  t.opaslprep = read_int(chr2(14845:14848,:), 1, count);
  t.opasset = read_int(chr2(14849:14852,:), 1, count);
  t.opassetcal = read_int(chr2(14853:14856,:), 1, count);
  t.opassetscan = read_int(chr2(14857:14860,:), 1, count);
  t.opauto3dgradwarp = read_int(chr2(14861:14864,:), 1, count);
  t.opautobti = read_int(chr2(14865:14868,:), 1, count);
  t.opautodifnext2 = read_int(chr2(14869:14872,:), 1, count);
  t.opautodifnumt2 = read_int(chr2(14873:14876,:), 1, count);
  t.opautoetl = read_int(chr2(14877:14880,:), 1, count);
  t.opautoflip = read_int(chr2(14881:14884,:), 1, count);
  t.opautonecho = read_int(chr2(14885:14888,:), 1, count);
  t.opautonex = read_int(chr2(14889:14892,:), 1, count);
  t.opautonumbvals = read_int(chr2(14893:14896,:), 1, count);
  t.opautorbw = read_int(chr2(14897:14900,:), 1, count);
  t.opautosldelay = read_int(chr2(14901:14904,:), 1, count);
  t.opautoslquant = read_int(chr2(14905:14908,:), 1, count);
  t.opautosubtract = read_int(chr2(14909:14912,:), 1, count);
  t.opautotdel1 = read_int(chr2(14913:14916,:), 1, count);
  t.opautote = read_int(chr2(14917:14920,:), 1, count);
  t.opautoti = read_int(chr2(14921:14924,:), 1, count);
  t.opautotissuet1 = read_int(chr2(14925:14928,:), 1, count);
  t.opautotr = read_int(chr2(14929:14932,:), 1, count);
  t.opautovps = read_int(chr2(14933:14936,:), 1, count);
  t.opaxial_slice = read_int(chr2(14937:14940,:), 1, count);
  t.opbc = read_int(chr2(14941:14944,:), 1, count);
  t.opbilateral = read_int(chr2(14945:14948,:), 1, count);
  t.opblim = read_int(chr2(14949:14952,:), 1, count);
  t.opbrava = read_int(chr2(14953:14956,:), 1, count);
  t.opbravo = read_int(chr2(14957:14960,:), 1, count);
  t.opbreastmrs = read_int(chr2(14961:14964,:), 1, count);
  t.opbreathhold = read_int(chr2(14965:14968,:), 1, count);
  t.opbsp = read_int(chr2(14969:14972,:), 1, count);
  t.opbspti = read_int(chr2(14973:14976,:), 1, count);
  t.opburstmode = read_int(chr2(14977:14980,:), 1, count);
  t.opbval = read_int(chr2(14981:14984,:), 1, count);
  t.opbwrt = read_int(chr2(14985:14988,:), 1, count);
  t.opcaldelay = read_int(chr2(14989:14992,:), 1, count);
  t.opcalmode = read_int(chr2(14993:14996,:), 1, count);
  t.opcalrequired = read_int(chr2(14997:15000,:), 1, count);
  t.opcardseq = read_int(chr2(15001:15004,:), 1, count);
  t.opccsat = read_int(chr2(15005:15008,:), 1, count);
  t.opcfsel = read_int(chr2(15009:15012,:), 1, count);
  t.opcgate = read_int(chr2(15013:15016,:), 1, count);
  t.opcgatetype = read_int(chr2(15017:15020,:), 1, count);
  t.opchrate = read_int(chr2(15021:15024,:), 1, count);
  t.opcineir = read_int(chr2(15025:15028,:), 1, count);
  t.opclocs = read_int(chr2(15029:15032,:), 1, count);
  t.opcmon = read_int(chr2(15033:15036,:), 1, count);
  t.opcoax = read_int(chr2(15037:15040,:), 1, count);
  t.opcollapse = read_int(chr2(15041:15044,:), 1, count);
  t.opcompressedsensing = read_int(chr2(15045:15048,:), 1, count);
  t.opcontrast = read_int(chr2(15049:15052,:), 1, count);
  t.opcoronal_slice = read_int(chr2(15053:15056,:), 1, count);
  t.opcosmic = read_int(chr2(15057:15060,:), 1, count);
  t.opcphases = read_int(chr2(15061:15064,:), 1, count);
  t.opcs = read_int(chr2(15065:15068,:), 1, count);
  t.opcube = read_int(chr2(15069:15072,:), 1, count);
  t.opdda = read_int(chr2(15073:15076,:), 1, count);
  t.opdeprep = read_int(chr2(15077:15080,:), 1, count);
  t.opdfax3in1 = read_int(chr2(15081:15084,:), 1, count);
  t.opdfaxall = read_int(chr2(15085:15088,:), 1, count);
  t.opdfaxtetra = read_int(chr2(15089:15092,:), 1, count);
  t.opdfaxx = read_int(chr2(15093:15096,:), 1, count);
  t.opdfaxy = read_int(chr2(15097:15100,:), 1, count);
  t.opdfaxz = read_int(chr2(15101:15104,:), 1, count);
  t.opdfm = read_int(chr2(15105:15108,:), 1, count);
  t.opdfmprescan = read_int(chr2(15109:15112,:), 1, count);
  t.opdfsathick1 = read_float(chr2(15113:15116,:), 1, count);
  t.opdfsathick2 = read_float(chr2(15117:15120,:), 1, count);
  t.opdfsathick3 = read_float(chr2(15121:15124,:), 1, count);
  t.opdfsathick4 = read_float(chr2(15125:15128,:), 1, count);
  t.opdfsathick5 = read_float(chr2(15129:15132,:), 1, count);
  t.opdfsathick6 = read_float(chr2(15133:15136,:), 1, count);
  t.opdiffuse = read_int(chr2(15137:15140,:), 1, count);
  t.opdifnext2 = read_float(chr2(15141:15144,:), 1, count);
  t.opdifnumbvalues = read_int(chr2(15145:15148,:), 1, count);
  t.opdifnumdirs = read_int(chr2(15149:15152,:), 1, count);
  t.opdifnumt2 = read_int(chr2(15153:15156,:), 1, count);
  t.opdifproctype = read_int(chr2(15157:15160,:), 1, count);
  t.opdisco = read_int(chr2(15161:15164,:), 1, count);
  t.opdixon = read_int(chr2(15165:15168,:), 1, count);
  t.opdixproc = read_int(chr2(15169:15172,:), 1, count);
  t.opdose = read_float(chr2(15173:15176,:), 1, count);
  t.opdoubleir = read_int(chr2(15177:15180,:), 1, count);
  t.opdrivemode = read_int(chr2(15181:15184,:), 1, count);
  t.opdualspinecho = read_int(chr2(15185:15188,:), 1, count);
  t.opdynaplan = read_int(chr2(15189:15192,:), 1, count);
  t.opdynaplan_mask_phase = read_int(chr2(15193:15196,:), 1, count);
  t.opdynaplan_nphases = read_int(chr2(15197:15200,:), 1, count);
  t.opdyntg = read_int(chr2(15201:15204,:), 1, count);
  t.opectricks = read_int(chr2(15205:15208,:), 1, count);
  t.opentry = read_int(chr2(15209:15212,:), 1, count);
  t.opepi = read_int(chr2(15213:15216,:), 1, count);
  t.opetl = read_int(chr2(15217:15220,:), 1, count);
  t.opexamnum = read_int(chr2(15221:15224,:), 1, count);
  t.opexcitemode = read_int(chr2(15225:15228,:), 1, count);
  t.opexor = read_int(chr2(15229:15232,:), 1, count);
  t.opexsathick1 = read_float(chr2(15233:15236,:), 1, count);
  t.opexsathick2 = read_float(chr2(15237:15240,:), 1, count);
  t.opexsathick3 = read_float(chr2(15241:15244,:), 1, count);
  t.opexsathick4 = read_float(chr2(15245:15248,:), 1, count);
  t.opexsathick5 = read_float(chr2(15249:15252,:), 1, count);
  t.opexsathick6 = read_float(chr2(15253:15256,:), 1, count);
  t.opexsatlen1 = read_int(chr2(15257:15260,:), 1, count);
  t.opexsatlen2 = read_int(chr2(15261:15264,:), 1, count);
  t.opexsatlen3 = read_int(chr2(15265:15268,:), 1, count);
  t.opexsatlen4 = read_int(chr2(15269:15272,:), 1, count);
  t.opexsatlen5 = read_int(chr2(15273:15276,:), 1, count);
  t.opexsatlen6 = read_int(chr2(15277:15280,:), 1, count);
  t.opexsatloc1 = read_float(chr2(15281:15284,:), 1, count);
  t.opexsatloc2 = read_float(chr2(15285:15288,:), 1, count);
  t.opexsatloc3 = read_float(chr2(15289:15292,:), 1, count);
  t.opexsatloc4 = read_float(chr2(15293:15296,:), 1, count);
  t.opexsatloc5 = read_float(chr2(15297:15300,:), 1, count);
  t.opexsatloc6 = read_float(chr2(15301:15304,:), 1, count);
  t.opexsatmask = read_int(chr2(15305:15308,:), 1, count);
  t.opexsatoff1 = read_int(chr2(15309:15312,:), 1, count);
  t.opexsatoff2 = read_int(chr2(15313:15316,:), 1, count);
  t.opexsatoff3 = read_int(chr2(15317:15320,:), 1, count);
  t.opexsatoff4 = read_int(chr2(15321:15324,:), 1, count);
  t.opexsatoff5 = read_int(chr2(15325:15328,:), 1, count);
  t.opexsatoff6 = read_int(chr2(15329:15332,:), 1, count);
  t.opexsatparal = read_int(chr2(15333:15336,:), 1, count);
  t.opfMRIPDTYPE = read_int(chr2(15337:15340,:), 1, count);
  t.opfast = read_int(chr2(15341:15344,:), 1, count);
  t.opfat = read_int(chr2(15345:15348,:), 1, count);
  t.opfatcl = read_int(chr2(15349:15352,:), 1, count);
  t.opfatwater = read_int(chr2(15353:15356,:), 1, count);
  t.opfcaxis = read_int(chr2(15357:15360,:), 1, count);
  t.opfcine = read_int(chr2(15361:15364,:), 1, count);
  t.opfcomp = read_int(chr2(15365:15368,:), 1, count);
  t.opflair = read_int(chr2(15369:15372,:), 1, count);
  t.opflaxall = read_int(chr2(15373:15376,:), 1, count);
  t.opflaxx = read_int(chr2(15377:15380,:), 1, count);
  t.opflaxxa = read_int(chr2(15381:15384,:), 1, count);
  t.opflaxy = read_int(chr2(15385:15388,:), 1, count);
  t.opflaxya = read_int(chr2(15389:15392,:), 1, count);
  t.opflaxz = read_int(chr2(15393:15396,:), 1, count);
  t.opflaxza = read_int(chr2(15397:15400,:), 1, count);
  t.opflip = read_float(chr2(15401:15404,:), 1, count);
  t.opflrecon = read_int(chr2(15405:15408,:), 1, count);
  t.opfluorotrigger = read_int(chr2(15409:15412,:), 1, count);
  t.opfmri = read_int(chr2(15413:15416,:), 1, count);
  t.opfov = read_float(chr2(15417:15420,:), 1, count);
  t.opfphases = read_int(chr2(15421:15424,:), 1, count);
  t.opfr = read_int(chr2(15425:15428,:), 1, count);
  t.opfreqfov = read_float(chr2(15429:15432,:), 1, count);
  t.opfulltrain = read_int(chr2(15433:15436,:), 1, count);
  t.opfus = read_int(chr2(15437:15440,:), 1, count);
  t.opgirmode = read_int(chr2(15441:15444,:), 1, count);
  t.opgradmode = read_int(chr2(15445:15448,:), 1, count);
  t.opgrx = read_int(chr2(15449:15452,:), 1, count);
  t.opgrxroi = read_int(chr2(15453:15456,:), 1, count);
  t.opharmonize = read_int(chr2(15457:15460,:), 1, count);
  t.opheadscout = read_int(chr2(15461:15464,:), 1, count);
  t.ophoecc = read_int(chr2(15465:15468,:), 1, count);
  t.ophrate = read_int(chr2(15469:15472,:), 1, count);
  t.ophrep = read_int(chr2(15473:15476,:), 1, count);
  t.ophydro = read_int(chr2(15477:15480,:), 1, count);
  t.opidealiq = read_int(chr2(15481:15484,:), 1, count);
  t.opileave = read_int(chr2(15485:15488,:), 1, count);
  t.opimode = read_int(chr2(15489:15492,:), 1, count);
  t.opinhance = read_int(chr2(15493:15496,:), 1, count);
  t.opinhsflow = read_int(chr2(15497:15500,:), 1, count);
  t.opinit_state = read_int(chr2(15501:15504,:), 1, count);
  t.opinittrigdelay = read_float(chr2(15505:15508,:), 1, count);
  t.opinrangetr = read_int(chr2(15509:15512,:), 1, count);
  t.opinrangetrmax = read_int(chr2(15513:15516,:), 1, count);
  t.opinrangetrmin = read_int(chr2(15517:15520,:), 1, count);
  t.opirmode = read_int(chr2(15521:15524,:), 1, count);
  t.opirprep = read_int(chr2(15525:15528,:), 1, count);
  t.opjrmode = read_int(chr2(15529:15532,:), 1, count);
  t.oplandmark = read_int(chr2(15533:15536,:), 1, count);
  t.oplava = read_int(chr2(15537:15540,:), 1, count);
  t.oplenap = read_float(chr2(15541:15544,:), 1, count);
  t.oplenrl = read_float(chr2(15545:15548,:), 1, count);
  t.oplensi = read_float(chr2(15549:15552,:), 1, count);
  t.oploadprotocol = read_int(chr2(15553:15556,:), 1, count);
  t.oplocap = read_float(chr2(15557:15560,:), 1, count);
  t.oplocrl = read_float(chr2(15561:15564,:), 1, count);
  t.oplocsi = read_float(chr2(15565:15568,:), 1, count);
  t.opmagc = read_int(chr2(15569:15572,:), 1, count);
  t.opmagic = read_int(chr2(15573:15576,:), 1, count);
  t.opmart = read_int(chr2(15577:15580,:), 1, count);
  t.opmask = read_int(chr2(15581:15584,:), 1, count);
  t.opmavric = read_int(chr2(15585:15588,:), 1, count);
  t.opmb = read_int(chr2(15589:15592,:), 1, count);
  t.opmedal = read_int(chr2(15593:15596,:), 1, count);
  t.opmer2 = read_int(chr2(15597:15600,:), 1, count);
  t.opmerge = read_int(chr2(15601:15604,:), 1, count);
  t.opmintedif = read_int(chr2(15605:15608,:), 1, count);
  t.opmonfov = read_float(chr2(15609:15612,:), 1, count);
  t.opmonthick = read_float(chr2(15613:15616,:), 1, count);
  t.opmph = read_int(chr2(15617:15620,:), 1, count);
  t.opmphases = read_int(chr2(15621:15624,:), 1, count);
  t.opmprage = read_int(chr2(15625:15628,:), 1, count);
  t.opmsde = read_int(chr2(15629:15632,:), 1, count);
  t.opmsdeaxx = read_int(chr2(15633:15636,:), 1, count);
  t.opmsdeaxy = read_int(chr2(15637:15640,:), 1, count);
  t.opmsdeaxz = read_int(chr2(15641:15644,:), 1, count);
  t.opmt = read_int(chr2(15645:15648,:), 1, count);
  t.opmultistation = read_int(chr2(15649:15652,:), 1, count);
  t.opnav = read_int(chr2(15653:15656,:), 1, count);
  t.opnavaccwin = read_float(chr2(15657:15660,:), 1, count);
  t.opnavautoaccwin = read_int(chr2(15661:15664,:), 1, count);
  t.opnavautotrigtime = read_int(chr2(15665:15668,:), 1, count);
  t.opnavmaxinterval = read_int(chr2(15669:15672,:), 1, count);
  t.opnavpscpause = read_int(chr2(15673:15676,:), 1, count);
  t.opnavpsctime = read_int(chr2(15677:15680,:), 1, count);
  t.opnavrrmeas = read_int(chr2(15681:15684,:), 1, count);
  t.opnavrrmeasrr = read_int(chr2(15685:15688,:), 1, count);
  t.opnavrrmeastime = read_int(chr2(15689:15692,:), 1, count);
  t.opnavsigenhance = read_int(chr2(15693:15696,:), 1, count);
  t.opnavsltrack = read_int(chr2(15697:15700,:), 1, count);
  t.opnavtype = read_int(chr2(15701:15704,:), 1, count);
  t.opnbh = read_int(chr2(15705:15708,:), 1, count);
  t.opncoils = read_int(chr2(15709:15712,:), 1, count);
  t.opnecho = read_int(chr2(15713:15716,:), 1, count);
  t.opnewgeo = read_int(chr2(15717:15720,:), 1, count);
  t.opnex = read_float(chr2(15721:15724,:), 1, count);
  t.opnnex = read_int(chr2(15725:15728,:), 1, count);
  t.opnopwrap = read_int(chr2(15729:15732,:), 1, count);
  t.opnostations = read_int(chr2(15733:15736,:), 1, count);
  t.opnrr = read_int(chr2(15737:15740,:), 1, count);
  t.opnrr_dda = read_int(chr2(15741:15744,:), 1, count);
  t.opnseg = read_int(chr2(15745:15748,:), 1, count);
  t.opnshots = read_int(chr2(15749:15752,:), 1, count);
  t.opnspokes = read_int(chr2(15753:15756,:), 1, count);
  t.opnumbvals = read_int(chr2(15757:15760,:), 1, count);
  t.opnumgir = read_int(chr2(15761:15764,:), 1, count);
  t.opnumgroups = read_int(chr2(15765:15768,:), 1, count);
  t.opnumsynbvals = read_int(chr2(15769:15772,:), 1, count);
  t.opobplane = read_int(chr2(15773:15776,:), 1, count);
  t.opoversamplingfactor = read_float(chr2(15777:15780,:), 1, count);
  t.opovl = read_int(chr2(15781:15784,:), 1, count);
  t.oppdgm_str = read_int(chr2(15785:15788,:), 1, count);
  t.opphasecycle = read_int(chr2(15789:15792,:), 1, count);
  t.opphasefov = read_float(chr2(15793:15796,:), 1, count);
  t.opphaseimage = read_int(chr2(15797:15800,:), 1, count);
  t.opphases = read_int(chr2(15801:15804,:), 1, count);
  t.opphcor = read_int(chr2(15805:15808,:), 1, count);
  t.opphsen = read_int(chr2(15809:15812,:), 1, count);
  t.opphysplane = read_int(chr2(15813:15816,:), 1, count);
  t.opplane = read_int(chr2(15817:15820,:), 1, count);
  t.oppomp = read_int(chr2(15821:15824,:), 1, count);
  t.oppos = read_int(chr2(15825:15828,:), 1, count);
  t.oppostlabeldelay = read_float(chr2(15829:15832,:), 1, count);
  t.opprescanopt = read_int(chr2(15833:15836,:), 1, count);
  t.opproject = read_int(chr2(15837:15840,:), 1, count);
  t.oppromo = read_int(chr2(15841:15844,:), 1, count);
  t.opprop = read_int(chr2(15845:15848,:), 1, count);
  t.opprotRxMode = read_int(chr2(15849:15852,:), 1, count);
  t.oppscapa = read_int(chr2(15853:15856,:), 1, count);
  t.oppscshimtg = read_int(chr2(15857:15860,:), 1, count);
  t.oppscvquant = read_int(chr2(15861:15864,:), 1, count);
  t.oppsd_trig = read_int(chr2(15865:15868,:), 1, count);
  t.oppseq = read_int(chr2(15869:15872,:), 1, count);
  t.opptsize = read_int(chr2(15873:15876,:), 1, count);
  t.oppure = read_int(chr2(15877:15880,:), 1, count);
  t.oppurecal = read_int(chr2(15881:15884,:), 1, count);
  t.opquickstep = read_int(chr2(15885:15888,:), 1, count);
  t.oprampdir = read_int(chr2(15889:15892,:), 1, count);
  t.oprbw = read_float(chr2(15893:15896,:), 1, count);
  t.oprbw2 = read_float(chr2(15897:15900,:), 1, count);
  t.oprealtime = read_int(chr2(15901:15904,:), 1, count);
  t.oprect = read_int(chr2(15905:15908,:), 1, count);
  t.oprep_active = read_int(chr2(15909:15912,:), 1, count);
  t.oprep_rest = read_int(chr2(15913:15916,:), 1, count);
  t.opresearch = read_int(chr2(15917:15920,:), 1, count);
  t.oprgcalmode = read_int(chr2(15921:15924,:), 1, count);
  t.oprlcsiis = read_float(chr2(15925:15928,:), 1, count);
  t.oprlflow = read_int(chr2(15929:15932,:), 1, count);
  t.oprtarr = read_int(chr2(15933:15936,:), 1, count);
  t.oprtb0 = read_int(chr2(15937:15940,:), 1, count);
  t.oprtbc = read_int(chr2(15941:15944,:), 1, count);
  t.oprtcardseq = read_int(chr2(15945:15948,:), 1, count);
  t.oprtcgate = read_int(chr2(15949:15952,:), 1, count);
  t.oprtpoint = read_int(chr2(15953:15956,:), 1, count);
  t.oprtrate = read_int(chr2(15957:15960,:), 1, count);
  t.oprtrep = read_int(chr2(15961:15964,:), 1, count);
  t.oprttdel1 = read_int(chr2(15965:15968,:), 1, count);
  t.oprttseq = read_int(chr2(15969:15972,:), 1, count);
  t.opsagittal_slice = read_int(chr2(15973:15976,:), 1, count);
  t.opsarburst = read_int(chr2(15977:15980,:), 1, count);
  t.opsarmode = read_int(chr2(15981:15984,:), 1, count);
  t.opsat = read_int(chr2(15985:15988,:), 1, count);
  t.opsatmask = read_int(chr2(15989:15992,:), 1, count);
  t.opsatx = read_int(chr2(15993:15996,:), 1, count);
  t.opsatxloc1 = read_float(chr2(15997:16000,:), 1, count);
  t.opsatxloc2 = read_float(chr2(16001:16004,:), 1, count);
  t.opsatxthick = read_float(chr2(16005:16008,:), 1, count);
  t.opsaty = read_int(chr2(16009:16012,:), 1, count);
  t.opsatyloc1 = read_float(chr2(16013:16016,:), 1, count);
  t.opsatyloc2 = read_float(chr2(16017:16020,:), 1, count);
  t.opsatythick = read_float(chr2(16021:16024,:), 1, count);
  t.opsatz = read_int(chr2(16025:16028,:), 1, count);
  t.opsatzloc1 = read_float(chr2(16029:16032,:), 1, count);
  t.opsatzloc2 = read_float(chr2(16033:16036,:), 1, count);
  t.opsatzthick = read_float(chr2(16037:16040,:), 1, count);
  t.opsavedf = read_int(chr2(16041:16044,:), 1, count);
  t.opscic = read_int(chr2(16045:16048,:), 1, count);
  t.opseparatesynb = read_int(chr2(16049:16052,:), 1, count);
  t.opsepseries = read_int(chr2(16053:16056,:), 1, count);
  t.opseriesnum = read_int(chr2(16057:16060,:), 1, count);
  t.opseriessave = read_int(chr2(16061:16064,:), 1, count);
  t.opsicsiis = read_float(chr2(16065:16068,:), 1, count);
  t.opsiflow = read_int(chr2(16069:16072,:), 1, count);
  t.opsilent = read_int(chr2(16073:16076,:), 1, count);
  t.opsilentlevel = read_int(chr2(16077:16080,:), 1, count);
  t.opsilentmr = read_int(chr2(16081:16084,:), 1, count);
  t.opslblank = read_int(chr2(16085:16088,:), 1, count);
  t.opsldelay = read_int(chr2(16089:16092,:), 1, count);
  t.opslice_order = read_int(chr2(16093:16096,:), 1, count);
  t.opslicecnt = read_int(chr2(16097:16100,:), 1, count);
  t.opslinky = read_int(chr2(16101:16104,:), 1, count);
  t.opsllocs = read_int(chr2(16105:16108,:), 1, count);
  t.opslquant = read_int(chr2(16109:16112,:), 1, count);
  t.opslspace = read_float(chr2(16113:16116,:), 1, count);
  t.opslthick = read_float(chr2(16117:16120,:), 1, count);
  t.opslzip2 = read_int(chr2(16121:16124,:), 1, count);
  t.opslzip4 = read_int(chr2(16125:16128,:), 1, count);
  t.opsmartprep = read_int(chr2(16129:16132,:), 1, count);
  t.opspecir = read_int(chr2(16133:16136,:), 1, count);
  t.opspf = read_int(chr2(16137:16140,:), 1, count);
  t.opspiral = read_int(chr2(16141:16144,:), 1, count);
  t.opsquare = read_int(chr2(16145:16148,:), 1, count);
  t.opsrprep = read_int(chr2(16149:16152,:), 1, count);
  t.opssfse = read_int(chr2(16153:16156,:), 1, count);
  t.opssrf = read_int(chr2(16157:16160,:), 1, count);
  t.opstation = read_int(chr2(16161:16164,:), 1, count);
  t.opstress = read_int(chr2(16165:16168,:), 1, count);
  t.opswan = read_int(chr2(16169:16172,:), 1, count);
  t.opswift = read_int(chr2(16173:16176,:), 1, count);
  t.opt1flair = read_int(chr2(16177:16180,:), 1, count);
  t.opt1map = read_int(chr2(16181:16184,:), 1, count);
  t.opt2flair = read_int(chr2(16185:16188,:), 1, count);
  t.opt2map = read_int(chr2(16189:16192,:), 1, count);
  t.opt2prep = read_int(chr2(16193:16196,:), 1, count);
  t.opt2prepte = read_int(chr2(16197:16200,:), 1, count);
  t.optabent = read_int(chr2(16201:16204,:), 1, count);
  t.optagangle = read_float(chr2(16205:16208,:), 1, count);
  t.optagging = read_int(chr2(16209:16212,:), 1, count);
  t.optagspc = read_int(chr2(16213:16216,:), 1, count);
  t.optdel1 = read_int(chr2(16217:16220,:), 1, count);
  t.opte = read_int(chr2(16221:16224,:), 1, count);
  t.opte2 = read_int(chr2(16225:16228,:), 1, count);
  t.optefw = read_int(chr2(16229:16232,:), 1, count);
  t.optensor = read_int(chr2(16233:16236,:), 1, count);
  t.opti = read_int(chr2(16237:16240,:), 1, count);
  t.optimal_channel_combine = read_int(chr2(16241:16244,:), 1, count);
  t.optissuet1 = read_int(chr2(16245:16248,:), 1, count);
  t.optlabel = read_int(chr2(16249:16252,:), 1, count);
  t.optlrdrf = read_int(chr2(16253:16256,:), 1, count);
  t.optouch = read_int(chr2(16257:16260,:), 1, count);
  t.optouchamp = read_int(chr2(16261:16264,:), 1, count);
  t.optouchax = read_int(chr2(16265:16268,:), 1, count);
  t.optouchcyc = read_int(chr2(16269:16272,:), 1, count);
  t.optouchfreq = read_int(chr2(16273:16276,:), 1, count);
  t.optouchmegfreq = read_int(chr2(16277:16280,:), 1, count);
  t.optouchtphases = read_int(chr2(16281:16284,:), 1, count);
  t.optphases = read_int(chr2(16285:16288,:), 1, count);
  t.optr = read_int(chr2(16289:16292,:), 1, count);
  t.optracq = read_int(chr2(16293:16296,:), 1, count);
  t.optrecovery = read_int(chr2(16297:16300,:), 1, count);
  t.optricksdel = read_int(chr2(16301:16304,:), 1, count);
  t.optrickspause = read_int(chr2(16305:16308,:), 1, count);
  t.optrip = read_int(chr2(16309:16312,:), 1, count);
  t.optseq = read_int(chr2(16313:16316,:), 1, count);
  t.opuser0 = read_float(chr2(16317:16320,:), 1, count);
  t.opuser1 = read_float(chr2(16321:16324,:), 1, count);
  t.opuser10 = read_float(chr2(16325:16328,:), 1, count);
  t.opuser11 = read_float(chr2(16329:16332,:), 1, count);
  t.opuser12 = read_float(chr2(16333:16336,:), 1, count);
  t.opuser13 = read_float(chr2(16337:16340,:), 1, count);
  t.opuser14 = read_float(chr2(16341:16344,:), 1, count);
  t.opuser15 = read_float(chr2(16345:16348,:), 1, count);
  t.opuser16 = read_float(chr2(16349:16352,:), 1, count);
  t.opuser17 = read_float(chr2(16353:16356,:), 1, count);
  t.opuser18 = read_float(chr2(16357:16360,:), 1, count);
  t.opuser19 = read_float(chr2(16361:16364,:), 1, count);
  t.opuser2 = read_float(chr2(16365:16368,:), 1, count);
  t.opuser20 = read_float(chr2(16369:16372,:), 1, count);
  t.opuser21 = read_float(chr2(16373:16376,:), 1, count);
  t.opuser22 = read_float(chr2(16377:16380,:), 1, count);
  t.opuser23 = read_float(chr2(16381:16384,:), 1, count);
  t.opuser24 = read_float(chr2(16385:16388,:), 1, count);
  t.opuser25 = read_float(chr2(16389:16392,:), 1, count);
  t.opuser26 = read_float(chr2(16393:16396,:), 1, count);
  t.opuser27 = read_float(chr2(16397:16400,:), 1, count);
  t.opuser28 = read_float(chr2(16401:16404,:), 1, count);
  t.opuser29 = read_float(chr2(16405:16408,:), 1, count);
  t.opuser3 = read_float(chr2(16409:16412,:), 1, count);
  t.opuser30 = read_float(chr2(16413:16416,:), 1, count);
  t.opuser31 = read_float(chr2(16417:16420,:), 1, count);
  t.opuser32 = read_float(chr2(16421:16424,:), 1, count);
  t.opuser33 = read_float(chr2(16425:16428,:), 1, count);
  t.opuser34 = read_float(chr2(16429:16432,:), 1, count);
  t.opuser35 = read_float(chr2(16433:16436,:), 1, count);
  t.opuser36 = read_float(chr2(16437:16440,:), 1, count);
  t.opuser37 = read_float(chr2(16441:16444,:), 1, count);
  t.opuser38 = read_float(chr2(16445:16448,:), 1, count);
  t.opuser39 = read_float(chr2(16449:16452,:), 1, count);
  t.opuser4 = read_float(chr2(16453:16456,:), 1, count);
  t.opuser40 = read_float(chr2(16457:16460,:), 1, count);
  t.opuser41 = read_float(chr2(16461:16464,:), 1, count);
  t.opuser42 = read_float(chr2(16465:16468,:), 1, count);
  t.opuser43 = read_float(chr2(16469:16472,:), 1, count);
  t.opuser44 = read_float(chr2(16473:16476,:), 1, count);
  t.opuser45 = read_float(chr2(16477:16480,:), 1, count);
  t.opuser46 = read_float(chr2(16481:16484,:), 1, count);
  t.opuser47 = read_float(chr2(16485:16488,:), 1, count);
  t.opuser48 = read_float(chr2(16489:16492,:), 1, count);
  t.opuser5 = read_float(chr2(16493:16496,:), 1, count);
  t.opuser6 = read_float(chr2(16497:16500,:), 1, count);
  t.opuser7 = read_float(chr2(16501:16504,:), 1, count);
  t.opuser8 = read_float(chr2(16505:16508,:), 1, count);
  t.opuser9 = read_float(chr2(16509:16512,:), 1, count);
  t.opuser_usage_tag = read_int(chr2(16513:16516,:), 1, count);
  t.opvbw = read_int(chr2(16517:16520,:), 1, count);
  t.opvenc = read_float(chr2(16521:16524,:), 1, count);
  t.opvenous = read_int(chr2(16525:16528,:), 1, count);
  t.opvest = read_float(chr2(16529:16532,:), 1, count);
  t.opvibrant = read_int(chr2(16533:16536,:), 1, count);
  t.opview_order = read_int(chr2(16537:16540,:), 1, count);
  t.opvps = read_int(chr2(16541:16544,:), 1, count);
  t.opvquant = read_int(chr2(16545:16548,:), 1, count);
  t.opvrg = read_int(chr2(16549:16552,:), 1, count);
  t.opvsphases = read_int(chr2(16553:16556,:), 1, count);
  t.opvthick = read_float(chr2(16557:16560,:), 1, count);
  t.opwarmup = read_int(chr2(16561:16564,:), 1, count);
  t.opwater = read_int(chr2(16565:16568,:), 1, count);
  t.opweight = read_float(chr2(16569:16572,:), 1, count);
  t.opxres = read_int(chr2(16573:16576,:), 1, count);
  t.opyres = read_int(chr2(16577:16580,:), 1, count);
  t.opzip1024 = read_int(chr2(16581:16584,:), 1, count);
  t.opzip512 = read_int(chr2(16585:16588,:), 1, count);
  t.opzoom_coil_ind = read_int(chr2(16589:16592,:), 1, count);
  t.opzoom_dist_ax = read_float(chr2(16593:16596,:), 1, count);
  t.opzoom_dist_cor = read_float(chr2(16597:16600,:), 1, count);
  t.opzoom_dist_sag = read_float(chr2(16601:16604,:), 1, count);
  t.opzoom_fov_xy = read_float(chr2(16605:16608,:), 1, count);
  t.opzoom_fov_z = read_float(chr2(16609:16612,:), 1, count);
  t.osfpR_flag = read_int(chr2(16613:16616,:), 1, count);
  t.osfp_dda = read_int(chr2(16617:16620,:), 1, count);
  t.osfp_debug = read_int(chr2(16621:16624,:), 1, count);
  t.osfp_delay_factor = read_float(chr2(16625:16628,:), 1, count);
  t.osfp_flag = read_int(chr2(16629:16632,:), 1, count);
  t.osfp_weight = read_float(chr2(16633:16636,:), 1, count);
  t.osfp_weight_act = read_float(chr2(16637:16640,:), 1, count);
  t.osfp_weight_grad = read_float(chr2(16641:16644,:), 1, count);
  t.osfpsd_flag = read_int(chr2(16645:16648,:), 1, count);
  t.override_opcalrequired = read_int(chr2(16649:16652,:), 1, count);
  t.pass_thru_mode = read_int(chr2(16653:16656,:), 1, count);
  t.passtime = read_int(chr2(16657:16660,:), 1, count);
  t.pause_after_mask_flag = read_int(chr2(16661:16664,:), 1, count);
  t.pc_const = read_float(chr2(16665:16668,:), 1, count);
  t.pc_mode = read_int(chr2(16669:16672,:), 1, count);
  t.pcfiesta_flag = read_int(chr2(16673:16676,:), 1, count);
  t.pcfiesta_rf = read_int(chr2(16677:16680,:), 1, count);
  t.pe_acq1 = read_int(chr2(16681:16684,:), 1, count);
  t.pe_acq2 = read_int(chr2(16685:16688,:), 1, count);
  t.pe_on = read_int(chr2(16689:16692,:), 1, count);
  t.peakPhaseIndex = read_int(chr2(16693:16696,:), 1, count);
  t.per_gx1 = read_int(chr2(16697:16700,:), 1, count);
  t.per_gy1 = read_int(chr2(16701:16704,:), 1, count);
  t.per_gy1r = read_int(chr2(16705:16708,:), 1, count);
  t.per_gzcomb = read_int(chr2(16709:16712,:), 1, count);
  t.per_gzcombhtr = read_int(chr2(16713:16716,:), 1, count);
  t.per_gzp = read_int(chr2(16717:16720,:), 1, count);
  t.per_gzphtr = read_int(chr2(16721:16724,:), 1, count);
  t.per_gzvlw = read_int(chr2(16725:16728,:), 1, count);
  t.pfkr_flag = read_int(chr2(16729:16732,:), 1, count);
  t.pfkr_fraction = read_float(chr2(16733:16736,:), 1, count);
  t.pfkr_fraction_act = read_float(chr2(16737:16740,:), 1, count);
  t.pfkr_yz_enable = read_int(chr2(16741:16744,:), 1, count);
  t.pfkr_yz_flag = read_int(chr2(16745:16748,:), 1, count);
  t.pfky_fraction = read_float(chr2(16749:16752,:), 1, count);
  t.pfky_total_unaccel = read_int(chr2(16753:16756,:), 1, count);
  t.pfkyz2kr_flag = read_int(chr2(16757:16760,:), 1, count);
  t.pfkz_flag = read_int(chr2(16761:16764,:), 1, count);
  t.pfkz_fraction = read_float(chr2(16765:16768,:), 1, count);
  t.pfkz_fraction_min = read_float(chr2(16769:16772,:), 1, count);
  t.pfkz_hnover = read_int(chr2(16773:16776,:), 1, count);
  t.pfkz_reverse_seq = read_int(chr2(16777:16780,:), 1, count);
  t.pfkz_segments = read_int(chr2(16781:16784,:), 1, count);
  t.pfkz_total = read_int(chr2(16785:16788,:), 1, count);
  t.pfkz_total_unaccel = read_int(chr2(16789:16792,:), 1, count);
  t.pfkz_views_per_segment = read_int(chr2(16793:16796,:), 1, count);
  t.pfkz_vps_max = read_int(chr2(16797:16800,:), 1, count);
  t.pg_beta = read_float(chr2(16801:16804,:), 1, count);
  t.pgen_for_dbdt_opt = read_int(chr2(16805:16808,:), 1, count);
  t.phase_col = read_int(chr2(16809:16812,:), 1, count);
  t.phase_cor = read_int(chr2(16813:16816,:), 1, count);
  t.phase_cycles = read_int(chr2(16817:16820,:), 1, count);
  t.phase_order = read_int(chr2(16821:16824,:), 1, count);
  t.phase_rfflp180 = read_int(chr2(16825:16828,:), 1, count);
  t.phasefovgt1_flag = read_int(chr2(16829:16832,:), 1, count);
  t.phaseres = read_int(chr2(16833:16836,:), 1, count);
  t.phmask = read_int(chr2(16837:16840,:), 1, count);
  t.phorder = read_int(chr2(16841:16844,:), 1, count);
  t.phygrd = read_PHYS_GRAD(chr2(16845:17000,:), 1, count);
  t.phys_rec_resolution = read_int(chr2(17001:17004,:), 1, count);
  t.phys_record_channelsel = read_int(chr2(17005:17008,:), 1, count);
  t.phys_record_flag = read_int(chr2(17009:17012,:), 1, count);
  t.pi1stshimb = read_int(chr2(17013:17016,:), 1, count);
  t.pi2dmde = read_int(chr2(17017:17020,:), 1, count);
  t.pi3dgradwarpnub = read_int(chr2(17021:17024,:), 1, count);
  t.pi_neg_sp = read_int(chr2(17025:17028,:), 1, count);
  t.pi_piphasfovnub = read_int(chr2(17029:17032,:), 1, count);
  t.piaccel_cs_step = read_float(chr2(17033:17036,:), 1, count);
  t.piaccel_cs_stride = read_float(chr2(17037:17040,:), 1, count);
  t.piaccel_csedit = read_int(chr2(17041:17044,:), 1, count);
  t.piaccel_csnub = read_int(chr2(17045:17048,:), 1, count);
  t.piaccel_csval2 = read_float(chr2(17049:17052,:), 1, count);
  t.piaccel_csval3 = read_float(chr2(17053:17056,:), 1, count);
  t.piaccel_csval4 = read_float(chr2(17057:17060,:), 1, count);
  t.piaccel_csval5 = read_float(chr2(17061:17064,:), 1, count);
  t.piaccel_csval6 = read_float(chr2(17065:17068,:), 1, count);
  t.piaccel_kt_step = read_int(chr2(17069:17072,:), 1, count);
  t.piaccel_kt_stride = read_int(chr2(17073:17076,:), 1, count);
  t.piaccel_ktedit = read_int(chr2(17077:17080,:), 1, count);
  t.piaccel_ktnub = read_int(chr2(17081:17084,:), 1, count);
  t.piaccel_ktval2 = read_int(chr2(17085:17088,:), 1, count);
  t.piaccel_ktval3 = read_int(chr2(17089:17092,:), 1, count);
  t.piaccel_ktval4 = read_int(chr2(17093:17096,:), 1, count);
  t.piaccel_ktval5 = read_int(chr2(17097:17100,:), 1, count);
  t.piaccel_ktval6 = read_int(chr2(17101:17104,:), 1, count);
  t.piaccel_mb_step = read_int(chr2(17105:17108,:), 1, count);
  t.piaccel_mb_stride = read_int(chr2(17109:17112,:), 1, count);
  t.piaccel_mbedit = read_int(chr2(17113:17116,:), 1, count);
  t.piaccel_mbnub = read_int(chr2(17117:17120,:), 1, count);
  t.piaccel_mbval2 = read_int(chr2(17121:17124,:), 1, count);
  t.piaccel_mbval3 = read_int(chr2(17125:17128,:), 1, count);
  t.piaccel_mbval4 = read_int(chr2(17129:17132,:), 1, count);
  t.piaccel_mbval5 = read_int(chr2(17133:17136,:), 1, count);
  t.piaccel_mbval6 = read_int(chr2(17137:17140,:), 1, count);
  t.piaccel_ph_step = read_float(chr2(17141:17144,:), 1, count);
  t.piaccel_ph_stride = read_float(chr2(17145:17148,:), 1, count);
  t.piaccel_phedit = read_int(chr2(17149:17152,:), 1, count);
  t.piaccel_phnub = read_int(chr2(17153:17156,:), 1, count);
  t.piaccel_phval2 = read_float(chr2(17157:17160,:), 1, count);
  t.piaccel_phval3 = read_float(chr2(17161:17164,:), 1, count);
  t.piaccel_phval4 = read_float(chr2(17165:17168,:), 1, count);
  t.piaccel_phval5 = read_float(chr2(17169:17172,:), 1, count);
  t.piaccel_phval6 = read_float(chr2(17173:17176,:), 1, count);
  t.piaccel_sl_step = read_float(chr2(17177:17180,:), 1, count);
  t.piaccel_sl_stride = read_float(chr2(17181:17184,:), 1, count);
  t.piaccel_sledit = read_int(chr2(17185:17188,:), 1, count);
  t.piaccel_slnub = read_int(chr2(17189:17192,:), 1, count);
  t.piaccel_slval2 = read_float(chr2(17193:17196,:), 1, count);
  t.piaccel_slval3 = read_float(chr2(17197:17200,:), 1, count);
  t.piaccel_slval4 = read_float(chr2(17201:17204,:), 1, count);
  t.piaccel_slval5 = read_float(chr2(17205:17208,:), 1, count);
  t.piaccel_slval6 = read_float(chr2(17209:17212,:), 1, count);
  t.piaccel_t_step = read_float(chr2(17213:17216,:), 1, count);
  t.piaccel_t_stride = read_float(chr2(17217:17220,:), 1, count);
  t.piaccel_tedit = read_int(chr2(17221:17224,:), 1, count);
  t.piaccel_tnub = read_int(chr2(17225:17228,:), 1, count);
  t.piaccel_total_stride = read_float(chr2(17229:17232,:), 1, count);
  t.piaccel_tval2 = read_float(chr2(17233:17236,:), 1, count);
  t.piaccel_tval3 = read_float(chr2(17237:17240,:), 1, count);
  t.piaccel_tval4 = read_float(chr2(17241:17244,:), 1, count);
  t.piaccel_tval5 = read_float(chr2(17245:17248,:), 1, count);
  t.piaccel_tval6 = read_float(chr2(17249:17252,:), 1, count);
  t.piaccelscrn = read_int(chr2(17253:17256,:), 1, count);
  t.piacqnub = read_int(chr2(17257:17260,:), 1, count);
  t.piacsdefval = read_int(chr2(17261:17264,:), 1, count);
  t.piacsnub = read_int(chr2(17265:17268,:), 1, count);
  t.piacsval2 = read_int(chr2(17269:17272,:), 1, count);
  t.piacsval3 = read_int(chr2(17273:17276,:), 1, count);
  t.piacsval4 = read_int(chr2(17277:17280,:), 1, count);
  t.piacsval5 = read_int(chr2(17281:17284,:), 1, count);
  t.piacsval6 = read_int(chr2(17285:17288,:), 1, count);
  t.piactim = read_int(chr2(17289:17292,:), 1, count);
  t.piaddinub = read_int(chr2(17293:17296,:), 1, count);
  t.piaddscannub = read_int(chr2(17297:17300,:), 1, count);
  t.piaddscantype = read_int(chr2(17301:17304,:), 1, count);
  t.piadvise = read_int(chr2(17305:17308,:), 1, count);
  t.piadvt2map = read_int(chr2(17309:17312,:), 1, count);
  t.piait = read_int(chr2(17313:17316,:), 1, count);
  t.piallowedrescantimenub = read_int(chr2(17317:17320,:), 1, count);
  t.piamnub = read_int(chr2(17321:17324,:), 1, count);
  t.piapcsi = read_int(chr2(17325:17328,:), 1, count);
  t.piaphasdefval = read_int(chr2(17329:17332,:), 1, count);
  t.piaphasenub = read_int(chr2(17333:17336,:), 1, count);
  t.piaphaseval2 = read_int(chr2(17337:17340,:), 1, count);
  t.piaphaseval3 = read_int(chr2(17341:17344,:), 1, count);
  t.piaphaseval4 = read_int(chr2(17345:17348,:), 1, count);
  t.piapx = read_int(chr2(17349:17352,:), 1, count);
  t.piapxprfacc = read_int(chr2(17353:17356,:), 1, count);
  t.piapxprfres = read_int(chr2(17357:17360,:), 1, count);
  t.piapxprfstepnub = read_int(chr2(17361:17364,:), 1, count);
  t.piapxprfstepval1 = read_int(chr2(17365:17368,:), 1, count);
  t.piapxprfstepval2 = read_int(chr2(17369:17372,:), 1, count);
  t.piarccoilrestrict = read_int(chr2(17373:17376,:), 1, count);
  t.piasar = read_float(chr2(17377:17380,:), 1, count);
  t.piassetoverride = read_int(chr2(17381:17384,:), 1, count);
  t.piassetscrn = read_int(chr2(17385:17388,:), 1, count);
  t.piautobspti = read_int(chr2(17389:17392,:), 1, count);
  t.piautoetl = read_int(chr2(17393:17396,:), 1, count);
  t.piautofa = read_int(chr2(17397:17400,:), 1, count);
  t.piautoirbands = read_int(chr2(17401:17404,:), 1, count);
  t.piautonavtracker = read_int(chr2(17405:17408,:), 1, count);
  t.piautopause = read_int(chr2(17409:17412,:), 1, count);
  t.piautophasenub = read_int(chr2(17413:17416,:), 1, count);
  t.piautostep = read_int(chr2(17417:17420,:), 1, count);
  t.piautoti = read_int(chr2(17421:17424,:), 1, count);
  t.piautotrmode = read_int(chr2(17425:17428,:), 1, count);
  t.piautovoice = read_int(chr2(17429:17432,:), 1, count);
  t.pib1rms = read_float(chr2(17433:17436,:), 1, count);
  t.pibbandfilt = read_int(chr2(17437:17440,:), 1, count);
  t.pibreathholdnub = read_int(chr2(17441:17444,:), 1, count);
  t.pibsptidefval = read_int(chr2(17445:17448,:), 1, count);
  t.pibsptinub = read_int(chr2(17449:17452,:), 1, count);
  t.pibsptival2 = read_int(chr2(17453:17456,:), 1, count);
  t.pibsptival3 = read_int(chr2(17457:17460,:), 1, count);
  t.pibsptival4 = read_int(chr2(17461:17464,:), 1, count);
  t.pibsptival5 = read_int(chr2(17465:17468,:), 1, count);
  t.pibsptival6 = read_int(chr2(17469:17472,:), 1, count);
  t.piburstcooltime = read_float(chr2(17473:17476,:), 1, count);
  t.piburstmode = read_int(chr2(17477:17480,:), 1, count);
  t.pibval2 = read_int(chr2(17481:17484,:), 1, count);
  t.pibval3 = read_int(chr2(17485:17488,:), 1, count);
  t.pibval4 = read_int(chr2(17489:17492,:), 1, count);
  t.pibvalstab = read_int(chr2(17493:17496,:), 1, count);
  t.pibvnub = read_int(chr2(17497:17500,:), 1, count);
  t.picalmode = read_int(chr2(17501:17504,:), 1, count);
  t.picalmodenub = read_int(chr2(17505:17508,:), 1, count);
  t.picasar = read_float(chr2(17509:17512,:), 1, count);
  t.piccsat_obl = read_int(chr2(17513:17516,:), 1, count);
  t.piccsatnub = read_int(chr2(17517:17520,:), 1, count);
  t.pichemsatopt = read_int(chr2(17521:17524,:), 1, count);
  t.pichop = read_int(chr2(17525:17528,:), 1, count);
  t.picineiprot = read_int(chr2(17529:17532,:), 1, count);
  t.piclckcnt = read_int(chr2(17533:17536,:), 1, count);
  t.picoilfastswitchrequired = read_int(chr2(17537:17540,:), 1, count);
  t.picontrastwarning = read_int(chr2(17541:17544,:), 1, count);
  t.pics = read_int(chr2(17545:17548,:), 1, count);
  t.picsifov = read_int(chr2(17549:17552,:), 1, count);
  t.picsimode = read_int(chr2(17553:17556,:), 1, count);
  t.pidbdtper = read_float(chr2(17557:17560,:), 1, count);
  t.pidbdtts = read_float(chr2(17561:17564,:), 1, count);
  t.piddanub = read_int(chr2(17565:17568,:), 1, count);
  t.pidefaddimg = read_int(chr2(17569:17572,:), 1, count);
  t.pidefallowedrescantime = read_int(chr2(17573:17576,:), 1, count);
  t.pidefarr = read_int(chr2(17577:17580,:), 1, count);
  t.pidefbval = read_int(chr2(17581:17584,:), 1, count);
  t.pidefcaldelay = read_int(chr2(17585:17588,:), 1, count);
  t.pidefexcitemode = read_int(chr2(17589:17592,:), 1, count);
  t.pideffcaxis = read_int(chr2(17593:17596,:), 1, count);
  t.pidefflax = read_int(chr2(17597:17600,:), 1, count);
  t.pidefflrc = read_int(chr2(17601:17604,:), 1, count);
  t.pidefnavaccwin = read_int(chr2(17605:17608,:), 1, count);
  t.pidefnavautoaccwin = read_int(chr2(17609:17612,:), 1, count);
  t.pidefnavautotrigtime = read_int(chr2(17613:17616,:), 1, count);
  t.pidefnavmaxinterval = read_int(chr2(17617:17620,:), 1, count);
  t.pidefnavpscpause = read_int(chr2(17621:17624,:), 1, count);
  t.pidefnavpsctime = read_int(chr2(17625:17628,:), 1, count);
  t.pidefnavrrmeas = read_int(chr2(17629:17632,:), 1, count);
  t.pidefnavrrmeastime = read_int(chr2(17633:17636,:), 1, count);
  t.pidefnavsigenhance = read_int(chr2(17637:17640,:), 1, count);
  t.pidefnavsltrack = read_int(chr2(17641:17644,:), 1, count);
  t.pidefnavtype = read_int(chr2(17645:17648,:), 1, count);
  t.pidefnbh = read_int(chr2(17649:17652,:), 1, count);
  t.pidefovl = read_int(chr2(17653:17656,:), 1, count);
  t.pidefphasset = read_float(chr2(17657:17660,:), 1, count);
  t.pidefpostlabeldelay = read_float(chr2(17661:17664,:), 1, count);
  t.pidefproj = read_int(chr2(17665:17668,:), 1, count);
  t.pideframp = read_int(chr2(17669:17672,:), 1, count);
  t.pidefrbw = read_float(chr2(17673:17676,:), 1, count);
  t.pidefrtrep = read_int(chr2(17677:17680,:), 1, count);
  t.pidefslasset = read_float(chr2(17681:17684,:), 1, count);
  t.pidefslq = read_int(chr2(17685:17688,:), 1, count);
  t.pideftouchamp = read_int(chr2(17689:17692,:), 1, count);
  t.pideftouchax = read_int(chr2(17693:17696,:), 1, count);
  t.pideftouchcyc = read_int(chr2(17697:17700,:), 1, count);
  t.pideftouchfreq = read_int(chr2(17701:17704,:), 1, count);
  t.pideftouchmegfreq = read_int(chr2(17705:17708,:), 1, count);
  t.pideftouchtphases = read_int(chr2(17709:17712,:), 1, count);
  t.pidfmonfov = read_float(chr2(17713:17716,:), 1, count);
  t.pidfmonthick = read_float(chr2(17717:17720,:), 1, count);
  t.pidiatdel1 = read_int(chr2(17721:17724,:), 1, count);
  t.pidifavgnex = read_float(chr2(17725:17728,:), 1, count);
  t.pidifaxnub = read_int(chr2(17729:17732,:), 1, count);
  t.pidiffmode = read_int(chr2(17733:17736,:), 1, count);
  t.pidiffproctype = read_int(chr2(17737:17740,:), 1, count);
  t.pidifnext2nub = read_int(chr2(17741:17744,:), 1, count);
  t.pidifnext2val2 = read_float(chr2(17745:17748,:), 1, count);
  t.pidifnext2val3 = read_float(chr2(17749:17752,:), 1, count);
  t.pidifnext2val4 = read_float(chr2(17753:17756,:), 1, count);
  t.pidifnext2val5 = read_float(chr2(17757:17760,:), 1, count);
  t.pidifnext2val6 = read_float(chr2(17761:17764,:), 1, count);
  t.pidifnextab = read_int(chr2(17765:17768,:), 1, count);
  t.pidifnumdirsdefval = read_int(chr2(17769:17772,:), 1, count);
  t.pidifnumdirsnub = read_int(chr2(17773:17776,:), 1, count);
  t.pidifnumdirsval2 = read_int(chr2(17777:17780,:), 1, count);
  t.pidifnumdirsval3 = read_int(chr2(17781:17784,:), 1, count);
  t.pidifnumdirsval4 = read_int(chr2(17785:17788,:), 1, count);
  t.pidifnumt2defval = read_int(chr2(17789:17792,:), 1, count);
  t.pidifnumt2nub = read_int(chr2(17793:17796,:), 1, count);
  t.pidifnumt2val2 = read_int(chr2(17797:17800,:), 1, count);
  t.pidifnumt2val3 = read_int(chr2(17801:17804,:), 1, count);
  t.pidifnumt2val4 = read_int(chr2(17805:17808,:), 1, count);
  t.pidifpage = read_int(chr2(17809:17812,:), 1, count);
  t.pidifrecnub = read_int(chr2(17813:17816,:), 1, count);
  t.pidixproc = read_int(chr2(17817:17820,:), 1, count);
  t.pidltime = read_int(chr2(17821:17824,:), 1, count);
  t.pidmode = read_int(chr2(17825:17828,:), 1, count);
  t.pidoshim = read_int(chr2(17829:17832,:), 1, count);
  t.pidotg = read_int(chr2(17833:17836,:), 1, count);
  t.pidrivemodenub = read_int(chr2(17837:17840,:), 1, count);
  t.pidualspinechonub = read_int(chr2(17841:17844,:), 1, count);
  t.pidyntgnub = read_int(chr2(17845:17848,:), 1, count);
  t.piechdefval = read_int(chr2(17849:17852,:), 1, count);
  t.piechnub = read_int(chr2(17853:17856,:), 1, count);
  t.piechval2 = read_int(chr2(17857:17860,:), 1, count);
  t.piechval3 = read_int(chr2(17861:17864,:), 1, count);
  t.piechval4 = read_int(chr2(17865:17868,:), 1, count);
  t.piechval5 = read_int(chr2(17869:17872,:), 1, count);
  t.piechval6 = read_int(chr2(17873:17876,:), 1, count);
  t.pieffbladewidth = read_int(chr2(17877:17880,:), 1, count);
  t.pieffbladewidthdefval = read_int(chr2(17881:17884,:), 1, count);
  t.pieffbladewidthnub = read_int(chr2(17885:17888,:), 1, count);
  t.piesar = read_float(chr2(17889:17892,:), 1, count);
  t.piesp = read_int(chr2(17893:17896,:), 1, count);
  t.pietlnub = read_int(chr2(17897:17900,:), 1, count);
  t.pietlval2 = read_int(chr2(17901:17904,:), 1, count);
  t.pietlval3 = read_int(chr2(17905:17908,:), 1, count);
  t.pietlval4 = read_int(chr2(17909:17912,:), 1, count);
  t.pietlval5 = read_int(chr2(17913:17916,:), 1, count);
  t.pietlval6 = read_int(chr2(17917:17920,:), 1, count);
  t.pietr = read_int(chr2(17921:17924,:), 1, count);
  t.piexcitemodenub = read_int(chr2(17925:17928,:), 1, count);
  t.pifamode = read_int(chr2(17929:17932,:), 1, count);
  t.pifanub = read_int(chr2(17933:17936,:), 1, count);
  t.pifaval2 = read_int(chr2(17937:17940,:), 1, count);
  t.pifaval3 = read_int(chr2(17941:17944,:), 1, count);
  t.pifaval4 = read_int(chr2(17945:17948,:), 1, count);
  t.pifaval5 = read_int(chr2(17949:17952,:), 1, count);
  t.pifaval6 = read_int(chr2(17953:17956,:), 1, count);
  t.pifcinedefval = read_int(chr2(17957:17960,:), 1, count);
  t.pifcinenub = read_int(chr2(17961:17964,:), 1, count);
  t.pifcineval2 = read_int(chr2(17965:17968,:), 1, count);
  t.pifcineval3 = read_int(chr2(17969:17972,:), 1, count);
  t.pifcineval4 = read_int(chr2(17973:17976,:), 1, count);
  t.pifilt4 = read_int(chr2(17977:17980,:), 1, count);
  t.pifilt5 = read_int(chr2(17981:17984,:), 1, count);
  t.pifilt6 = read_int(chr2(17985:17988,:), 1, count);
  t.pifilt7 = read_int(chr2(17989:17992,:), 1, count);
  t.piflanub = read_int(chr2(17993:17996,:), 1, count);
  t.piflosup = read_int(chr2(17997:18000,:), 1, count);
  t.piflrcnub = read_int(chr2(18001:18004,:), 1, count);
  t.pifmriscrn = read_int(chr2(18005:18008,:), 1, count);
  t.piforkvrgf = read_int(chr2(18009:18012,:), 1, count);
  t.pifovnub = read_int(chr2(18013:18016,:), 1, count);
  t.pifovval2 = read_float(chr2(18017:18020,:), 1, count);
  t.pifovval3 = read_float(chr2(18021:18024,:), 1, count);
  t.pifovval4 = read_float(chr2(18025:18028,:), 1, count);
  t.pifovval5 = read_float(chr2(18029:18032,:), 1, count);
  t.pifovval6 = read_float(chr2(18033:18036,:), 1, count);
  t.pifphasenub = read_int(chr2(18037:18040,:), 1, count);
  t.pifphaseval2 = read_int(chr2(18041:18044,:), 1, count);
  t.pifphaseval3 = read_int(chr2(18045:18048,:), 1, count);
  t.pifphaseval4 = read_int(chr2(18049:18052,:), 1, count);
  t.pifphaseval5 = read_int(chr2(18053:18056,:), 1, count);
  t.pifphaseval6 = read_int(chr2(18057:18060,:), 1, count);
  t.pifractecho = read_float(chr2(18061:18064,:), 1, count);
  t.piframerate = read_float(chr2(18065:18068,:), 1, count);
  t.piframeratenub = read_int(chr2(18069:18072,:), 1, count);
  t.pifreqfovnub = read_int(chr2(18073:18076,:), 1, count);
  t.pifsefcnub = read_int(chr2(18077:18080,:), 1, count);
  t.pigeosrot = read_int(chr2(18081:18084,:), 1, count);
  t.pigirdefthick = read_float(chr2(18085:18088,:), 1, count);
  t.pigirmode = read_int(chr2(18089:18092,:), 1, count);
  t.pigirscrn = read_int(chr2(18093:18096,:), 1, count);
  t.pigradcoil = read_int(chr2(18097:18100,:), 1, count);
  t.piharmonizenub = read_int(chr2(18101:18104,:), 1, count);
  t.pihoeccnub = read_int(chr2(18105:18108,:), 1, count);
  t.pihoeccvis = read_int(chr2(18109:18112,:), 1, count);
  t.pihrepnub = read_int(chr2(18113:18116,:), 1, count);
  t.pihrepval2 = read_int(chr2(18117:18120,:), 1, count);
  t.pihrepval3 = read_int(chr2(18121:18124,:), 1, count);
  t.pihrepval4 = read_int(chr2(18125:18128,:), 1, count);
  t.pihrepval5 = read_int(chr2(18129:18132,:), 1, count);
  t.pihrepval6 = read_int(chr2(18133:18136,:), 1, count);
  t.pihsar = read_float(chr2(18137:18140,:), 1, count);
  t.piimages = read_int(chr2(18141:18144,:), 1, count);
  t.piimgoptlist = read_int(chr2(18145:18148,:), 1, count);
  t.piimgoptval2 = read_int(chr2(18149:18152,:), 1, count);
  t.piimgoptval3 = read_int(chr2(18153:18156,:), 1, count);
  t.piimgoptval4 = read_int(chr2(18157:18160,:), 1, count);
  t.piinitstatnub = read_int(chr2(18161:18164,:), 1, count);
  t.piinplaneres = read_int(chr2(18165:18168,:), 1, count);
  t.piinrangetrmax = read_int(chr2(18169:18172,:), 1, count);
  t.piinrangetrmin = read_int(chr2(18173:18176,:), 1, count);
  t.piinvertfnub = read_int(chr2(18177:18180,:), 1, count);
  t.piinvertfvis = read_int(chr2(18181:18184,:), 1, count);
  t.piisil = read_int(chr2(18185:18188,:), 1, count);
  t.piisnub = read_int(chr2(18189:18192,:), 1, count);
  t.piisval2 = read_float(chr2(18193:18196,:), 1, count);
  t.piisval3 = read_float(chr2(18197:18200,:), 1, count);
  t.piisval4 = read_float(chr2(18201:18204,:), 1, count);
  t.piisval5 = read_float(chr2(18205:18208,:), 1, count);
  t.piisval6 = read_float(chr2(18209:18212,:), 1, count);
  t.piisvaldef = read_float(chr2(18213:18216,:), 1, count);
  t.pikt = read_int(chr2(18217:18220,:), 1, count);
  t.pilandmark = read_float(chr2(18221:18224,:), 1, count);
  t.pilocnub = read_int(chr2(18225:18228,:), 1, count);
  t.pilocval2 = read_int(chr2(18229:18232,:), 1, count);
  t.pilocval3 = read_int(chr2(18233:18236,:), 1, count);
  t.pilocval4 = read_int(chr2(18237:18240,:), 1, count);
  t.pilocval5 = read_int(chr2(18241:18244,:), 1, count);
  t.pilocval6 = read_int(chr2(18245:18248,:), 1, count);
  t.pimb = read_int(chr2(18249:18252,:), 1, count);
  t.pimintedifdef = read_int(chr2(18253:18256,:), 1, count);
  t.pimintedifnub = read_int(chr2(18257:18260,:), 1, count);
  t.pimixtime = read_int(chr2(18261:18264,:), 1, count);
  t.pimonfovnub = read_int(chr2(18265:18268,:), 1, count);
  t.pimonfovval2 = read_float(chr2(18269:18272,:), 1, count);
  t.pimonfovval3 = read_float(chr2(18273:18276,:), 1, count);
  t.pimonfovval4 = read_float(chr2(18277:18280,:), 1, count);
  t.pimonitor = read_int(chr2(18281:18284,:), 1, count);
  t.pimonthicknub = read_int(chr2(18285:18288,:), 1, count);
  t.pimonthickval2 = read_float(chr2(18289:18292,:), 1, count);
  t.pimonthickval3 = read_float(chr2(18293:18296,:), 1, count);
  t.pimonthickval4 = read_float(chr2(18297:18300,:), 1, count);
  t.pimphscrn = read_int(chr2(18301:18304,:), 1, count);
  t.pimrsaps1 = read_int(chr2(18305:18308,:), 1, count);
  t.pimrsaps10 = read_int(chr2(18309:18312,:), 1, count);
  t.pimrsaps11 = read_int(chr2(18313:18316,:), 1, count);
  t.pimrsaps12 = read_int(chr2(18317:18320,:), 1, count);
  t.pimrsaps13 = read_int(chr2(18321:18324,:), 1, count);
  t.pimrsaps14 = read_int(chr2(18325:18328,:), 1, count);
  t.pimrsaps15 = read_int(chr2(18329:18332,:), 1, count);
  t.pimrsaps2 = read_int(chr2(18333:18336,:), 1, count);
  t.pimrsaps3 = read_int(chr2(18337:18340,:), 1, count);
  t.pimrsaps4 = read_int(chr2(18341:18344,:), 1, count);
  t.pimrsaps5 = read_int(chr2(18345:18348,:), 1, count);
  t.pimrsaps6 = read_int(chr2(18349:18352,:), 1, count);
  t.pimrsaps7 = read_int(chr2(18353:18356,:), 1, count);
  t.pimrsaps8 = read_int(chr2(18357:18360,:), 1, count);
  t.pimrsaps9 = read_int(chr2(18361:18364,:), 1, count);
  t.pimrsapsflg = read_int(chr2(18365:18368,:), 1, count);
  t.pimscan = read_float(chr2(18369:18372,:), 1, count);
  t.pimsdeaxnub = read_int(chr2(18373:18376,:), 1, count);
  t.pimultigroup = read_int(chr2(18377:18380,:), 1, count);
  t.pimultislab = read_int(chr2(18381:18384,:), 1, count);
  t.pimultistation = read_int(chr2(18385:18388,:), 1, count);
  t.pinavaccwinnub = read_int(chr2(18389:18392,:), 1, count);
  t.pinavaccwinval2 = read_int(chr2(18393:18396,:), 1, count);
  t.pinavaccwinval3 = read_int(chr2(18397:18400,:), 1, count);
  t.pinavaccwinval4 = read_int(chr2(18401:18404,:), 1, count);
  t.pinavautoaccwinnub = read_int(chr2(18405:18408,:), 1, count);
  t.pinavautotrigtimenub = read_int(chr2(18409:18412,:), 1, count);
  t.pinavmaxintervalnub = read_int(chr2(18425:18428,:), 1, count);
  t.pinavmaxintervalval2 = read_int(chr2(18429:18432,:), 1, count);
  t.pinavmaxintervalval3 = read_int(chr2(18433:18436,:), 1, count);
  t.pinavmaxintervalval4 = read_int(chr2(18437:18440,:), 1, count);
  t.pinavmaxrr = read_float(chr2(18441:18444,:), 1, count);
  t.pinavpscpausenub = read_int(chr2(18445:18448,:), 1, count);
  t.pinavpsctimenub = read_int(chr2(18449:18452,:), 1, count);
  t.pinavrradjust = read_int(chr2(18465:18468,:), 1, count);
  t.pinavrrmeasmaxsl = read_int(chr2(18469:18472,:), 1, count);
  t.pinavrrmeasnub = read_int(chr2(18473:18476,:), 1, count);
  t.pinavrrmeasrtrep = read_int(chr2(18477:18480,:), 1, count);
  t.pinavrrmeastimenub = read_int(chr2(18481:18484,:), 1, count);
  t.pinavsigenhancenub = read_int(chr2(18497:18500,:), 1, count);
  t.pinavsltracknub = read_int(chr2(18501:18504,:), 1, count);
  t.pinavtypenub = read_int(chr2(18505:18508,:), 1, count);
  t.pinbh = read_int(chr2(18509:18512,:), 1, count);
  t.pinbhnub = read_int(chr2(18513:18516,:), 1, count);
  t.pinecho = read_int(chr2(18517:18520,:), 1, count);
  t.pinex = read_int(chr2(18521:18524,:), 1, count);
  t.pinexnub = read_int(chr2(18525:18528,:), 1, count);
  t.pinexval2 = read_float(chr2(18529:18532,:), 1, count);
  t.pinexval3 = read_float(chr2(18533:18536,:), 1, count);
  t.pinexval4 = read_float(chr2(18537:18540,:), 1, count);
  t.pinexval5 = read_float(chr2(18541:18544,:), 1, count);
  t.pinexval6 = read_float(chr2(18545:18548,:), 1, count);
  t.pinoadc = read_int(chr2(18549:18552,:), 1, count);
  t.pinofreqoffset = read_int(chr2(18553:18556,:), 1, count);
  t.pinolr = read_int(chr2(18557:18560,:), 1, count);
  t.pinsegnub = read_int(chr2(18561:18564,:), 1, count);
  t.pinsegval2 = read_int(chr2(18565:18568,:), 1, count);
  t.pinsegval3 = read_int(chr2(18569:18572,:), 1, count);
  t.pinsegval4 = read_int(chr2(18573:18576,:), 1, count);
  t.pinsegval5 = read_int(chr2(18577:18580,:), 1, count);
  t.pinslices = read_int(chr2(18581:18584,:), 1, count);
  t.pinspokesdefval = read_int(chr2(18585:18588,:), 1, count);
  t.pinspokesnub = read_int(chr2(18589:18592,:), 1, count);
  t.pinspokesstep = read_int(chr2(18593:18596,:), 1, count);
  t.pinspokesval2 = read_int(chr2(18597:18600,:), 1, count);
  t.pinspokesval3 = read_int(chr2(18601:18604,:), 1, count);
  t.pinspokesval4 = read_int(chr2(18605:18608,:), 1, count);
  t.pinspokesval5 = read_int(chr2(18609:18612,:), 1, count);
  t.pinspokesval6 = read_int(chr2(18613:18616,:), 1, count);
  t.pinumartlevels = read_int(chr2(18617:18620,:), 1, count);
  t.pinumbnub = read_int(chr2(18621:18624,:), 1, count);
  t.pinumbval2 = read_int(chr2(18625:18628,:), 1, count);
  t.pinumbval3 = read_int(chr2(18629:18632,:), 1, count);
  t.pinumbval4 = read_int(chr2(18633:18636,:), 1, count);
  t.pinumbval5 = read_int(chr2(18637:18640,:), 1, count);
  t.pinumbval6 = read_int(chr2(18641:18644,:), 1, count);
  t.pinumgir = read_int(chr2(18645:18648,:), 1, count);
  t.pinumsynbnub = read_int(chr2(18649:18652,:), 1, count);
  t.pinumsynbval2 = read_int(chr2(18653:18656,:), 1, count);
  t.pinumsynbval3 = read_int(chr2(18657:18660,:), 1, count);
  t.pinumsynbval4 = read_int(chr2(18661:18664,:), 1, count);
  t.pinumsynbval5 = read_int(chr2(18665:18668,:), 1, count);
  t.pinumsynbval6 = read_int(chr2(18669:18672,:), 1, count);
  t.pioverlap = read_int(chr2(18673:18676,:), 1, count);
  t.pioversamplingfactordefval = read_float(chr2(18677:18680,:), 1, count);
  t.pioversamplingfactornub = read_int(chr2(18681:18684,:), 1, count);
  t.pioversamplingfactorval2 = read_float(chr2(18685:18688,:), 1, count);
  t.pioversamplingfactorval3 = read_float(chr2(18689:18692,:), 1, count);
  t.pioversamplingfactorval4 = read_float(chr2(18693:18696,:), 1, count);
  t.pioversamplingfactorval5 = read_float(chr2(18697:18700,:), 1, count);
  t.pioversamplingfactorval6 = read_float(chr2(18701:18704,:), 1, count);
  t.piovlnub = read_int(chr2(18705:18708,:), 1, count);
  t.pipaunub = read_int(chr2(18709:18712,:), 1, count);
  t.pipautype = read_int(chr2(18713:18716,:), 1, count);
  t.pipauval2 = read_int(chr2(18717:18720,:), 1, count);
  t.pipauval3 = read_int(chr2(18721:18724,:), 1, count);
  t.pipauval4 = read_int(chr2(18725:18728,:), 1, count);
  t.pipauval5 = read_int(chr2(18729:18732,:), 1, count);
  t.pipauval6 = read_int(chr2(18733:18736,:), 1, count);
  t.pipctovl = read_int(chr2(18737:18740,:), 1, count);
  t.pipdhs_active = read_int(chr2(18741:18744,:), 1, count);
  t.piphaseimagenub = read_int(chr2(18745:18748,:), 1, count);
  t.piphaseimageval2 = read_int(chr2(18749:18752,:), 1, count);
  t.piphaseimageval3 = read_int(chr2(18753:18756,:), 1, count);
  t.piphaseimageval4 = read_int(chr2(18757:18760,:), 1, count);
  t.piphasenub = read_int(chr2(18761:18764,:), 1, count);
  t.piphasfovnub = read_int(chr2(18765:18768,:), 1, count);
  t.piphasfovnub2 = read_int(chr2(18769:18772,:), 1, count);
  t.piphasfovval1 = read_float(chr2(18773:18776,:), 1, count);
  t.piphasfovval2 = read_float(chr2(18777:18780,:), 1, count);
  t.piphasfovval3 = read_float(chr2(18781:18784,:), 1, count);
  t.piphasfovval4 = read_float(chr2(18785:18788,:), 1, count);
  t.piphasfovval5 = read_float(chr2(18789:18792,:), 1, count);
  t.piphasfovval6 = read_float(chr2(18793:18796,:), 1, count);
  t.piphassetnub = read_int(chr2(18797:18800,:), 1, count);
  t.piphassetval1 = read_float(chr2(18801:18804,:), 1, count);
  t.piphassetval2 = read_float(chr2(18805:18808,:), 1, count);
  t.piphassetval3 = read_float(chr2(18809:18812,:), 1, count);
  t.piphassetval4 = read_float(chr2(18813:18816,:), 1, count);
  t.piphslnub = read_int(chr2(18817:18820,:), 1, count);
  t.pipostlabeldelay2 = read_float(chr2(18821:18824,:), 1, count);
  t.pipostlabeldelay3 = read_float(chr2(18825:18828,:), 1, count);
  t.pipostlabeldelay4 = read_float(chr2(18829:18832,:), 1, count);
  t.pipostlabeldelay5 = read_float(chr2(18833:18836,:), 1, count);
  t.pipostlabeldelay6 = read_float(chr2(18837:18840,:), 1, count);
  t.pipostlabeldelaynub = read_int(chr2(18841:18844,:), 1, count);
  t.piprojnub = read_int(chr2(18845:18848,:), 1, count);
  t.pipsar = read_float(chr2(18849:18852,:), 1, count);
  t.pipscdef = read_int(chr2(18853:18856,:), 1, count);
  t.pipscoptnub = read_int(chr2(18857:18860,:), 1, count);
  t.pipscshimtgnub = read_int(chr2(18861:18864,:), 1, count);
  t.pipscvol = read_int(chr2(18865:18868,:), 1, count);
  t.pipsdtrignub = read_int(chr2(18869:18872,:), 1, count);
  t.pipure = read_int(chr2(18873:18876,:), 1, count);
  t.pirampnub = read_int(chr2(18877:18880,:), 1, count);
  t.pirbwpage = read_int(chr2(18881:18884,:), 1, count);
  t.pirbwperpix = read_int(chr2(18885:18888,:), 1, count);
  t.pircb2nub = read_int(chr2(18889:18892,:), 1, count);
  t.pircb2val2 = read_float(chr2(18893:18896,:), 1, count);
  t.pircb2val3 = read_float(chr2(18897:18900,:), 1, count);
  t.pircb2val4 = read_float(chr2(18901:18904,:), 1, count);
  t.pircb2val5 = read_float(chr2(18905:18908,:), 1, count);
  t.pircb2val6 = read_float(chr2(18909:18912,:), 1, count);
  t.pircbnub = read_int(chr2(18913:18916,:), 1, count);
  t.pircbval2 = read_float(chr2(18917:18920,:), 1, count);
  t.pircbval3 = read_float(chr2(18921:18924,:), 1, count);
  t.pircbval4 = read_float(chr2(18925:18928,:), 1, count);
  t.pircbval5 = read_float(chr2(18929:18932,:), 1, count);
  t.pircbval6 = read_float(chr2(18933:18936,:), 1, count);
  t.pireconlag = read_float(chr2(18937:18940,:), 1, count);
  t.pirepactivenub = read_int(chr2(18941:18944,:), 1, count);
  t.pireprestnub = read_int(chr2(18945:18948,:), 1, count);
  t.piresol = read_int(chr2(18949:18952,:), 1, count);
  t.pirlcsi = read_int(chr2(18953:18956,:), 1, count);
  t.piroigrx = read_int(chr2(18957:18960,:), 1, count);
  t.pirtait = read_int(chr2(18961:18964,:), 1, count);
  t.pirtb0nub = read_int(chr2(18965:18968,:), 1, count);
  t.pirtb0vis = read_int(chr2(18969:18972,:), 1, count);
  t.pirtetr = read_int(chr2(18973:18976,:), 1, count);
  t.pirtpointnub = read_int(chr2(18977:18980,:), 1, count);
  t.pirtpointval2 = read_int(chr2(18981:18984,:), 1, count);
  t.pirtpointval3 = read_int(chr2(18985:18988,:), 1, count);
  t.pirtpointval4 = read_int(chr2(18989:18992,:), 1, count);
  t.pirtpointval5 = read_int(chr2(18993:18996,:), 1, count);
  t.pirtpointval6 = read_int(chr2(18997:19000,:), 1, count);
  t.pirtratenub = read_int(chr2(19001:19004,:), 1, count);
  t.pirtrepnub = read_int(chr2(19005:19008,:), 1, count);
  t.pirtrepval2 = read_int(chr2(19009:19012,:), 1, count);
  t.pirtrepval3 = read_int(chr2(19013:19016,:), 1, count);
  t.pirtrepval4 = read_int(chr2(19017:19020,:), 1, count);
  t.pirtrepval5 = read_int(chr2(19021:19024,:), 1, count);
  t.pirtrepval6 = read_int(chr2(19025:19028,:), 1, count);
  t.pirtrigwinnub = read_int(chr2(19029:19032,:), 1, count);
  t.pirtseqnub = read_int(chr2(19033:19036,:), 1, count);
  t.pirttseq = read_int(chr2(19037:19040,:), 1, count);
  t.pirtwindefval = read_int(chr2(19041:19044,:), 1, count);
  t.pirtwinval2 = read_int(chr2(19045:19048,:), 1, count);
  t.pirtwinval3 = read_int(chr2(19049:19052,:), 1, count);
  t.pirtwinval4 = read_int(chr2(19053:19056,:), 1, count);
  t.pirtwinval5 = read_int(chr2(19057:19060,:), 1, count);
  t.pirtwinval6 = read_int(chr2(19061:19064,:), 1, count);
  t.pisatnub = read_int(chr2(19065:19068,:), 1, count);
  t.pisatthick = read_int(chr2(19069:19072,:), 1, count);
  t.pisatthickx = read_int(chr2(19073:19076,:), 1, count);
  t.pisatthicky = read_int(chr2(19077:19080,:), 1, count);
  t.pisatthickz = read_int(chr2(19081:19084,:), 1, count);
  t.pisaveinter = read_int(chr2(19085:19088,:), 1, count);
  t.piscan_distance_toh = read_float(chr2(19089:19092,:), 1, count);
  t.piscancenter = read_float(chr2(19093:19096,:), 1, count);
  t.piscran = read_int(chr2(19097:19100,:), 1, count);
  t.pisctim = read_int(chr2(19101:19104,:), 1, count);
  t.pisctim1 = read_float(chr2(19105:19108,:), 1, count);
  t.pisctim2 = read_float(chr2(19109:19112,:), 1, count);
  t.pisctim3 = read_float(chr2(19113:19116,:), 1, count);
  t.pisctim4 = read_float(chr2(19117:19120,:), 1, count);
  t.pisctim5 = read_float(chr2(19121:19124,:), 1, count);
  t.pisctim6 = read_float(chr2(19125:19128,:), 1, count);
  t.piseparatesynbnub = read_int(chr2(19129:19132,:), 1, count);
  t.piserperph = read_int(chr2(19133:19136,:), 1, count);
  t.pisetup = read_int(chr2(19137:19140,:), 1, count);
  t.pishim2 = read_int(chr2(19141:19144,:), 1, count);
  t.pishldctrl = read_int(chr2(19145:19148,:), 1, count);
  t.pishotnub = read_int(chr2(19149:19152,:), 1, count);
  t.pishotval2 = read_int(chr2(19153:19156,:), 1, count);
  t.pishotval3 = read_int(chr2(19157:19160,:), 1, count);
  t.pishotval4 = read_int(chr2(19161:19164,:), 1, count);
  t.pishotval5 = read_int(chr2(19165:19168,:), 1, count);
  t.pishotval6 = read_int(chr2(19169:19172,:), 1, count);
  t.pisicsi = read_int(chr2(19173:19176,:), 1, count);
  t.pisilentmr = read_int(chr2(19177:19180,:), 1, count);
  t.pisioverlap = read_int(chr2(19181:19184,:), 1, count);
  t.pislassetnub = read_int(chr2(19185:19188,:), 1, count);
  t.pislassetval1 = read_float(chr2(19189:19192,:), 1, count);
  t.pislassetval2 = read_float(chr2(19193:19196,:), 1, count);
  t.pislassetval3 = read_float(chr2(19197:19200,:), 1, count);
  t.pislassetval4 = read_float(chr2(19201:19204,:), 1, count);
  t.pislblank = read_int(chr2(19205:19208,:), 1, count);
  t.pisldelnub = read_int(chr2(19209:19212,:), 1, count);
  t.pisldelval3 = read_int(chr2(19213:19216,:), 1, count);
  t.pisldelval4 = read_int(chr2(19217:19220,:), 1, count);
  t.pisldelval5 = read_int(chr2(19221:19224,:), 1, count);
  t.pisldelval6 = read_int(chr2(19225:19228,:), 1, count);
  t.pisliceordnub = read_int(chr2(19229:19232,:), 1, count);
  t.pislqnub = read_int(chr2(19233:19236,:), 1, count);
  t.pislquant = read_int(chr2(19237:19240,:), 1, count);
  t.pislqval2 = read_int(chr2(19241:19244,:), 1, count);
  t.pislqval3 = read_int(chr2(19245:19248,:), 1, count);
  t.pislqval4 = read_int(chr2(19249:19252,:), 1, count);
  t.pislqval5 = read_int(chr2(19253:19256,:), 1, count);
  t.pislthicklabel = read_int(chr2(19257:19260,:), 1, count);
  t.pislthickstep = read_float(chr2(19261:19264,:), 1, count);
  t.pismode = read_int(chr2(19265:19268,:), 1, count);
  t.pispecprescan = read_int(chr2(19269:19272,:), 1, count);
  t.pispssupnub = read_int(chr2(19273:19276,:), 1, count);
  t.pistnub = read_int(chr2(19277:19280,:), 1, count);
  t.pistval2 = read_float(chr2(19281:19284,:), 1, count);
  t.pistval3 = read_float(chr2(19285:19288,:), 1, count);
  t.pistval4 = read_float(chr2(19289:19292,:), 1, count);
  t.pistval5 = read_float(chr2(19293:19296,:), 1, count);
  t.pistval6 = read_float(chr2(19297:19300,:), 1, count);
  t.pisupnub = read_int(chr2(19301:19304,:), 1, count);
  t.piswapfc = read_int(chr2(19305:19308,:), 1, count);
  t.pisynbvalstab = read_int(chr2(19309:19312,:), 1, count);
  t.pisystdel1 = read_int(chr2(19313:19316,:), 1, count);
  t.pit2preptedefval = read_int(chr2(19317:19320,:), 1, count);
  t.pit2preptenub = read_int(chr2(19321:19324,:), 1, count);
  t.pit2prepteval2 = read_int(chr2(19325:19328,:), 1, count);
  t.pit2prepteval3 = read_int(chr2(19329:19332,:), 1, count);
  t.pit2prepteval4 = read_int(chr2(19333:19336,:), 1, count);
  t.pit2prepteval5 = read_int(chr2(19337:19340,:), 1, count);
  t.pit2prepteval6 = read_int(chr2(19341:19344,:), 1, count);
  t.pitablemaxaccel = read_int(chr2(19345:19348,:), 1, count);
  t.pitablemaxdecel = read_int(chr2(19349:19352,:), 1, count);
  t.pitablemaxspeed = read_int(chr2(19353:19356,:), 1, count);
  t.pitableposition = read_float(chr2(19357:19360,:), 1, count);
  t.pitagangledefval = read_float(chr2(19361:19364,:), 1, count);
  t.pitaganglenub = read_int(chr2(19365:19368,:), 1, count);
  t.pitagangleval2 = read_float(chr2(19369:19372,:), 1, count);
  t.pitagangleval3 = read_float(chr2(19373:19376,:), 1, count);
  t.pitagangleval4 = read_float(chr2(19377:19380,:), 1, count);
  t.pitagangleval5 = read_float(chr2(19381:19384,:), 1, count);
  t.pitagangleval6 = read_float(chr2(19385:19388,:), 1, count);
  t.pitagging = read_int(chr2(19389:19392,:), 1, count);
  t.pitagspcdefval = read_int(chr2(19393:19396,:), 1, count);
  t.pitagspcval2 = read_int(chr2(19397:19400,:), 1, count);
  t.pitagspcval3 = read_int(chr2(19401:19404,:), 1, count);
  t.pitagspcval4 = read_int(chr2(19405:19408,:), 1, count);
  t.pitbh = read_float(chr2(19409:19412,:), 1, count);
  t.pitbhlast = read_float(chr2(19413:19416,:), 1, count);
  t.pitdel1 = read_int(chr2(19417:19420,:), 1, count);
  t.pitdel1nub = read_int(chr2(19421:19424,:), 1, count);
  t.pitdel1type = read_int(chr2(19425:19428,:), 1, count);
  t.pite1nub = read_int(chr2(19429:19432,:), 1, count);
  t.pite1val2 = read_int(chr2(19433:19436,:), 1, count);
  t.pite1val3 = read_int(chr2(19437:19440,:), 1, count);
  t.pite1val4 = read_int(chr2(19441:19444,:), 1, count);
  t.pite1val5 = read_int(chr2(19445:19448,:), 1, count);
  t.pite1val6 = read_int(chr2(19449:19452,:), 1, count);
  t.pite2nub = read_int(chr2(19453:19456,:), 1, count);
  t.pite2type = read_int(chr2(19457:19460,:), 1, count);
  t.pite2val2 = read_int(chr2(19461:19464,:), 1, count);
  t.pite2val3 = read_int(chr2(19465:19468,:), 1, count);
  t.pite2val4 = read_int(chr2(19469:19472,:), 1, count);
  t.pite2val5 = read_int(chr2(19473:19476,:), 1, count);
  t.pite2val6 = read_int(chr2(19477:19480,:), 1, count);
  t.pitetr = read_int(chr2(19481:19484,:), 1, count);
  t.pitetype = read_int(chr2(19485:19488,:), 1, count);
  t.pitfeextra = read_int(chr2(19489:19492,:), 1, count);
  t.pitidefval = read_int(chr2(19493:19496,:), 1, count);
  t.pitinub = read_int(chr2(19497:19500,:), 1, count);
  t.pitissuet1defval = read_int(chr2(19501:19504,:), 1, count);
  t.pitissuet1nub = read_int(chr2(19505:19508,:), 1, count);
  t.pitissuet1val2 = read_int(chr2(19509:19512,:), 1, count);
  t.pitissuet1val3 = read_int(chr2(19513:19516,:), 1, count);
  t.pitissuet1val4 = read_int(chr2(19517:19520,:), 1, count);
  t.pitissuet1val5 = read_int(chr2(19521:19524,:), 1, count);
  t.pititle = read_int(chr2(19525:19528,:), 1, count);
  t.pititype = read_int(chr2(19529:19532,:), 1, count);
  t.pitival2 = read_int(chr2(19533:19536,:), 1, count);
  t.pitival3 = read_int(chr2(19537:19540,:), 1, count);
  t.pitival4 = read_int(chr2(19541:19544,:), 1, count);
  t.pitival5 = read_int(chr2(19545:19548,:), 1, count);
  t.pitival6 = read_int(chr2(19549:19552,:), 1, count);
  t.pitlabeldefval = read_int(chr2(19553:19556,:), 1, count);
  t.pitlabelnub = read_int(chr2(19557:19560,:), 1, count);
  t.pitlabelstep = read_int(chr2(19561:19564,:), 1, count);
  t.pitlabelval2 = read_int(chr2(19565:19568,:), 1, count);
  t.pitlabelval3 = read_int(chr2(19569:19572,:), 1, count);
  t.pitlabelval4 = read_int(chr2(19573:19576,:), 1, count);
  t.pitouch = read_int(chr2(19577:19580,:), 1, count);
  t.pitouchamp = read_int(chr2(19581:19584,:), 1, count);
  t.pitouchampnub = read_int(chr2(19585:19588,:), 1, count);
  t.pitouchampval2 = read_int(chr2(19589:19592,:), 1, count);
  t.pitouchampval3 = read_int(chr2(19593:19596,:), 1, count);
  t.pitouchampval4 = read_int(chr2(19597:19600,:), 1, count);
  t.pitouchaxnub = read_int(chr2(19601:19604,:), 1, count);
  t.pitouchaxval2 = read_int(chr2(19605:19608,:), 1, count);
  t.pitouchaxval3 = read_int(chr2(19609:19612,:), 1, count);
  t.pitouchaxval4 = read_int(chr2(19613:19616,:), 1, count);
  t.pitouchaxval5 = read_int(chr2(19617:19620,:), 1, count);
  t.pitouchcyc = read_int(chr2(19621:19624,:), 1, count);
  t.pitouchcycnub = read_int(chr2(19625:19628,:), 1, count);
  t.pitouchcycval2 = read_int(chr2(19629:19632,:), 1, count);
  t.pitouchcycval3 = read_int(chr2(19633:19636,:), 1, count);
  t.pitouchcycval4 = read_int(chr2(19637:19640,:), 1, count);
  t.pitouchfreq = read_int(chr2(19641:19644,:), 1, count);
  t.pitouchfreqnub = read_int(chr2(19645:19648,:), 1, count);
  t.pitouchfreqval2 = read_int(chr2(19649:19652,:), 1, count);
  t.pitouchfreqval3 = read_int(chr2(19653:19656,:), 1, count);
  t.pitouchfreqval4 = read_int(chr2(19657:19660,:), 1, count);
  t.pitouchmegfreqnub = read_int(chr2(19661:19664,:), 1, count);
  t.pitouchmegfreqval2 = read_int(chr2(19665:19668,:), 1, count);
  t.pitouchmegfreqval3 = read_int(chr2(19669:19672,:), 1, count);
  t.pitouchmegfreqval4 = read_int(chr2(19673:19676,:), 1, count);
  t.pitouchmenc = read_float(chr2(19677:19680,:), 1, count);
  t.pitouchtphases = read_int(chr2(19681:19684,:), 1, count);
  t.pitouchtphasesnub = read_int(chr2(19685:19688,:), 1, count);
  t.pitouchtphasesval2 = read_int(chr2(19689:19692,:), 1, count);
  t.pitouchtphasesval3 = read_int(chr2(19693:19696,:), 1, count);
  t.pitouchtphasesval4 = read_int(chr2(19697:19700,:), 1, count);
  t.pitphasenub = read_int(chr2(19701:19704,:), 1, count);
  t.pitphaseval2 = read_int(chr2(19705:19708,:), 1, count);
  t.pitphaseval3 = read_int(chr2(19709:19712,:), 1, count);
  t.pitphaseval4 = read_int(chr2(19713:19716,:), 1, count);
  t.pitphaseval5 = read_int(chr2(19717:19720,:), 1, count);
  t.pitphaseval6 = read_int(chr2(19721:19724,:), 1, count);
  t.pitr = read_int(chr2(19725:19728,:), 1, count);
  t.pitracqnub = read_int(chr2(19729:19732,:), 1, count);
  t.pitracqval2 = read_int(chr2(19733:19736,:), 1, count);
  t.pitracqval3 = read_int(chr2(19737:19740,:), 1, count);
  t.pitracqval4 = read_int(chr2(19741:19744,:), 1, count);
  t.pitracqval5 = read_int(chr2(19745:19748,:), 1, count);
  t.pitracqval6 = read_int(chr2(19749:19752,:), 1, count);
  t.pitrecoverydefval = read_int(chr2(19753:19756,:), 1, count);
  t.pitrecoverynub = read_int(chr2(19757:19760,:), 1, count);
  t.pitrecoverystep = read_int(chr2(19761:19764,:), 1, count);
  t.pitrecoveryval2 = read_int(chr2(19765:19768,:), 1, count);
  t.pitrecoveryval3 = read_int(chr2(19769:19772,:), 1, count);
  t.pitrecoveryval4 = read_int(chr2(19773:19776,:), 1, count);
  t.pitrecoveryval5 = read_int(chr2(19777:19780,:), 1, count);
  t.pitrecoveryval6 = read_int(chr2(19781:19784,:), 1, count);
  t.pitres = read_float(chr2(19785:19788,:), 1, count);
  t.pitres2 = read_float(chr2(19789:19792,:), 1, count);
  t.pitres2nub = read_int(chr2(19793:19796,:), 1, count);
  t.pitresnub = read_int(chr2(19797:19800,:), 1, count);
  t.pitricksdelnub = read_int(chr2(19801:19804,:), 1, count);
  t.pitricksdelval3 = read_int(chr2(19805:19808,:), 1, count);
  t.pitricksdelval4 = read_int(chr2(19809:19812,:), 1, count);
  t.pitricksdelval5 = read_int(chr2(19813:19816,:), 1, count);
  t.pitricksdelval6 = read_int(chr2(19817:19820,:), 1, count);
  t.pitrigwinnub = read_int(chr2(19821:19824,:), 1, count);
  t.pitrnub = read_int(chr2(19825:19828,:), 1, count);
  t.pitrval2 = read_int(chr2(19829:19832,:), 1, count);
  t.pitrval3 = read_int(chr2(19833:19836,:), 1, count);
  t.pitrval4 = read_int(chr2(19837:19840,:), 1, count);
  t.pitrval5 = read_int(chr2(19841:19844,:), 1, count);
  t.pitrval6 = read_int(chr2(19845:19848,:), 1, count);
  t.pitsar = read_float(chr2(19849:19852,:), 1, count);
  t.pitscan = read_float(chr2(19853:19856,:), 1, count);
  t.pitseq = read_int(chr2(19857:19860,:), 1, count);
  t.pitseqnub = read_int(chr2(19861:19864,:), 1, count);
  t.pitseqtype = read_int(chr2(19865:19868,:), 1, count);
  t.pitslice = read_float(chr2(19869:19872,:), 1, count);
  t.pitsp1 = read_int(chr2(19873:19876,:), 1, count);
  t.pitsp2 = read_int(chr2(19877:19880,:), 1, count);
  t.piuset = read_int(chr2(19881:19884,:), 1, count);
  t.piuset2 = read_int(chr2(19885:19888,:), 1, count);
  t.pivascop = read_int(chr2(19889:19892,:), 1, count);
  t.pivelnub = read_int(chr2(19893:19896,:), 1, count);
  t.pivestnub = read_int(chr2(19897:19900,:), 1, count);
  t.pivextras = read_int(chr2(19901:19904,:), 1, count);
  t.piviewordernub = read_int(chr2(19905:19908,:), 1, count);
  t.piviews = read_int(chr2(19909:19912,:), 1, count);
  t.piviewseg = read_int(chr2(19913:19916,:), 1, count);
  t.pivpsdef = read_int(chr2(19917:19920,:), 1, count);
  t.pivsphasenub = read_int(chr2(19921:19924,:), 1, count);
  t.pivsphaseval2 = read_int(chr2(19925:19928,:), 1, count);
  t.pivsphaseval3 = read_int(chr2(19929:19932,:), 1, count);
  t.pivsphaseval4 = read_int(chr2(19933:19936,:), 1, count);
  t.pivsphaseval5 = read_int(chr2(19937:19940,:), 1, count);
  t.pivsphaseval6 = read_int(chr2(19941:19944,:), 1, count);
  t.pivsscan = read_float(chr2(19945:19948,:), 1, count);
  t.pixmtband = read_int(chr2(19949:19952,:), 1, count);
  t.pixresnub = read_int(chr2(19953:19956,:), 1, count);
  t.pixresval2 = read_int(chr2(19957:19960,:), 1, count);
  t.pixresval3 = read_int(chr2(19961:19964,:), 1, count);
  t.pixresval4 = read_int(chr2(19965:19968,:), 1, count);
  t.pixresval5 = read_int(chr2(19969:19972,:), 1, count);
  t.pixresval6 = read_int(chr2(19973:19976,:), 1, count);
  t.piyresnub = read_int(chr2(19977:19980,:), 1, count);
  t.piyresval2 = read_int(chr2(19981:19984,:), 1, count);
  t.piyresval3 = read_int(chr2(19985:19988,:), 1, count);
  t.piyresval4 = read_int(chr2(19989:19992,:), 1, count);
  t.piyresval5 = read_int(chr2(19993:19996,:), 1, count);
  t.piyresval6 = read_int(chr2(19997:20000,:), 1, count);
  t.pizmult = read_int(chr2(20001:20004,:), 1, count);
  t.pizoom_index = read_int(chr2(20005:20008,:), 1, count);
  t.pos_hard180 = read_int(chr2(20009:20012,:), 1, count);
  t.pos_moment_start = read_int(chr2(20013:20016,:), 1, count);
  t.pos_msde_start = read_int(chr2(20017:20020,:), 1, count);
  t.pos_rfgir01 = read_int(chr2(20021:20024,:), 1, count);
  t.pos_rfgir02 = read_int(chr2(20025:20028,:), 1, count);
  t.pos_start = read_int(chr2(20029:20032,:), 1, count);
  t.pos_start_frir = read_int(chr2(20033:20036,:), 1, count);
  t.pos_start_gzk = read_int(chr2(20037:20040,:), 1, count);
  t.pos_start_ir = read_int(chr2(20041:20044,:), 1, count);
  t.pos_start_ir_min = read_int(chr2(20045:20048,:), 1, count);
  t.pos_start_killer_rfgir01 = read_int(chr2(20049:20052,:), 1, count);
  t.pos_start_killer_rfgir02 = read_int(chr2(20053:20056,:), 1, count);
  t.pos_start_rfgir01 = read_int(chr2(20057:20060,:), 1, count);
  t.pos_start_rfgir02 = read_int(chr2(20061:20064,:), 1, count);
  t.pospowerx = read_float(chr2(20065:20068,:), 1, count);
  t.pospowery = read_float(chr2(20069:20072,:), 1, count);
  t.pospowerz = read_float(chr2(20073:20076,:), 1, count);
  t.post_lobes = read_int(chr2(20077:20080,:), 1, count);
  t.post_osfp_weight = read_float(chr2(20081:20084,:), 1, count);
  t.powerx = read_float(chr2(20085:20088,:), 1, count);
  t.powery = read_float(chr2(20089:20092,:), 1, count);
  t.powerz = read_float(chr2(20093:20096,:), 1, count);
  t.pre_lobes = read_int(chr2(20097:20100,:), 1, count);
  t.pre_pass = read_int(chr2(20101:20104,:), 1, count);
  t.pre_rcvn_tr = read_int(chr2(20105:20108,:), 1, count);
  t.pre_slice = read_int(chr2(20109:20112,:), 1, count);
  t.predicted_TG = read_int(chr2(20113:20116,:), 1, count);
  t.premid_rf90 = read_int(chr2(20117:20120,:), 1, count);
  t.prep_dda = read_int(chr2(20121:20124,:), 1, count);
  t.presscfh = read_int(chr2(20125:20128,:), 1, count);
  t.presscfh_cgate = read_int(chr2(20129:20132,:), 1, count);
  t.presscfh_ctrl = read_int(chr2(20133:20136,:), 1, count);
  t.presscfh_debug = read_int(chr2(20137:20140,:), 1, count);
  t.presscfh_fov = read_float(chr2(20141:20144,:), 1, count);
  t.presscfh_fov_ratio = read_float(chr2(20145:20148,:), 1, count);
  t.presscfh_ir_noselect = read_int(chr2(20149:20152,:), 1, count);
  t.presscfh_ir_slthick = read_float(chr2(20153:20156,:), 1, count);
  t.presscfh_minfov_ratio = read_float(chr2(20157:20160,:), 1, count);
  t.presscfh_minte = read_int(chr2(20161:20164,:), 1, count);
  t.presscfh_outrange = read_int(chr2(20165:20168,:), 1, count);
  t.presscfh_override = read_int(chr2(20169:20172,:), 1, count);
  t.presscfh_pfov = read_float(chr2(20173:20176,:), 1, count);
  t.presscfh_pfov_ratio = read_float(chr2(20177:20180,:), 1, count);
  t.presscfh_slab_ratio = read_float(chr2(20181:20184,:), 1, count);
  t.presscfh_slice = read_float(chr2(20185:20188,:), 1, count);
  t.presscfh_slthick = read_float(chr2(20189:20192,:), 1, count);
  t.presscfh_wait_rf12 = read_int(chr2(20193:20196,:), 1, count);
  t.presscfh_wait_rf23 = read_int(chr2(20197:20200,:), 1, count);
  t.presscfh_wait_rf34 = read_int(chr2(20201:20204,:), 1, count);
  t.prevent_scan_under_emul = read_int(chr2(20205:20208,:), 1, count);
  t.product_rf = read_int(chr2(20209:20212,:), 1, count);
  t.profile_opvthick = read_float(chr2(20213:20216,:), 1, count);
  t.project = read_int(chr2(20217:20220,:), 1, count);
  t.ps1_newgeo = read_int(chr2(20221:20224,:), 1, count);
  t.ps1_rxcoil = read_int(chr2(20225:20228,:), 1, count);
  t.ps1_tr = read_int(chr2(20229:20232,:), 1, count);
  t.ps1loggrd = read_LOG_GRAD(chr2(20233:20532,:), 1, count);
  t.ps1obl_debug = read_int(chr2(20533:20536,:), 1, count);
  t.ps1scale = read_float(chr2(20537:20540,:), 1, count);
  t.ps2_dda = read_int(chr2(20541:20544,:), 1, count);
  t.ps2_dda_cal3d = read_int(chr2(20545:20548,:), 1, count);
  t.ps2_dda_time_cal3d = read_int(chr2(20549:20552,:), 1, count);
  t.ps_crusher_area = read_float(chr2(20553:20556,:), 1, count);
  t.pscahead = read_int(chr2(20557:20560,:), 1, count);
  t.psd_board_type = read_int(chr2(20561:20564,:), 1, count);
  t.psd_card_hdwr_delay = read_int(chr2(20565:20568,:), 1, count);
  t.psd_grd_wait = read_int(chr2(20569:20572,:), 1, count);
  t.psd_mantrig = read_int(chr2(20573:20576,:), 1, count);
  t.psd_pscshim = read_int(chr2(20577:20580,:), 1, count);
  t.psd_psctg = read_int(chr2(20581:20584,:), 1, count);
  t.psd_rf_wait = read_int(chr2(20585:20588,:), 1, count);
  t.psd_startta_override = read_int(chr2(20589:20592,:), 1, count);
  t.psd_taps = read_int(chr2(20593:20596,:), 1, count);
  t.psd_targetscale = read_float(chr2(20597:20600,:), 1, count);
  t.psd_tol_value = read_int(chr2(20601:20604,:), 1, count);
  t.psd_zero = read_float(chr2(20605:20608,:), 1, count);
  t.psdcrucial_debug = read_int(chr2(20609:20612,:), 1, count);
  t.psddebugcode = read_int(chr2(20613:20616,:), 1, count);
  t.psddebugcode2 = read_int(chr2(20617:20620,:), 1, count);
  t.psdtime_rfgir01 = read_int(chr2(20621:20624,:), 1, count);
  t.psdtime_rfgir01_iso = read_int(chr2(20625:20628,:), 1, count);
  t.psdtime_rfgir02 = read_int(chr2(20629:20632,:), 1, count);
  t.psdtime_rfgir02_iso = read_int(chr2(20633:20636,:), 1, count);
  t.pulsepos = read_int(chr2(20637:20640,:), 1, count);
  t.pure_mix_tx_scale = read_float(chr2(20641:20644,:), 1, count);
  t.pw1_eff = read_int(chr2(20645:20648,:), 1, count);
  t.pw2_eff = read_int(chr2(20649:20652,:), 1, count);
  t.pw_acqdtg1 = read_int(chr2(20653:20656,:), 1, count);
  t.pw_acqrs1 = read_int(chr2(20657:20660,:), 1, count);
  t.pw_bsrf = read_int(chr2(20661:20664,:), 1, count);
  t.pw_constant = read_int(chr2(20665:20668,:), 1, count);
  t.pw_contrfhubsel = read_int(chr2(20669:20672,:), 1, count);
  t.pw_contrfsel = read_int(chr2(20673:20676,:), 1, count);
  t.pw_csw_wait = read_int(chr2(20677:20680,:), 1, count);
  t.pw_dix_ssppost = read_int(chr2(20681:20684,:), 1, count);
  t.pw_dix_ssppre = read_int(chr2(20685:20688,:), 1, count);
  t.pw_dix_xpre = read_int(chr2(20689:20692,:), 1, count);
  t.pw_drcv = read_int(chr2(20693:20696,:), 1, count);
  t.pw_gate_isi = read_int(chr2(20697:20700,:), 1, count);
  t.pw_gks = read_int(chr2(20701:20704,:), 1, count);
  t.pw_gx1 = read_int(chr2(20705:20708,:), 1, count);
  t.pw_gx1_frac = read_int(chr2(20709:20712,:), 1, count);
  t.pw_gx1_full = read_int(chr2(20713:20716,:), 1, count);
  t.pw_gx1a = read_int(chr2(20717:20720,:), 1, count);
  t.pw_gx1a_frac = read_int(chr2(20721:20724,:), 1, count);
  t.pw_gx1a_full = read_int(chr2(20725:20728,:), 1, count);
  t.pw_gx1as = read_int(chr2(20729:20732,:), 1, count);
  t.pw_gx1asa = read_int(chr2(20733:20736,:), 1, count);
  t.pw_gx1asd = read_int(chr2(20737:20740,:), 1, count);
  t.pw_gx1bftg = read_int(chr2(20741:20744,:), 1, count);
  t.pw_gx1bftga = read_int(chr2(20745:20748,:), 1, count);
  t.pw_gx1bftgd = read_int(chr2(20749:20752,:), 1, count);
  t.pw_gx1bxtg = read_int(chr2(20753:20756,:), 1, count);
  t.pw_gx1bxtga = read_int(chr2(20757:20760,:), 1, count);
  t.pw_gx1bxtgd = read_int(chr2(20761:20764,:), 1, count);
  t.pw_gx1cfh = read_int(chr2(20765:20768,:), 1, count);
  t.pw_gx1cfha = read_int(chr2(20769:20772,:), 1, count);
  t.pw_gx1cfhd = read_int(chr2(20773:20776,:), 1, count);
  t.pw_gx1d = read_int(chr2(20777:20780,:), 1, count);
  t.pw_gx1d_frac = read_int(chr2(20781:20784,:), 1, count);
  t.pw_gx1d_full = read_int(chr2(20785:20788,:), 1, count);
  t.pw_gx1dtg = read_int(chr2(20789:20792,:), 1, count);
  t.pw_gx1dtga = read_int(chr2(20793:20796,:), 1, count);
  t.pw_gx1dtgd = read_int(chr2(20797:20800,:), 1, count);
  t.pw_gx1f = read_int(chr2(20801:20804,:), 1, count);
  t.pw_gx1ftg = read_int(chr2(20805:20808,:), 1, count);
  t.pw_gx1ftga = read_int(chr2(20809:20812,:), 1, count);
  t.pw_gx1ftgd = read_int(chr2(20813:20816,:), 1, count);
  t.pw_gx1mon = read_int(chr2(20817:20820,:), 1, count);
  t.pw_gx1mona = read_int(chr2(20821:20824,:), 1, count);
  t.pw_gx1mond = read_int(chr2(20825:20828,:), 1, count);
  t.pw_gx1mps1 = read_int(chr2(20829:20832,:), 1, count);
  t.pw_gx1mps1a = read_int(chr2(20833:20836,:), 1, count);
  t.pw_gx1mps1d = read_int(chr2(20837:20840,:), 1, count);
  t.pw_gx1rs = read_int(chr2(20841:20844,:), 1, count);
  t.pw_gx1rsa = read_int(chr2(20845:20848,:), 1, count);
  t.pw_gx1rsd = read_int(chr2(20849:20852,:), 1, count);
  t.pw_gx1tm = read_int(chr2(20853:20856,:), 1, count);
  t.pw_gx1tma = read_int(chr2(20857:20860,:), 1, count);
  t.pw_gx1tmd = read_int(chr2(20861:20864,:), 1, count);
  t.pw_gx2 = read_int(chr2(20865:20868,:), 1, count);
  t.pw_gx2a = read_int(chr2(20869:20872,:), 1, count);
  t.pw_gx2d = read_int(chr2(20873:20876,:), 1, count);
  t.pw_gx2dtg = read_int(chr2(20877:20880,:), 1, count);
  t.pw_gx2dtga = read_int(chr2(20881:20884,:), 1, count);
  t.pw_gx2dtgd = read_int(chr2(20885:20888,:), 1, count);
  t.pw_gx2ftg = read_int(chr2(20889:20892,:), 1, count);
  t.pw_gx2ftga = read_int(chr2(20893:20896,:), 1, count);
  t.pw_gx2ftgd = read_int(chr2(20897:20900,:), 1, count);
  t.pw_gx2rs = read_int(chr2(20901:20904,:), 1, count);
  t.pw_gx2rsa = read_int(chr2(20905:20908,:), 1, count);
  t.pw_gx2rsd = read_int(chr2(20909:20912,:), 1, count);
  t.pw_gx2test = read_int(chr2(20913:20916,:), 1, count);
  t.pw_gx2testa = read_int(chr2(20917:20920,:), 1, count);
  t.pw_gx2testd = read_int(chr2(20921:20924,:), 1, count);
  t.pw_gxb = read_int(chr2(20925:20928,:), 1, count);
  t.pw_gxba = read_int(chr2(20929:20932,:), 1, count);
  t.pw_gxbd = read_int(chr2(20933:20936,:), 1, count);
  t.pw_gxbrsfc1 = read_int(chr2(20937:20940,:), 1, count);
  t.pw_gxbrsfc1a = read_int(chr2(20941:20944,:), 1, count);
  t.pw_gxbrsfc1d = read_int(chr2(20945:20948,:), 1, count);
  t.pw_gxbrsfc2 = read_int(chr2(20949:20952,:), 1, count);
  t.pw_gxbrsfc2a = read_int(chr2(20953:20956,:), 1, count);
  t.pw_gxbrsfc2d = read_int(chr2(20957:20960,:), 1, count);
  t.pw_gxfc = read_int(chr2(20961:20964,:), 1, count);
  t.pw_gxfc_frac = read_int(chr2(20965:20968,:), 1, count);
  t.pw_gxfc_full = read_int(chr2(20969:20972,:), 1, count);
  t.pw_gxfca = read_int(chr2(20973:20976,:), 1, count);
  t.pw_gxfca_frac = read_int(chr2(20977:20980,:), 1, count);
  t.pw_gxfca_full = read_int(chr2(20981:20984,:), 1, count);
  t.pw_gxfcd = read_int(chr2(20985:20988,:), 1, count);
  t.pw_gxfcd_frac = read_int(chr2(20989:20992,:), 1, count);
  t.pw_gxfcd_full = read_int(chr2(20993:20996,:), 1, count);
  t.pw_gxfcmon = read_int(chr2(20997:21000,:), 1, count);
  t.pw_gxfcmona = read_int(chr2(21001:21004,:), 1, count);
  t.pw_gxfcmond = read_int(chr2(21005:21008,:), 1, count);
  t.pw_gxflpk = read_int(chr2(21009:21012,:), 1, count);
  t.pw_gxflpka = read_int(chr2(21013:21016,:), 1, count);
  t.pw_gxflpkd = read_int(chr2(21017:21020,:), 1, count);
  t.pw_gxflpvenc = read_int(chr2(21021:21024,:), 1, count);
  t.pw_gxflpvenca = read_int(chr2(21025:21028,:), 1, count);
  t.pw_gxflpvencd = read_int(chr2(21029:21032,:), 1, count);
  t.pw_gxhyst1 = read_int(chr2(21033:21036,:), 1, count);
  t.pw_gxhyst1a = read_int(chr2(21037:21040,:), 1, count);
  t.pw_gxhyst1d = read_int(chr2(21041:21044,:), 1, count);
  t.pw_gxhyst2 = read_int(chr2(21045:21048,:), 1, count);
  t.pw_gxhyst2a = read_int(chr2(21049:21052,:), 1, count);
  t.pw_gxhyst2d = read_int(chr2(21053:21056,:), 1, count);
  t.pw_gxkas = read_int(chr2(21057:21060,:), 1, count);
  t.pw_gxkasa = read_int(chr2(21061:21064,:), 1, count);
  t.pw_gxkasd = read_int(chr2(21065:21068,:), 1, count);
  t.pw_gxkbsdtg = read_int(chr2(21069:21072,:), 1, count);
  t.pw_gxkbsdtga = read_int(chr2(21073:21076,:), 1, count);
  t.pw_gxkbsdtgd = read_int(chr2(21077:21080,:), 1, count);
  t.pw_gxkbsrs = read_int(chr2(21081:21084,:), 1, count);
  t.pw_gxkbsrsa = read_int(chr2(21085:21088,:), 1, count);
  t.pw_gxkbsrsd = read_int(chr2(21089:21092,:), 1, count);
  t.pw_gxkcs = read_int(chr2(21093:21096,:), 1, count);
  t.pw_gxkcsa = read_int(chr2(21097:21100,:), 1, count);
  t.pw_gxkcsd = read_int(chr2(21101:21104,:), 1, count);
  t.pw_gxkdtg = read_int(chr2(21105:21108,:), 1, count);
  t.pw_gxkdtga = read_int(chr2(21109:21112,:), 1, count);
  t.pw_gxkdtgd = read_int(chr2(21113:21116,:), 1, count);
  t.pw_gxkfs = read_int(chr2(21117:21120,:), 1, count);
  t.pw_gxkfsa = read_int(chr2(21121:21124,:), 1, count);
  t.pw_gxkfsd = read_int(chr2(21125:21128,:), 1, count);
  t.pw_gxkill = read_int(chr2(21129:21132,:), 1, count);
  t.pw_gxkilla = read_int(chr2(21133:21136,:), 1, count);
  t.pw_gxkilld = read_int(chr2(21137:21140,:), 1, count);
  t.pw_gxkrcvn = read_int(chr2(21141:21144,:), 1, count);
  t.pw_gxkrcvna = read_int(chr2(21145:21148,:), 1, count);
  t.pw_gxkrcvnd = read_int(chr2(21149:21152,:), 1, count);
  t.pw_gxkrs = read_int(chr2(21153:21156,:), 1, count);
  t.pw_gxkrsa = read_int(chr2(21157:21160,:), 1, count);
  t.pw_gxkrsd = read_int(chr2(21161:21164,:), 1, count);
  t.pw_gxks = read_int(chr2(21165:21168,:), 1, count);
  t.pw_gxksa = read_int(chr2(21169:21172,:), 1, count);
  t.pw_gxksd = read_int(chr2(21173:21176,:), 1, count);
  t.pw_gxkse1 = read_int(chr2(21177:21180,:), 1, count);
  t.pw_gxkse1a = read_int(chr2(21181:21184,:), 1, count);
  t.pw_gxkse1d = read_int(chr2(21185:21188,:), 1, count);
  t.pw_gxkse2 = read_int(chr2(21189:21192,:), 1, count);
  t.pw_gxkse2a = read_int(chr2(21193:21196,:), 1, count);
  t.pw_gxkse2d = read_int(chr2(21197:21200,:), 1, count);
  t.pw_gxkse3 = read_int(chr2(21201:21204,:), 1, count);
  t.pw_gxkse3a = read_int(chr2(21205:21208,:), 1, count);
  t.pw_gxkse3d = read_int(chr2(21209:21212,:), 1, count);
  t.pw_gxkse4 = read_int(chr2(21213:21216,:), 1, count);
  t.pw_gxkse4a = read_int(chr2(21217:21220,:), 1, count);
  t.pw_gxkse4d = read_int(chr2(21221:21224,:), 1, count);
  t.pw_gxkse5 = read_int(chr2(21225:21228,:), 1, count);
  t.pw_gxkse5a = read_int(chr2(21229:21232,:), 1, count);
  t.pw_gxkse5d = read_int(chr2(21233:21236,:), 1, count);
  t.pw_gxkse6 = read_int(chr2(21237:21240,:), 1, count);
  t.pw_gxkse6a = read_int(chr2(21241:21244,:), 1, count);
  t.pw_gxkse6d = read_int(chr2(21245:21248,:), 1, count);
  t.pw_gxksp = read_int(chr2(21249:21252,:), 1, count);
  t.pw_gxkspa = read_int(chr2(21253:21256,:), 1, count);
  t.pw_gxkspd = read_int(chr2(21257:21260,:), 1, count);
  t.pw_gxkssf = read_int(chr2(21261:21264,:), 1, count);
  t.pw_gxkssfa = read_int(chr2(21265:21268,:), 1, count);
  t.pw_gxkssfd = read_int(chr2(21269:21272,:), 1, count);
  t.pw_gxksx1 = read_int(chr2(21273:21276,:), 1, count);
  t.pw_gxksx1a = read_int(chr2(21277:21280,:), 1, count);
  t.pw_gxksx1d = read_int(chr2(21281:21284,:), 1, count);
  t.pw_gxksx2 = read_int(chr2(21285:21288,:), 1, count);
  t.pw_gxksx2a = read_int(chr2(21289:21292,:), 1, count);
  t.pw_gxksx2d = read_int(chr2(21293:21296,:), 1, count);
  t.pw_gxksy1 = read_int(chr2(21297:21300,:), 1, count);
  t.pw_gxksy1a = read_int(chr2(21301:21304,:), 1, count);
  t.pw_gxksy1d = read_int(chr2(21305:21308,:), 1, count);
  t.pw_gxksy2 = read_int(chr2(21309:21312,:), 1, count);
  t.pw_gxksy2a = read_int(chr2(21313:21316,:), 1, count);
  t.pw_gxksy2d = read_int(chr2(21317:21320,:), 1, count);
  t.pw_gxksz1 = read_int(chr2(21321:21324,:), 1, count);
  t.pw_gxksz1a = read_int(chr2(21325:21328,:), 1, count);
  t.pw_gxksz1d = read_int(chr2(21329:21332,:), 1, count);
  t.pw_gxksz2 = read_int(chr2(21333:21336,:), 1, count);
  t.pw_gxksz2a = read_int(chr2(21337:21340,:), 1, count);
  t.pw_gxksz2d = read_int(chr2(21341:21344,:), 1, count);
  t.pw_gxrf1tm = read_int(chr2(21345:21348,:), 1, count);
  t.pw_gxrf1tma = read_int(chr2(21349:21352,:), 1, count);
  t.pw_gxrf1tmd = read_int(chr2(21353:21356,:), 1, count);
  t.pw_gxrf2cfh = read_int(chr2(21357:21360,:), 1, count);
  t.pw_gxrf2cfha = read_int(chr2(21361:21364,:), 1, count);
  t.pw_gxrf2cfhd = read_int(chr2(21365:21368,:), 1, count);
  t.pw_gxrfsx1 = read_int(chr2(21369:21372,:), 1, count);
  t.pw_gxrfsx1a = read_int(chr2(21373:21376,:), 1, count);
  t.pw_gxrfsx1d = read_int(chr2(21377:21380,:), 1, count);
  t.pw_gxrfsx2 = read_int(chr2(21381:21384,:), 1, count);
  t.pw_gxrfsx2a = read_int(chr2(21385:21388,:), 1, count);
  t.pw_gxrfsx2d = read_int(chr2(21389:21392,:), 1, count);
  t.pw_gxspiral = read_int(chr2(21393:21396,:), 1, count);
  t.pw_gxspiral2 = read_int(chr2(21397:21400,:), 1, count);
  t.pw_gxspoil = read_int(chr2(21401:21404,:), 1, count);
  t.pw_gxspoil2 = read_int(chr2(21405:21408,:), 1, count);
  t.pw_gxspoil2a = read_int(chr2(21409:21412,:), 1, count);
  t.pw_gxspoil2d = read_int(chr2(21413:21416,:), 1, count);
  t.pw_gxspoila = read_int(chr2(21417:21420,:), 1, count);
  t.pw_gxspoild = read_int(chr2(21421:21424,:), 1, count);
  t.pw_gxw = read_int(chr2(21425:21428,:), 1, count);
  t.pw_gxw1ftg = read_int(chr2(21429:21432,:), 1, count);
  t.pw_gxw1ftga = read_int(chr2(21433:21436,:), 1, count);
  t.pw_gxw1ftgd = read_int(chr2(21437:21440,:), 1, count);
  t.pw_gxw1xtg = read_int(chr2(21441:21444,:), 1, count);
  t.pw_gxw1xtga = read_int(chr2(21445:21448,:), 1, count);
  t.pw_gxw1xtgd = read_int(chr2(21449:21452,:), 1, count);
  t.pw_gxw2 = read_int(chr2(21453:21456,:), 1, count);
  t.pw_gxw2a = read_int(chr2(21457:21460,:), 1, count);
  t.pw_gxw2d = read_int(chr2(21461:21464,:), 1, count);
  t.pw_gxw2dtg = read_int(chr2(21465:21468,:), 1, count);
  t.pw_gxw2dtga = read_int(chr2(21469:21472,:), 1, count);
  t.pw_gxw2dtgd = read_int(chr2(21473:21476,:), 1, count);
  t.pw_gxw2ftg = read_int(chr2(21477:21480,:), 1, count);
  t.pw_gxw2ftga = read_int(chr2(21481:21484,:), 1, count);
  t.pw_gxw2ftgd = read_int(chr2(21485:21488,:), 1, count);
  t.pw_gxw2ftgleft = read_int(chr2(21489:21492,:), 1, count);
  t.pw_gxw2rs = read_int(chr2(21493:21496,:), 1, count);
  t.pw_gxw2rsa = read_int(chr2(21497:21500,:), 1, count);
  t.pw_gxw2rsd = read_int(chr2(21501:21504,:), 1, count);
  t.pw_gxw_frac = read_int(chr2(21505:21508,:), 1, count);
  t.pw_gxw_full = read_int(chr2(21509:21512,:), 1, count);
  t.pw_gxwa = read_int(chr2(21513:21516,:), 1, count);
  t.pw_gxwa_frac = read_int(chr2(21517:21520,:), 1, count);
  t.pw_gxwa_full = read_int(chr2(21521:21524,:), 1, count);
  t.pw_gxwas = read_int(chr2(21525:21528,:), 1, count);
  t.pw_gxwasa = read_int(chr2(21529:21532,:), 1, count);
  t.pw_gxwasd = read_int(chr2(21533:21536,:), 1, count);
  t.pw_gxwd = read_int(chr2(21537:21540,:), 1, count);
  t.pw_gxwd_frac = read_int(chr2(21541:21544,:), 1, count);
  t.pw_gxwd_full = read_int(chr2(21545:21548,:), 1, count);
  t.pw_gxwd_temp = read_int(chr2(21549:21552,:), 1, count);
  t.pw_gxwdtg = read_int(chr2(21553:21556,:), 1, count);
  t.pw_gxwdtga = read_int(chr2(21557:21560,:), 1, count);
  t.pw_gxwdtgd = read_int(chr2(21561:21564,:), 1, count);
  t.pw_gxwex = read_int(chr2(21565:21568,:), 1, count);
  t.pw_gxwex1 = read_int(chr2(21569:21572,:), 1, count);
  t.pw_gxwexa = read_int(chr2(21573:21576,:), 1, count);
  t.pw_gxwexd = read_int(chr2(21577:21580,:), 1, count);
  t.pw_gxwexmax = read_int(chr2(21581:21584,:), 1, count);
  t.pw_gxwl = read_int(chr2(21585:21588,:), 1, count);
  t.pw_gxwmon = read_int(chr2(21589:21592,:), 1, count);
  t.pw_gxwmona = read_int(chr2(21593:21596,:), 1, count);
  t.pw_gxwmond = read_int(chr2(21597:21600,:), 1, count);
  t.pw_gxwmps1 = read_int(chr2(21601:21604,:), 1, count);
  t.pw_gxwmps1a = read_int(chr2(21605:21608,:), 1, count);
  t.pw_gxwmps1d = read_int(chr2(21609:21612,:), 1, count);
  t.pw_gxwr = read_int(chr2(21613:21616,:), 1, count);
  t.pw_gxwrs = read_int(chr2(21617:21620,:), 1, count);
  t.pw_gxwrsa = read_int(chr2(21621:21624,:), 1, count);
  t.pw_gxwrsd = read_int(chr2(21625:21628,:), 1, count);
  t.pw_gy1 = read_int(chr2(21629:21632,:), 1, count);
  t.pw_gy1_tot = read_int(chr2(21633:21636,:), 1, count);
  t.pw_gy1a = read_int(chr2(21637:21640,:), 1, count);
  t.pw_gy1as = read_int(chr2(21641:21644,:), 1, count);
  t.pw_gy1as_tot = read_int(chr2(21645:21648,:), 1, count);
  t.pw_gy1asa = read_int(chr2(21649:21652,:), 1, count);
  t.pw_gy1asd = read_int(chr2(21653:21656,:), 1, count);
  t.pw_gy1cfh = read_int(chr2(21657:21660,:), 1, count);
  t.pw_gy1cfha = read_int(chr2(21661:21664,:), 1, count);
  t.pw_gy1cfhd = read_int(chr2(21665:21668,:), 1, count);
  t.pw_gy1d = read_int(chr2(21669:21672,:), 1, count);
  t.pw_gy1dtg = read_int(chr2(21673:21676,:), 1, count);
  t.pw_gy1dtga = read_int(chr2(21677:21680,:), 1, count);
  t.pw_gy1dtgd = read_int(chr2(21681:21684,:), 1, count);
  t.pw_gy1f = read_int(chr2(21685:21688,:), 1, count);
  t.pw_gy1mon = read_int(chr2(21689:21692,:), 1, count);
  t.pw_gy1mona = read_int(chr2(21693:21696,:), 1, count);
  t.pw_gy1mond = read_int(chr2(21697:21700,:), 1, count);
  t.pw_gy1mps1 = read_int(chr2(21701:21704,:), 1, count);
  t.pw_gy1mps1a = read_int(chr2(21705:21708,:), 1, count);
  t.pw_gy1mps1d = read_int(chr2(21709:21712,:), 1, count);
  t.pw_gy1r = read_int(chr2(21713:21716,:), 1, count);
  t.pw_gy1r_tot = read_int(chr2(21717:21720,:), 1, count);
  t.pw_gy1ra = read_int(chr2(21721:21724,:), 1, count);
  t.pw_gy1ras = read_int(chr2(21725:21728,:), 1, count);
  t.pw_gy1rasa = read_int(chr2(21729:21732,:), 1, count);
  t.pw_gy1rasd = read_int(chr2(21733:21736,:), 1, count);
  t.pw_gy1rd = read_int(chr2(21737:21740,:), 1, count);
  t.pw_gy1rdtg = read_int(chr2(21741:21744,:), 1, count);
  t.pw_gy1rdtga = read_int(chr2(21745:21748,:), 1, count);
  t.pw_gy1rdtgd = read_int(chr2(21749:21752,:), 1, count);
  t.pw_gy1rf = read_int(chr2(21753:21756,:), 1, count);
  t.pw_gy1rrs = read_int(chr2(21757:21760,:), 1, count);
  t.pw_gy1rrsa = read_int(chr2(21761:21764,:), 1, count);
  t.pw_gy1rrsd = read_int(chr2(21765:21768,:), 1, count);
  t.pw_gy1rs = read_int(chr2(21769:21772,:), 1, count);
  t.pw_gy1rsa = read_int(chr2(21773:21776,:), 1, count);
  t.pw_gy1rsd = read_int(chr2(21777:21780,:), 1, count);
  t.pw_gy1tm = read_int(chr2(21781:21784,:), 1, count);
  t.pw_gy1tma = read_int(chr2(21785:21788,:), 1, count);
  t.pw_gy1tmd = read_int(chr2(21789:21792,:), 1, count);
  t.pw_gy2dtg = read_int(chr2(21793:21796,:), 1, count);
  t.pw_gy2dtga = read_int(chr2(21797:21800,:), 1, count);
  t.pw_gy2dtgd = read_int(chr2(21801:21804,:), 1, count);
  t.pw_gy2rs = read_int(chr2(21805:21808,:), 1, count);
  t.pw_gy2rsa = read_int(chr2(21809:21812,:), 1, count);
  t.pw_gy2rsd = read_int(chr2(21813:21816,:), 1, count);
  t.pw_gyb = read_int(chr2(21817:21820,:), 1, count);
  t.pw_gyba = read_int(chr2(21821:21824,:), 1, count);
  t.pw_gybd = read_int(chr2(21825:21828,:), 1, count);
  t.pw_gybrsfc1 = read_int(chr2(21829:21832,:), 1, count);
  t.pw_gybrsfc1a = read_int(chr2(21833:21836,:), 1, count);
  t.pw_gybrsfc1d = read_int(chr2(21837:21840,:), 1, count);
  t.pw_gybrsfc2 = read_int(chr2(21841:21844,:), 1, count);
  t.pw_gybrsfc2a = read_int(chr2(21845:21848,:), 1, count);
  t.pw_gybrsfc2d = read_int(chr2(21849:21852,:), 1, count);
  t.pw_gycylr = read_int(chr2(21853:21856,:), 1, count);
  t.pw_gycylra = read_int(chr2(21857:21860,:), 1, count);
  t.pw_gycylratipup = read_int(chr2(21861:21864,:), 1, count);
  t.pw_gycylrtipup = read_int(chr2(21865:21868,:), 1, count);
  t.pw_gyfe = read_int(chr2(21869:21872,:), 1, count);
  t.pw_gyfe1 = read_int(chr2(21873:21876,:), 1, count);
  t.pw_gyfe1a = read_int(chr2(21877:21880,:), 1, count);
  t.pw_gyfe1d = read_int(chr2(21881:21884,:), 1, count);
  t.pw_gyfe2 = read_int(chr2(21885:21888,:), 1, count);
  t.pw_gyfe2a = read_int(chr2(21889:21892,:), 1, count);
  t.pw_gyfe2d = read_int(chr2(21893:21896,:), 1, count);
  t.pw_gyfea = read_int(chr2(21897:21900,:), 1, count);
  t.pw_gyfed = read_int(chr2(21901:21904,:), 1, count);
  t.pw_gyflpk = read_int(chr2(21905:21908,:), 1, count);
  t.pw_gyflpka = read_int(chr2(21909:21912,:), 1, count);
  t.pw_gyflpkd = read_int(chr2(21913:21916,:), 1, count);
  t.pw_gyflpvenc = read_int(chr2(21917:21920,:), 1, count);
  t.pw_gyflpvenca = read_int(chr2(21921:21924,:), 1, count);
  t.pw_gyflpvencd = read_int(chr2(21925:21928,:), 1, count);
  t.pw_gyhyst1 = read_int(chr2(21929:21932,:), 1, count);
  t.pw_gyhyst1a = read_int(chr2(21933:21936,:), 1, count);
  t.pw_gyhyst1d = read_int(chr2(21937:21940,:), 1, count);
  t.pw_gyhyst2 = read_int(chr2(21941:21944,:), 1, count);
  t.pw_gyhyst2a = read_int(chr2(21945:21948,:), 1, count);
  t.pw_gyhyst2d = read_int(chr2(21949:21952,:), 1, count);
  t.pw_gykcfh = read_int(chr2(21953:21956,:), 1, count);
  t.pw_gykcfha = read_int(chr2(21957:21960,:), 1, count);
  t.pw_gykcfhd = read_int(chr2(21961:21964,:), 1, count);
  t.pw_gykcfl = read_int(chr2(21965:21968,:), 1, count);
  t.pw_gykcfla = read_int(chr2(21969:21972,:), 1, count);
  t.pw_gykcfld = read_int(chr2(21973:21976,:), 1, count);
  t.pw_gykcs = read_int(chr2(21977:21980,:), 1, count);
  t.pw_gykcsa = read_int(chr2(21981:21984,:), 1, count);
  t.pw_gykcsd = read_int(chr2(21985:21988,:), 1, count);
  t.pw_gykfs = read_int(chr2(21989:21992,:), 1, count);
  t.pw_gykfsa = read_int(chr2(21993:21996,:), 1, count);
  t.pw_gykfsd = read_int(chr2(21997:22000,:), 1, count);
  t.pw_gykill = read_int(chr2(22001:22004,:), 1, count);
  t.pw_gykilla = read_int(chr2(22005:22008,:), 1, count);
  t.pw_gykilld = read_int(chr2(22009:22012,:), 1, count);
  t.pw_gykrcvn = read_int(chr2(22013:22016,:), 1, count);
  t.pw_gykrcvna = read_int(chr2(22017:22020,:), 1, count);
  t.pw_gykrcvnd = read_int(chr2(22021:22024,:), 1, count);
  t.pw_gyks = read_int(chr2(22025:22028,:), 1, count);
  t.pw_gyksa = read_int(chr2(22029:22032,:), 1, count);
  t.pw_gyksd = read_int(chr2(22033:22036,:), 1, count);
  t.pw_gykse1 = read_int(chr2(22037:22040,:), 1, count);
  t.pw_gykse1a = read_int(chr2(22041:22044,:), 1, count);
  t.pw_gykse1d = read_int(chr2(22045:22048,:), 1, count);
  t.pw_gykse2 = read_int(chr2(22049:22052,:), 1, count);
  t.pw_gykse2a = read_int(chr2(22053:22056,:), 1, count);
  t.pw_gykse2d = read_int(chr2(22057:22060,:), 1, count);
  t.pw_gykse3 = read_int(chr2(22061:22064,:), 1, count);
  t.pw_gykse3a = read_int(chr2(22065:22068,:), 1, count);
  t.pw_gykse3d = read_int(chr2(22069:22072,:), 1, count);
  t.pw_gykse4 = read_int(chr2(22073:22076,:), 1, count);
  t.pw_gykse4a = read_int(chr2(22077:22080,:), 1, count);
  t.pw_gykse4d = read_int(chr2(22081:22084,:), 1, count);
  t.pw_gykse5 = read_int(chr2(22085:22088,:), 1, count);
  t.pw_gykse5a = read_int(chr2(22089:22092,:), 1, count);
  t.pw_gykse5d = read_int(chr2(22093:22096,:), 1, count);
  t.pw_gykse6 = read_int(chr2(22097:22100,:), 1, count);
  t.pw_gykse6a = read_int(chr2(22101:22104,:), 1, count);
  t.pw_gykse6d = read_int(chr2(22105:22108,:), 1, count);
  t.pw_gyksp = read_int(chr2(22109:22112,:), 1, count);
  t.pw_gykspa = read_int(chr2(22113:22116,:), 1, count);
  t.pw_gykspd = read_int(chr2(22117:22120,:), 1, count);
  t.pw_gykssf = read_int(chr2(22121:22124,:), 1, count);
  t.pw_gykssfa = read_int(chr2(22125:22128,:), 1, count);
  t.pw_gykssfd = read_int(chr2(22129:22132,:), 1, count);
  t.pw_gyksx1 = read_int(chr2(22133:22136,:), 1, count);
  t.pw_gyksx1a = read_int(chr2(22137:22140,:), 1, count);
  t.pw_gyksx1d = read_int(chr2(22141:22144,:), 1, count);
  t.pw_gyksx2 = read_int(chr2(22145:22148,:), 1, count);
  t.pw_gyksx2a = read_int(chr2(22149:22152,:), 1, count);
  t.pw_gyksx2d = read_int(chr2(22153:22156,:), 1, count);
  t.pw_gyksy1 = read_int(chr2(22157:22160,:), 1, count);
  t.pw_gyksy1a = read_int(chr2(22161:22164,:), 1, count);
  t.pw_gyksy1d = read_int(chr2(22165:22168,:), 1, count);
  t.pw_gyksy2 = read_int(chr2(22169:22172,:), 1, count);
  t.pw_gyksy2a = read_int(chr2(22173:22176,:), 1, count);
  t.pw_gyksy2d = read_int(chr2(22177:22180,:), 1, count);
  t.pw_gyksz1 = read_int(chr2(22181:22184,:), 1, count);
  t.pw_gyksz1a = read_int(chr2(22185:22188,:), 1, count);
  t.pw_gyksz1d = read_int(chr2(22189:22192,:), 1, count);
  t.pw_gyksz2 = read_int(chr2(22193:22196,:), 1, count);
  t.pw_gyksz2a = read_int(chr2(22197:22200,:), 1, count);
  t.pw_gyksz2d = read_int(chr2(22201:22204,:), 1, count);
  t.pw_gykxtgl = read_int(chr2(22205:22208,:), 1, count);
  t.pw_gykxtgla = read_int(chr2(22209:22212,:), 1, count);
  t.pw_gykxtgld = read_int(chr2(22213:22216,:), 1, count);
  t.pw_gykxtgr = read_int(chr2(22217:22220,:), 1, count);
  t.pw_gykxtgra = read_int(chr2(22221:22224,:), 1, count);
  t.pw_gykxtgrd = read_int(chr2(22225:22228,:), 1, count);
  t.pw_gyrf0kcfh = read_int(chr2(22229:22232,:), 1, count);
  t.pw_gyrf0kcfha = read_int(chr2(22233:22236,:), 1, count);
  t.pw_gyrf0kcfhd = read_int(chr2(22237:22240,:), 1, count);
  t.pw_gyrf1mon = read_int(chr2(22241:22244,:), 1, count);
  t.pw_gyrf1mona = read_int(chr2(22245:22248,:), 1, count);
  t.pw_gyrf1mond = read_int(chr2(22249:22252,:), 1, count);
  t.pw_gyrf1mps1 = read_int(chr2(22253:22256,:), 1, count);
  t.pw_gyrf1mps1a = read_int(chr2(22257:22260,:), 1, count);
  t.pw_gyrf1mps1d = read_int(chr2(22261:22264,:), 1, count);
  t.pw_gyrf1tm = read_int(chr2(22265:22268,:), 1, count);
  t.pw_gyrf1tma = read_int(chr2(22269:22272,:), 1, count);
  t.pw_gyrf1tmd = read_int(chr2(22273:22276,:), 1, count);
  t.pw_gyrf1xtg = read_int(chr2(22277:22280,:), 1, count);
  t.pw_gyrf1xtga = read_int(chr2(22281:22284,:), 1, count);
  t.pw_gyrf1xtgd = read_int(chr2(22285:22288,:), 1, count);
  t.pw_gyrf2cfh = read_int(chr2(22289:22292,:), 1, count);
  t.pw_gyrf2cfha = read_int(chr2(22293:22296,:), 1, count);
  t.pw_gyrf2cfhd = read_int(chr2(22297:22300,:), 1, count);
  t.pw_gyrf2lmon = read_int(chr2(22301:22304,:), 1, count);
  t.pw_gyrf2lmona = read_int(chr2(22305:22308,:), 1, count);
  t.pw_gyrf2lmond = read_int(chr2(22309:22312,:), 1, count);
  t.pw_gyrf2mon = read_int(chr2(22313:22316,:), 1, count);
  t.pw_gyrf2mona = read_int(chr2(22317:22320,:), 1, count);
  t.pw_gyrf2mond = read_int(chr2(22321:22324,:), 1, count);
  t.pw_gyrf2rmon = read_int(chr2(22325:22328,:), 1, count);
  t.pw_gyrf2rmona = read_int(chr2(22329:22332,:), 1, count);
  t.pw_gyrf2rmond = read_int(chr2(22333:22336,:), 1, count);
  t.pw_gyrf3cfh = read_int(chr2(22337:22340,:), 1, count);
  t.pw_gyrf3cfha = read_int(chr2(22341:22344,:), 1, count);
  t.pw_gyrf3cfhd = read_int(chr2(22345:22348,:), 1, count);
  t.pw_gyrfmontipup = read_int(chr2(22349:22352,:), 1, count);
  t.pw_gyrfmontipupa = read_int(chr2(22353:22356,:), 1, count);
  t.pw_gyrfmontipupd = read_int(chr2(22357:22360,:), 1, count);
  t.pw_gyrfsy1 = read_int(chr2(22361:22364,:), 1, count);
  t.pw_gyrfsy1a = read_int(chr2(22365:22368,:), 1, count);
  t.pw_gyrfsy1d = read_int(chr2(22369:22372,:), 1, count);
  t.pw_gyrfsy2 = read_int(chr2(22373:22376,:), 1, count);
  t.pw_gyrfsy2a = read_int(chr2(22377:22380,:), 1, count);
  t.pw_gyrfsy2d = read_int(chr2(22381:22384,:), 1, count);
  t.pw_gyspiral = read_int(chr2(22385:22388,:), 1, count);
  t.pw_gyspiral2 = read_int(chr2(22389:22392,:), 1, count);
  t.pw_gyspoil = read_int(chr2(22393:22396,:), 1, count);
  t.pw_gyspoil2 = read_int(chr2(22397:22400,:), 1, count);
  t.pw_gyspoil2a = read_int(chr2(22401:22404,:), 1, count);
  t.pw_gyspoil2d = read_int(chr2(22405:22408,:), 1, count);
  t.pw_gyspoila = read_int(chr2(22409:22412,:), 1, count);
  t.pw_gyspoild = read_int(chr2(22413:22416,:), 1, count);
  t.pw_gz1 = read_int(chr2(22417:22420,:), 1, count);
  t.pw_gz1a = read_int(chr2(22421:22424,:), 1, count);
  t.pw_gz1as = read_int(chr2(22425:22428,:), 1, count);
  t.pw_gz1asa = read_int(chr2(22429:22432,:), 1, count);
  t.pw_gz1asd = read_int(chr2(22433:22436,:), 1, count);
  t.pw_gz1cfl = read_int(chr2(22437:22440,:), 1, count);
  t.pw_gz1cfla = read_int(chr2(22441:22444,:), 1, count);
  t.pw_gz1cfld = read_int(chr2(22445:22448,:), 1, count);
  t.pw_gz1d = read_int(chr2(22449:22452,:), 1, count);
  t.pw_gz1dtg = read_int(chr2(22453:22456,:), 1, count);
  t.pw_gz1dtga = read_int(chr2(22457:22460,:), 1, count);
  t.pw_gz1dtgd = read_int(chr2(22461:22464,:), 1, count);
  t.pw_gz1ftg = read_int(chr2(22465:22468,:), 1, count);
  t.pw_gz1ftga = read_int(chr2(22469:22472,:), 1, count);
  t.pw_gz1ftgd = read_int(chr2(22473:22476,:), 1, count);
  t.pw_gz1mon = read_int(chr2(22477:22480,:), 1, count);
  t.pw_gz1mona = read_int(chr2(22481:22484,:), 1, count);
  t.pw_gz1mond = read_int(chr2(22485:22488,:), 1, count);
  t.pw_gz1mps1 = read_int(chr2(22489:22492,:), 1, count);
  t.pw_gz1mps1a = read_int(chr2(22493:22496,:), 1, count);
  t.pw_gz1mps1d = read_int(chr2(22497:22500,:), 1, count);
  t.pw_gz1rs = read_int(chr2(22501:22504,:), 1, count);
  t.pw_gz1rsa = read_int(chr2(22505:22508,:), 1, count);
  t.pw_gz1rsd = read_int(chr2(22509:22512,:), 1, count);
  t.pw_gz1s = read_int(chr2(22513:22516,:), 1, count);
  t.pw_gz1sa = read_int(chr2(22517:22520,:), 1, count);
  t.pw_gz1sd = read_int(chr2(22521:22524,:), 1, count);
  t.pw_gz1xtg = read_int(chr2(22525:22528,:), 1, count);
  t.pw_gz1xtga = read_int(chr2(22529:22532,:), 1, count);
  t.pw_gz1xtgd = read_int(chr2(22533:22536,:), 1, count);
  t.pw_gz2bftg = read_int(chr2(22537:22540,:), 1, count);
  t.pw_gz2bftga = read_int(chr2(22541:22544,:), 1, count);
  t.pw_gz2bftgd = read_int(chr2(22545:22548,:), 1, count);
  t.pw_gz2ftg = read_int(chr2(22549:22552,:), 1, count);
  t.pw_gz2ftga = read_int(chr2(22553:22556,:), 1, count);
  t.pw_gz2ftgd = read_int(chr2(22557:22560,:), 1, count);
  t.pw_gz2xtg = read_int(chr2(22561:22564,:), 1, count);
  t.pw_gz2xtga = read_int(chr2(22565:22568,:), 1, count);
  t.pw_gz2xtgd = read_int(chr2(22569:22572,:), 1, count);
  t.pw_gz3ftg = read_int(chr2(22573:22576,:), 1, count);
  t.pw_gz3ftga = read_int(chr2(22577:22580,:), 1, count);
  t.pw_gz3ftgd = read_int(chr2(22581:22584,:), 1, count);
  t.pw_gzbrsfc1 = read_int(chr2(22585:22588,:), 1, count);
  t.pw_gzbrsfc1a = read_int(chr2(22589:22592,:), 1, count);
  t.pw_gzbrsfc1d = read_int(chr2(22593:22596,:), 1, count);
  t.pw_gzbrsfc1echo1 = read_int(chr2(22597:22600,:), 1, count);
  t.pw_gzbrsfc1echo1a = read_int(chr2(22601:22604,:), 1, count);
  t.pw_gzbrsfc1echo1d = read_int(chr2(22605:22608,:), 1, count);
  t.pw_gzbrsfc1echo2 = read_int(chr2(22609:22612,:), 1, count);
  t.pw_gzbrsfc1echo2a = read_int(chr2(22613:22616,:), 1, count);
  t.pw_gzbrsfc1echo2d = read_int(chr2(22617:22620,:), 1, count);
  t.pw_gzbrsfc2 = read_int(chr2(22621:22624,:), 1, count);
  t.pw_gzbrsfc2a = read_int(chr2(22625:22628,:), 1, count);
  t.pw_gzbrsfc2d = read_int(chr2(22629:22632,:), 1, count);
  t.pw_gzcomb = read_int(chr2(22633:22636,:), 1, count);
  t.pw_gzcomb_tot = read_int(chr2(22637:22640,:), 1, count);
  t.pw_gzcomba = read_int(chr2(22641:22644,:), 1, count);
  t.pw_gzcombd = read_int(chr2(22645:22648,:), 1, count);
  t.pw_gzcombf = read_int(chr2(22649:22652,:), 1, count);
  t.pw_gzcombhtr = read_int(chr2(22653:22656,:), 1, count);
  t.pw_gzcombhtra = read_int(chr2(22657:22660,:), 1, count);
  t.pw_gzcombhtrd = read_int(chr2(22661:22664,:), 1, count);
  t.pw_gzcombhtrf = read_int(chr2(22665:22668,:), 1, count);
  t.pw_gzcylr = read_int(chr2(22669:22672,:), 1, count);
  t.pw_gzcylra = read_int(chr2(22673:22676,:), 1, count);
  t.pw_gzcylratipup = read_int(chr2(22677:22680,:), 1, count);
  t.pw_gzcylrtipup = read_int(chr2(22681:22684,:), 1, count);
  t.pw_gzfc = read_int(chr2(22685:22688,:), 1, count);
  t.pw_gzfca = read_int(chr2(22689:22692,:), 1, count);
  t.pw_gzfcd = read_int(chr2(22693:22696,:), 1, count);
  t.pw_gzflpk = read_int(chr2(22697:22700,:), 1, count);
  t.pw_gzflpka = read_int(chr2(22701:22704,:), 1, count);
  t.pw_gzflpkd = read_int(chr2(22705:22708,:), 1, count);
  t.pw_gzflpvenc = read_int(chr2(22709:22712,:), 1, count);
  t.pw_gzflpvenca = read_int(chr2(22713:22716,:), 1, count);
  t.pw_gzflpvencd = read_int(chr2(22717:22720,:), 1, count);
  t.pw_gzk = read_int(chr2(22721:22724,:), 1, count);
  t.pw_gzka = read_int(chr2(22725:22728,:), 1, count);
  t.pw_gzkas = read_int(chr2(22729:22732,:), 1, count);
  t.pw_gzkasa = read_int(chr2(22733:22736,:), 1, count);
  t.pw_gzkasd = read_int(chr2(22737:22740,:), 1, count);
  t.pw_gzkbsdtg = read_int(chr2(22741:22744,:), 1, count);
  t.pw_gzkbsdtga = read_int(chr2(22745:22748,:), 1, count);
  t.pw_gzkbsdtgd = read_int(chr2(22749:22752,:), 1, count);
  t.pw_gzkbsrs = read_int(chr2(22753:22756,:), 1, count);
  t.pw_gzkbsrsa = read_int(chr2(22757:22760,:), 1, count);
  t.pw_gzkbsrsd = read_int(chr2(22761:22764,:), 1, count);
  t.pw_gzkcs = read_int(chr2(22765:22768,:), 1, count);
  t.pw_gzkcsa = read_int(chr2(22769:22772,:), 1, count);
  t.pw_gzkcsd = read_int(chr2(22773:22776,:), 1, count);
  t.pw_gzkd = read_int(chr2(22777:22780,:), 1, count);
  t.pw_gzkdtg = read_int(chr2(22781:22784,:), 1, count);
  t.pw_gzkdtga = read_int(chr2(22785:22788,:), 1, count);
  t.pw_gzkdtgd = read_int(chr2(22789:22792,:), 1, count);
  t.pw_gzkfs = read_int(chr2(22793:22796,:), 1, count);
  t.pw_gzkfsa = read_int(chr2(22797:22800,:), 1, count);
  t.pw_gzkfsd = read_int(chr2(22801:22804,:), 1, count);
  t.pw_gzkgir01 = read_int(chr2(22805:22808,:), 1, count);
  t.pw_gzkgir01a = read_int(chr2(22809:22812,:), 1, count);
  t.pw_gzkgir01d = read_int(chr2(22813:22816,:), 1, count);
  t.pw_gzkgir02 = read_int(chr2(22817:22820,:), 1, count);
  t.pw_gzkgir02a = read_int(chr2(22821:22824,:), 1, count);
  t.pw_gzkgir02d = read_int(chr2(22825:22828,:), 1, count);
  t.pw_gzkill = read_int(chr2(22829:22832,:), 1, count);
  t.pw_gzkilla = read_int(chr2(22833:22836,:), 1, count);
  t.pw_gzkilld = read_int(chr2(22837:22840,:), 1, count);
  t.pw_gzkiller = read_int(chr2(22841:22844,:), 1, count);
  t.pw_gzkillera = read_int(chr2(22845:22848,:), 1, count);
  t.pw_gzkillerd = read_int(chr2(22849:22852,:), 1, count);
  t.pw_gzkmon = read_int(chr2(22853:22856,:), 1, count);
  t.pw_gzkmona = read_int(chr2(22857:22860,:), 1, count);
  t.pw_gzkmond = read_int(chr2(22861:22864,:), 1, count);
  t.pw_gzkmontipup = read_int(chr2(22865:22868,:), 1, count);
  t.pw_gzkmontipupa = read_int(chr2(22869:22872,:), 1, count);
  t.pw_gzkmontipupd = read_int(chr2(22873:22876,:), 1, count);
  t.pw_gzkrcvn = read_int(chr2(22877:22880,:), 1, count);
  t.pw_gzkrcvna = read_int(chr2(22881:22884,:), 1, count);
  t.pw_gzkrcvnd = read_int(chr2(22885:22888,:), 1, count);
  t.pw_gzkrffrir = read_int(chr2(22889:22892,:), 1, count);
  t.pw_gzkrffrira = read_int(chr2(22893:22896,:), 1, count);
  t.pw_gzkrffrird = read_int(chr2(22897:22900,:), 1, count);
  t.pw_gzkrs = read_int(chr2(22901:22904,:), 1, count);
  t.pw_gzkrsa = read_int(chr2(22905:22908,:), 1, count);
  t.pw_gzkrsd = read_int(chr2(22909:22912,:), 1, count);
  t.pw_gzks = read_int(chr2(22913:22916,:), 1, count);
  t.pw_gzks5fp = read_int(chr2(22917:22920,:), 1, count);
  t.pw_gzks5fpa = read_int(chr2(22921:22924,:), 1, count);
  t.pw_gzks5fpd = read_int(chr2(22925:22928,:), 1, count);
  t.pw_gzksa = read_int(chr2(22929:22932,:), 1, count);
  t.pw_gzksd = read_int(chr2(22933:22936,:), 1, count);
  t.pw_gzksp = read_int(chr2(22937:22940,:), 1, count);
  t.pw_gzkspa = read_int(chr2(22941:22944,:), 1, count);
  t.pw_gzkspd = read_int(chr2(22945:22948,:), 1, count);
  t.pw_gzkssf = read_int(chr2(22949:22952,:), 1, count);
  t.pw_gzkssfa = read_int(chr2(22953:22956,:), 1, count);
  t.pw_gzkssfd = read_int(chr2(22957:22960,:), 1, count);
  t.pw_gzp = read_int(chr2(22961:22964,:), 1, count);
  t.pw_gzpa = read_int(chr2(22965:22968,:), 1, count);
  t.pw_gzpd = read_int(chr2(22969:22972,:), 1, count);
  t.pw_gzpf = read_int(chr2(22973:22976,:), 1, count);
  t.pw_gzphtr = read_int(chr2(22977:22980,:), 1, count);
  t.pw_gzphtra = read_int(chr2(22981:22984,:), 1, count);
  t.pw_gzphtrd = read_int(chr2(22985:22988,:), 1, count);
  t.pw_gzphtrf = read_int(chr2(22989:22992,:), 1, count);
  t.pw_gzptm = read_int(chr2(22993:22996,:), 1, count);
  t.pw_gzptma = read_int(chr2(22997:23000,:), 1, count);
  t.pw_gzptmd = read_int(chr2(23001:23004,:), 1, count);
  t.pw_gzrf0 = read_int(chr2(23005:23008,:), 1, count);
  t.pw_gzrf0a = read_int(chr2(23009:23012,:), 1, count);
  t.pw_gzrf0cfh = read_int(chr2(23013:23016,:), 1, count);
  t.pw_gzrf0cfha = read_int(chr2(23017:23020,:), 1, count);
  t.pw_gzrf0cfhd = read_int(chr2(23021:23024,:), 1, count);
  t.pw_gzrf0d = read_int(chr2(23025:23028,:), 1, count);
  t.pw_gzrf0k = read_int(chr2(23029:23032,:), 1, count);
  t.pw_gzrf0ka = read_int(chr2(23033:23036,:), 1, count);
  t.pw_gzrf0kd = read_int(chr2(23037:23040,:), 1, count);
  t.pw_gzrf1 = read_int(chr2(23041:23044,:), 1, count);
  t.pw_gzrf1a = read_int(chr2(23045:23048,:), 1, count);
  t.pw_gzrf1a_temp = read_int(chr2(23049:23052,:), 1, count);
  t.pw_gzrf1as = read_int(chr2(23053:23056,:), 1, count);
  t.pw_gzrf1asa = read_int(chr2(23057:23060,:), 1, count);
  t.pw_gzrf1asd = read_int(chr2(23061:23064,:), 1, count);
  t.pw_gzrf1cfh = read_int(chr2(23065:23068,:), 1, count);
  t.pw_gzrf1cfha = read_int(chr2(23069:23072,:), 1, count);
  t.pw_gzrf1cfhd = read_int(chr2(23073:23076,:), 1, count);
  t.pw_gzrf1cfl = read_int(chr2(23077:23080,:), 1, count);
  t.pw_gzrf1cfla = read_int(chr2(23081:23084,:), 1, count);
  t.pw_gzrf1cfld = read_int(chr2(23085:23088,:), 1, count);
  t.pw_gzrf1d = read_int(chr2(23089:23092,:), 1, count);
  t.pw_gzrf1d_temp = read_int(chr2(23093:23096,:), 1, count);
  t.pw_gzrf1dtg = read_int(chr2(23097:23100,:), 1, count);
  t.pw_gzrf1dtga = read_int(chr2(23101:23104,:), 1, count);
  t.pw_gzrf1dtgd = read_int(chr2(23105:23108,:), 1, count);
  t.pw_gzrf1ftg = read_int(chr2(23109:23112,:), 1, count);
  t.pw_gzrf1ftga = read_int(chr2(23113:23116,:), 1, count);
  t.pw_gzrf1ftgd = read_int(chr2(23117:23120,:), 1, count);
  t.pw_gzrf1htr = read_int(chr2(23121:23124,:), 1, count);
  t.pw_gzrf1htra = read_int(chr2(23125:23128,:), 1, count);
  t.pw_gzrf1htrd = read_int(chr2(23129:23132,:), 1, count);
  t.pw_gzrf1lobe = read_int(chr2(23133:23136,:), 1, count);
  t.pw_gzrf1mon = read_int(chr2(23137:23140,:), 1, count);
  t.pw_gzrf1mona = read_int(chr2(23141:23144,:), 1, count);
  t.pw_gzrf1mond = read_int(chr2(23145:23148,:), 1, count);
  t.pw_gzrf1mps1 = read_int(chr2(23149:23152,:), 1, count);
  t.pw_gzrf1mps1a = read_int(chr2(23153:23156,:), 1, count);
  t.pw_gzrf1mps1d = read_int(chr2(23157:23160,:), 1, count);
  t.pw_gzrf1rs = read_int(chr2(23161:23164,:), 1, count);
  t.pw_gzrf1rsa = read_int(chr2(23165:23168,:), 1, count);
  t.pw_gzrf1rsd = read_int(chr2(23169:23172,:), 1, count);
  t.pw_gzrf1s = read_int(chr2(23173:23176,:), 1, count);
  t.pw_gzrf1sa = read_int(chr2(23177:23180,:), 1, count);
  t.pw_gzrf1sd = read_int(chr2(23181:23184,:), 1, count);
  t.pw_gzrf1xtg = read_int(chr2(23185:23188,:), 1, count);
  t.pw_gzrf1xtga = read_int(chr2(23189:23192,:), 1, count);
  t.pw_gzrf1xtgd = read_int(chr2(23193:23196,:), 1, count);
  t.pw_gzrf2ftg = read_int(chr2(23197:23200,:), 1, count);
  t.pw_gzrf2ftga = read_int(chr2(23201:23204,:), 1, count);
  t.pw_gzrf2ftgd = read_int(chr2(23205:23208,:), 1, count);
  t.pw_gzrf2lcfh = read_int(chr2(23209:23212,:), 1, count);
  t.pw_gzrf2lcfha = read_int(chr2(23213:23216,:), 1, count);
  t.pw_gzrf2lcfhd = read_int(chr2(23217:23220,:), 1, count);
  t.pw_gzrf2lmps1 = read_int(chr2(23221:23224,:), 1, count);
  t.pw_gzrf2lmps1a = read_int(chr2(23225:23228,:), 1, count);
  t.pw_gzrf2lmps1d = read_int(chr2(23229:23232,:), 1, count);
  t.pw_gzrf2mps1 = read_int(chr2(23233:23236,:), 1, count);
  t.pw_gzrf2mps1a = read_int(chr2(23237:23240,:), 1, count);
  t.pw_gzrf2mps1d = read_int(chr2(23241:23244,:), 1, count);
  t.pw_gzrf2rcfh = read_int(chr2(23245:23248,:), 1, count);
  t.pw_gzrf2rcfha = read_int(chr2(23249:23252,:), 1, count);
  t.pw_gzrf2rcfhd = read_int(chr2(23253:23256,:), 1, count);
  t.pw_gzrf2rmps1 = read_int(chr2(23257:23260,:), 1, count);
  t.pw_gzrf2rmps1a = read_int(chr2(23261:23264,:), 1, count);
  t.pw_gzrf2rmps1d = read_int(chr2(23265:23268,:), 1, count);
  t.pw_gzrf2xtg = read_int(chr2(23269:23272,:), 1, count);
  t.pw_gzrf2xtga = read_int(chr2(23273:23276,:), 1, count);
  t.pw_gzrf2xtgd = read_int(chr2(23277:23280,:), 1, count);
  t.pw_gzrf3ftg = read_int(chr2(23281:23284,:), 1, count);
  t.pw_gzrf3ftga = read_int(chr2(23285:23288,:), 1, count);
  t.pw_gzrf3ftgd = read_int(chr2(23289:23292,:), 1, count);
  t.pw_gzrf3lcfh = read_int(chr2(23293:23296,:), 1, count);
  t.pw_gzrf3lcfha = read_int(chr2(23297:23300,:), 1, count);
  t.pw_gzrf3lcfhd = read_int(chr2(23301:23304,:), 1, count);
  t.pw_gzrf3rcfh = read_int(chr2(23305:23308,:), 1, count);
  t.pw_gzrf3rcfha = read_int(chr2(23309:23312,:), 1, count);
  t.pw_gzrf3rcfhd = read_int(chr2(23313:23316,:), 1, count);
  t.pw_gzrf4cfh = read_int(chr2(23317:23320,:), 1, count);
  t.pw_gzrf4cfha = read_int(chr2(23321:23324,:), 1, count);
  t.pw_gzrf4cfhd = read_int(chr2(23325:23328,:), 1, count);
  t.pw_gzrf4lcfh = read_int(chr2(23329:23332,:), 1, count);
  t.pw_gzrf4lcfha = read_int(chr2(23333:23336,:), 1, count);
  t.pw_gzrf4lcfhd = read_int(chr2(23337:23340,:), 1, count);
  t.pw_gzrf4rcfh = read_int(chr2(23341:23344,:), 1, count);
  t.pw_gzrf4rcfha = read_int(chr2(23345:23348,:), 1, count);
  t.pw_gzrf4rcfhd = read_int(chr2(23349:23352,:), 1, count);
  t.pw_gzrffrir = read_int(chr2(23353:23356,:), 1, count);
  t.pw_gzrffrira = read_int(chr2(23357:23360,:), 1, count);
  t.pw_gzrffrird = read_int(chr2(23361:23364,:), 1, count);
  t.pw_gzrfgir01 = read_int(chr2(23365:23368,:), 1, count);
  t.pw_gzrfgir01a = read_int(chr2(23369:23372,:), 1, count);
  t.pw_gzrfgir01d = read_int(chr2(23373:23376,:), 1, count);
  t.pw_gzrfgir02 = read_int(chr2(23377:23380,:), 1, count);
  t.pw_gzrfgir02a = read_int(chr2(23381:23384,:), 1, count);
  t.pw_gzrfgir02d = read_int(chr2(23385:23388,:), 1, count);
  t.pw_gzrfs5fph = read_int(chr2(23389:23392,:), 1, count);
  t.pw_gzrfs5fpha = read_int(chr2(23393:23396,:), 1, count);
  t.pw_gzrfs5fphd = read_int(chr2(23397:23400,:), 1, count);
  t.pw_gzrfse1 = read_int(chr2(23401:23404,:), 1, count);
  t.pw_gzrfse1a = read_int(chr2(23405:23408,:), 1, count);
  t.pw_gzrfse1d = read_int(chr2(23409:23412,:), 1, count);
  t.pw_gzrfse2 = read_int(chr2(23413:23416,:), 1, count);
  t.pw_gzrfse2a = read_int(chr2(23417:23420,:), 1, count);
  t.pw_gzrfse2d = read_int(chr2(23421:23424,:), 1, count);
  t.pw_gzrfse3 = read_int(chr2(23425:23428,:), 1, count);
  t.pw_gzrfse3a = read_int(chr2(23429:23432,:), 1, count);
  t.pw_gzrfse3d = read_int(chr2(23433:23436,:), 1, count);
  t.pw_gzrfse4 = read_int(chr2(23437:23440,:), 1, count);
  t.pw_gzrfse4a = read_int(chr2(23441:23444,:), 1, count);
  t.pw_gzrfse4d = read_int(chr2(23445:23448,:), 1, count);
  t.pw_gzrfse5 = read_int(chr2(23449:23452,:), 1, count);
  t.pw_gzrfse5a = read_int(chr2(23453:23456,:), 1, count);
  t.pw_gzrfse5d = read_int(chr2(23457:23460,:), 1, count);
  t.pw_gzrfse6 = read_int(chr2(23461:23464,:), 1, count);
  t.pw_gzrfse6a = read_int(chr2(23465:23468,:), 1, count);
  t.pw_gzrfse6d = read_int(chr2(23469:23472,:), 1, count);
  t.pw_gzrfssfh = read_int(chr2(23473:23476,:), 1, count);
  t.pw_gzrfssfha = read_int(chr2(23477:23480,:), 1, count);
  t.pw_gzrfssfhd = read_int(chr2(23481:23484,:), 1, count);
  t.pw_gzrfsz1 = read_int(chr2(23485:23488,:), 1, count);
  t.pw_gzrfsz1a = read_int(chr2(23489:23492,:), 1, count);
  t.pw_gzrfsz1d = read_int(chr2(23493:23496,:), 1, count);
  t.pw_gzrfsz2 = read_int(chr2(23497:23500,:), 1, count);
  t.pw_gzrfsz2a = read_int(chr2(23501:23504,:), 1, count);
  t.pw_gzrfsz2d = read_int(chr2(23505:23508,:), 1, count);
  t.pw_gzs5fphcomb = read_int(chr2(23509:23512,:), 1, count);
  t.pw_gzs5fphcomba = read_int(chr2(23513:23516,:), 1, count);
  t.pw_gzs5fphcombd = read_int(chr2(23517:23520,:), 1, count);
  t.pw_gzssfhcomb = read_int(chr2(23521:23524,:), 1, count);
  t.pw_gzssfhcomba = read_int(chr2(23525:23528,:), 1, count);
  t.pw_gzssfhcombd = read_int(chr2(23529:23532,:), 1, count);
  t.pw_gzvlmin = read_int(chr2(23533:23536,:), 1, count);
  t.pw_gzvlw = read_int(chr2(23537:23540,:), 1, count);
  t.pw_hard180 = read_int(chr2(23541:23544,:), 1, count);
  t.pw_hst = read_int(chr2(23545:23548,:), 1, count);
  t.pw_isi7 = read_int(chr2(23549:23552,:), 1, count);
  t.pw_isi_cardiacsat = read_int(chr2(23553:23556,:), 1, count);
  t.pw_isi_gir1 = read_int(chr2(23557:23560,:), 1, count);
  t.pw_isi_gire01 = read_int(chr2(23561:23564,:), 1, count);
  t.pw_isi_gire02 = read_int(chr2(23565:23568,:), 1, count);
  t.pw_isi_girk01 = read_int(chr2(23569:23572,:), 1, count);
  t.pw_isi_girk02 = read_int(chr2(23573:23576,:), 1, count);
  t.pw_isi_sate1 = read_int(chr2(23577:23580,:), 1, count);
  t.pw_isi_sate2 = read_int(chr2(23581:23584,:), 1, count);
  t.pw_isi_sate3 = read_int(chr2(23585:23588,:), 1, count);
  t.pw_isi_sate4 = read_int(chr2(23589:23592,:), 1, count);
  t.pw_isi_sate5 = read_int(chr2(23593:23596,:), 1, count);
  t.pw_isi_sate6 = read_int(chr2(23597:23600,:), 1, count);
  t.pw_isi_satek1 = read_int(chr2(23601:23604,:), 1, count);
  t.pw_isi_satek2 = read_int(chr2(23605:23608,:), 1, count);
  t.pw_isi_satek3 = read_int(chr2(23609:23612,:), 1, count);
  t.pw_isi_satek4 = read_int(chr2(23613:23616,:), 1, count);
  t.pw_isi_satek5 = read_int(chr2(23617:23620,:), 1, count);
  t.pw_isi_satek6 = read_int(chr2(23621:23624,:), 1, count);
  t.pw_isi_satx1 = read_int(chr2(23625:23628,:), 1, count);
  t.pw_isi_satx2 = read_int(chr2(23629:23632,:), 1, count);
  t.pw_isi_satxk1 = read_int(chr2(23633:23636,:), 1, count);
  t.pw_isi_satxk2 = read_int(chr2(23637:23640,:), 1, count);
  t.pw_isi_saty1 = read_int(chr2(23641:23644,:), 1, count);
  t.pw_isi_saty2 = read_int(chr2(23645:23648,:), 1, count);
  t.pw_isi_satyk1 = read_int(chr2(23649:23652,:), 1, count);
  t.pw_isi_satyk2 = read_int(chr2(23653:23656,:), 1, count);
  t.pw_isi_satz1 = read_int(chr2(23657:23660,:), 1, count);
  t.pw_isi_satz2 = read_int(chr2(23661:23664,:), 1, count);
  t.pw_isi_satzk1 = read_int(chr2(23665:23668,:), 1, count);
  t.pw_isi_satzk2 = read_int(chr2(23669:23672,:), 1, count);
  t.pw_isi_slice1 = read_int(chr2(23673:23676,:), 1, count);
  t.pw_isi_slice2 = read_int(chr2(23677:23680,:), 1, count);
  t.pw_isigir = read_int(chr2(23681:23684,:), 1, count);
  t.pw_isisat = read_int(chr2(23685:23688,:), 1, count);
  t.pw_isislice = read_int(chr2(23689:23692,:), 1, count);
  t.pw_maps1 = read_int(chr2(23693:23696,:), 1, count);
  t.pw_maps2 = read_int(chr2(23697:23700,:), 1, count);
  t.pw_mapx = read_int(chr2(23701:23704,:), 1, count);
  t.pw_mapy = read_int(chr2(23705:23708,:), 1, count);
  t.pw_mapz = read_int(chr2(23709:23712,:), 1, count);
  t.pw_mpomega_td0 = read_int(chr2(23713:23716,:), 1, count);
  t.pw_mprho_td0 = read_int(chr2(23717:23720,:), 1, count);
  t.pw_mpssp_td0 = read_int(chr2(23721:23724,:), 1, count);
  t.pw_mptheta_td0 = read_int(chr2(23725:23728,:), 1, count);
  t.pw_mpx_td0 = read_int(chr2(23729:23732,:), 1, count);
  t.pw_mpy_td0 = read_int(chr2(23733:23736,:), 1, count);
  t.pw_mpz_td0 = read_int(chr2(23737:23740,:), 1, count);
  t.pw_nomcyl = read_int(chr2(23741:23744,:), 1, count);
  t.pw_omega_hs_rfcssat = read_int(chr2(23745:23748,:), 1, count);
  t.pw_omega_ir0 = read_int(chr2(23749:23752,:), 1, count);
  t.pw_omega_rffrir = read_int(chr2(23753:23756,:), 1, count);
  t.pw_omega_rfgir01 = read_int(chr2(23757:23760,:), 1, count);
  t.pw_omega_rfgir02 = read_int(chr2(23761:23764,:), 1, count);
  t.pw_omegarf0cfh = read_int(chr2(23765:23768,:), 1, count);
  t.pw_postgxw1ftg = read_int(chr2(23769:23772,:), 1, count);
  t.pw_postgxw1ftga = read_int(chr2(23773:23776,:), 1, count);
  t.pw_postgxw1ftgd = read_int(chr2(23777:23780,:), 1, count);
  t.pw_rampx = read_int(chr2(23781:23784,:), 1, count);
  t.pw_rampy = read_int(chr2(23785:23788,:), 1, count);
  t.pw_rampz = read_int(chr2(23789:23792,:), 1, count);
  t.pw_rcvn_wait = read_int(chr2(23793:23796,:), 1, count);
  t.pw_rf0 = read_int(chr2(23797:23800,:), 1, count);
  t.pw_rf0cfh = read_int(chr2(23801:23804,:), 1, count);
  t.pw_rf1 = read_int(chr2(23805:23808,:), 1, count);
  t.pw_rf180 = read_int(chr2(23809:23812,:), 1, count);
  t.pw_rf1_full = read_int(chr2(23813:23816,:), 1, count);
  t.pw_rf1_pre = read_int(chr2(23817:23820,:), 1, count);
  t.pw_rf1as = read_int(chr2(23821:23824,:), 1, count);
  t.pw_rf1cfh = read_int(chr2(23825:23828,:), 1, count);
  t.pw_rf1cfl = read_int(chr2(23829:23832,:), 1, count);
  t.pw_rf1dtg = read_int(chr2(23833:23836,:), 1, count);
  t.pw_rf1ftg = read_int(chr2(23837:23840,:), 1, count);
  t.pw_rf1htr = read_int(chr2(23841:23844,:), 1, count);
  t.pw_rf1mon = read_int(chr2(23845:23848,:), 1, count);
  t.pw_rf1mps1 = read_int(chr2(23849:23852,:), 1, count);
  t.pw_rf1rs = read_int(chr2(23853:23856,:), 1, count);
  t.pw_rf1tm = read_int(chr2(23857:23860,:), 1, count);
  t.pw_rf1xtg = read_int(chr2(23861:23864,:), 1, count);
  t.pw_rf2cfh = read_int(chr2(23865:23868,:), 1, count);
  t.pw_rf2ftg = read_int(chr2(23869:23872,:), 1, count);
  t.pw_rf2mon = read_int(chr2(23873:23876,:), 1, count);
  t.pw_rf2mps1 = read_int(chr2(23877:23880,:), 1, count);
  t.pw_rf2xtg = read_int(chr2(23881:23884,:), 1, count);
  t.pw_rf3cfh = read_int(chr2(23885:23888,:), 1, count);
  t.pw_rf3ftg = read_int(chr2(23889:23892,:), 1, count);
  t.pw_rf3xtg = read_int(chr2(23893:23896,:), 1, count);
  t.pw_rf4cfh = read_int(chr2(23897:23900,:), 1, count);
  t.pw_rf4xtg = read_int(chr2(23901:23904,:), 1, count);
  t.pw_rf90 = read_int(chr2(23905:23908,:), 1, count);
  t.pw_rfbdtg = read_int(chr2(23909:23912,:), 1, count);
  t.pw_rfbrs = read_int(chr2(23913:23916,:), 1, count);
  t.pw_rfcssat = read_int(chr2(23917:23920,:), 1, count);
  t.pw_rfcssatcfh = read_int(chr2(23921:23924,:), 1, count);
  t.pw_rfcylr = read_int(chr2(23925:23928,:), 1, count);
  t.pw_rfcylrtipup = read_int(chr2(23929:23932,:), 1, count);
  t.pw_rfflp180 = read_int(chr2(23933:23936,:), 1, count);
  t.pw_rfflp180_the = read_int(chr2(23937:23940,:), 1, count);
  t.pw_rfflp90 = read_int(chr2(23941:23944,:), 1, count);
  t.pw_rfflp90_the = read_int(chr2(23945:23948,:), 1, count);
  t.pw_rfflp90r = read_int(chr2(23949:23952,:), 1, count);
  t.pw_rfflp90r_the = read_int(chr2(23953:23956,:), 1, count);
  t.pw_rffrir = read_int(chr2(23957:23960,:), 1, count);
  t.pw_rffs = read_int(chr2(23961:23964,:), 1, count);
  t.pw_rfgir01 = read_int(chr2(23965:23968,:), 1, count);
  t.pw_rfgir02 = read_int(chr2(23969:23972,:), 1, count);
  t.pw_rfmontipup = read_int(chr2(23973:23976,:), 1, count);
  t.pw_rfs = read_int(chr2(23977:23980,:), 1, count);
  t.pw_rfs5fph = read_int(chr2(23981:23984,:), 1, count);
  t.pw_rfse1 = read_int(chr2(23985:23988,:), 1, count);
  t.pw_rfse2 = read_int(chr2(23989:23992,:), 1, count);
  t.pw_rfse3 = read_int(chr2(23993:23996,:), 1, count);
  t.pw_rfse4 = read_int(chr2(23997:24000,:), 1, count);
  t.pw_rfse5 = read_int(chr2(24001:24004,:), 1, count);
  t.pw_rfse6 = read_int(chr2(24005:24008,:), 1, count);
  t.pw_rfssf = read_int(chr2(24009:24012,:), 1, count);
  t.pw_rfssfh = read_int(chr2(24013:24016,:), 1, count);
  t.pw_rfsx1 = read_int(chr2(24017:24020,:), 1, count);
  t.pw_rfsx2 = read_int(chr2(24021:24024,:), 1, count);
  t.pw_rfsy1 = read_int(chr2(24025:24028,:), 1, count);
  t.pw_rfsy2 = read_int(chr2(24029:24032,:), 1, count);
  t.pw_rfsz1 = read_int(chr2(24033:24036,:), 1, count);
  t.pw_rfsz2 = read_int(chr2(24037:24040,:), 1, count);
  t.pw_rftipup = read_int(chr2(24041:24044,:), 1, count);
  t.pw_rot_slice1 = read_int(chr2(24045:24048,:), 1, count);
  t.pw_rot_slice2 = read_int(chr2(24049:24052,:), 1, count);
  t.pw_rot_update_cardiacsat = read_int(chr2(24053:24056,:), 1, count);
  t.pw_rot_update_e1 = read_int(chr2(24057:24060,:), 1, count);
  t.pw_rot_update_e2 = read_int(chr2(24061:24064,:), 1, count);
  t.pw_rot_update_e3 = read_int(chr2(24065:24068,:), 1, count);
  t.pw_rot_update_e4 = read_int(chr2(24069:24072,:), 1, count);
  t.pw_rot_update_e5 = read_int(chr2(24073:24076,:), 1, count);
  t.pw_rot_update_e6 = read_int(chr2(24077:24080,:), 1, count);
  t.pw_rot_update_ek1 = read_int(chr2(24081:24084,:), 1, count);
  t.pw_rot_update_ek2 = read_int(chr2(24085:24088,:), 1, count);
  t.pw_rot_update_ek3 = read_int(chr2(24089:24092,:), 1, count);
  t.pw_rot_update_ek4 = read_int(chr2(24093:24096,:), 1, count);
  t.pw_rot_update_ek5 = read_int(chr2(24097:24100,:), 1, count);
  t.pw_rot_update_ek6 = read_int(chr2(24101:24104,:), 1, count);
  t.pw_rot_update_gir = read_int(chr2(24105:24108,:), 1, count);
  t.pw_rot_update_gire01 = read_int(chr2(24109:24112,:), 1, count);
  t.pw_rot_update_girk01 = read_int(chr2(24113:24116,:), 1, count);
  t.pw_rot_update_girk02 = read_int(chr2(24117:24120,:), 1, count);
  t.pw_rot_update_rfgir02 = read_int(chr2(24121:24124,:), 1, count);
  t.pw_rot_update_x1 = read_int(chr2(24125:24128,:), 1, count);
  t.pw_rot_update_x2 = read_int(chr2(24129:24132,:), 1, count);
  t.pw_rot_update_xk1 = read_int(chr2(24133:24136,:), 1, count);
  t.pw_rot_update_xk2 = read_int(chr2(24137:24140,:), 1, count);
  t.pw_rot_update_y1 = read_int(chr2(24141:24144,:), 1, count);
  t.pw_rot_update_y2 = read_int(chr2(24145:24148,:), 1, count);
  t.pw_rot_update_yk1 = read_int(chr2(24149:24152,:), 1, count);
  t.pw_rot_update_yk2 = read_int(chr2(24153:24156,:), 1, count);
  t.pw_rot_update_z1 = read_int(chr2(24157:24160,:), 1, count);
  t.pw_rot_update_z2 = read_int(chr2(24161:24164,:), 1, count);
  t.pw_rot_update_zk1 = read_int(chr2(24165:24168,:), 1, count);
  t.pw_rot_update_zk2 = read_int(chr2(24169:24172,:), 1, count);
  t.pw_rotslice = read_int(chr2(24173:24176,:), 1, count);
  t.pw_rotupdate = read_int(chr2(24177:24180,:), 1, count);
  t.pw_rotupdate_gir = read_int(chr2(24181:24184,:), 1, count);
  t.pw_rticfh = read_int(chr2(24185:24188,:), 1, count);
  t.pw_satrampx = read_int(chr2(24189:24192,:), 1, count);
  t.pw_satrampy = read_int(chr2(24193:24196,:), 1, count);
  t.pw_satrampz = read_int(chr2(24197:24200,:), 1, count);
  t.pw_sdixon = read_int(chr2(24201:24204,:), 1, count);
  t.pw_sdixon2 = read_int(chr2(24205:24208,:), 1, count);
  t.pw_ss_rampz = read_int(chr2(24209:24212,:), 1, count);
  t.pw_sticfh = read_int(chr2(24213:24216,:), 1, count);
  t.pw_thcylr = read_int(chr2(24217:24220,:), 1, count);
  t.pw_thcylrtipup = read_int(chr2(24221:24224,:), 1, count);
  t.pw_thetarf1 = read_int(chr2(24225:24228,:), 1, count);
  t.pw_xdelay = read_int(chr2(24229:24232,:), 1, count);
  t.pw_xdixon = read_int(chr2(24233:24236,:), 1, count);
  t.pw_xrespgate = read_int(chr2(24237:24240,:), 1, count);
  t.pw_xticfh = read_int(chr2(24241:24244,:), 1, count);
  t.pw_y_ccs_null = read_int(chr2(24245:24248,:), 1, count);
  t.pw_ydixon = read_int(chr2(24249:24252,:), 1, count);
  t.pw_yticfh = read_int(chr2(24253:24256,:), 1, count);
  t.pw_zdixon = read_int(chr2(24257:24260,:), 1, count);
  t.pw_zticfh = read_int(chr2(24261:24264,:), 1, count);
  t.px_pwmtime = read_int(chr2(24265:24268,:), 1, count);
  t.py_pwmtime = read_int(chr2(24269:24272,:), 1, count);
  t.pz_pwmtime = read_int(chr2(24273:24276,:), 1, count);
  t.quickstep_flag = read_int(chr2(24277:24280,:), 1, count);
  t.radfb_flag = read_int(chr2(24281:24284,:), 1, count);
  t.ratio_rfflp90 = read_float(chr2(24285:24288,:), 1, count);
  t.ratio_rfflp90r = read_float(chr2(24289:24292,:), 1, count);
  t.rawdata = read_int(chr2(24293:24296,:), 1, count);
  t.rawmode = read_int(chr2(24297:24300,:), 1, count);
  t.rbw = read_float(chr2(24301:24304,:), 1, count);
  t.rcvn_dda = read_int(chr2(24305:24308,:), 1, count);
  t.rcvn_flag = read_int(chr2(24309:24312,:), 1, count);
  t.rcvn_loops = read_int(chr2(24313:24316,:), 1, count);
  t.rcvn_nex = read_int(chr2(24317:24320,:), 1, count);
  t.rcvn_tdaq = read_int(chr2(24321:24324,:), 1, count);
  t.rcvn_tr = read_int(chr2(24325:24328,:), 1, count);
  t.rcvn_xres = read_int(chr2(24329:24332,:), 1, count);
  t.rcvnloggrd = read_LOG_GRAD(chr2(24333:24632,:), 1, count);
  t.rcvr_ub_off = read_int(chr2(24633:24636,:), 1, count);
  t.rd_ext_dtg = read_int(chr2(24637:24640,:), 1, count);
  t.rd_ext_rs = read_int(chr2(24641:24644,:), 1, count);
  t.rda_mon = read_int(chr2(24645:24648,:), 1, count);
  t.read_axis = read_WF_PROCESSOR(chr2(24649:24652,:), 1, count);
  t.read_col = read_int(chr2(24653:24656,:), 1, count);
  t.readmonloc = read_int(chr2(24657:24660,:), 1, count);
  t.rec_mode = read_int(chr2(24661:24664,:), 1, count);
  t.recon_1024 = read_int(chr2(24665:24668,:), 1, count);
  t.recon_imag_image = read_int(chr2(24669:24672,:), 1, count);
  t.recon_mag_image = read_int(chr2(24673:24676,:), 1, count);
  t.recon_pha_image = read_int(chr2(24677:24680,:), 1, count);
  t.recon_qmag_image = read_int(chr2(24681:24684,:), 1, count);
  t.rectfov_npw_support = read_int(chr2(24685:24688,:), 1, count);
  t.refocus = read_float(chr2(24689:24692,:), 1, count);
  t.regViewOrderMode = read_int(chr2(24693:24696,:), 1, count);
  t.region_order_mode = read_int(chr2(24697:24700,:), 1, count);
  t.reilly_mode = read_int(chr2(24701:24704,:), 1, count);
  t.res_dephase = read_int(chr2(24705:24708,:), 1, count);
  t.res_dummyrf = read_int(chr2(24709:24712,:), 1, count);
  t.res_gx1 = read_int(chr2(24713:24716,:), 1, count);
  t.res_gxspiral = read_int(chr2(24717:24720,:), 1, count);
  t.res_gxspiral2 = read_int(chr2(24721:24724,:), 1, count);
  t.res_gy1 = read_int(chr2(24725:24728,:), 1, count);
  t.res_gy1r = read_int(chr2(24729:24732,:), 1, count);
  t.res_gycylr = read_int(chr2(24733:24736,:), 1, count);
  t.res_gycylra = read_int(chr2(24737:24740,:), 1, count);
  t.res_gycylratipup = read_int(chr2(24741:24744,:), 1, count);
  t.res_gycylrtipup = read_int(chr2(24745:24748,:), 1, count);
  t.res_gyspiral = read_int(chr2(24749:24752,:), 1, count);
  t.res_gyspiral2 = read_int(chr2(24753:24756,:), 1, count);
  t.res_gzcomb = read_int(chr2(24757:24760,:), 1, count);
  t.res_gzcombhtr = read_int(chr2(24761:24764,:), 1, count);
  t.res_gzcylr = read_int(chr2(24765:24768,:), 1, count);
  t.res_gzcylra = read_int(chr2(24769:24772,:), 1, count);
  t.res_gzcylratipup = read_int(chr2(24773:24776,:), 1, count);
  t.res_gzcylrtipup = read_int(chr2(24777:24780,:), 1, count);
  t.res_gzp = read_int(chr2(24781:24784,:), 1, count);
  t.res_gzphtr = read_int(chr2(24785:24788,:), 1, count);
  t.res_gzrf0 = read_int(chr2(24789:24792,:), 1, count);
  t.res_gzrf0cfh = read_int(chr2(24793:24796,:), 1, count);
  t.res_gzrf1 = read_int(chr2(24797:24800,:), 1, count);
  t.res_gzrffrir = read_int(chr2(24801:24804,:), 1, count);
  t.res_gzrfgir01 = read_int(chr2(24805:24808,:), 1, count);
  t.res_gzrfgir02 = read_int(chr2(24809:24812,:), 1, count);
  t.res_gzvlw = read_int(chr2(24813:24816,:), 1, count);
  t.res_hard180 = read_int(chr2(24817:24820,:), 1, count);
  t.res_omega_hs_rfcssat = read_int(chr2(24821:24824,:), 1, count);
  t.res_omega_ir0 = read_int(chr2(24825:24828,:), 1, count);
  t.res_omega_rffrir = read_int(chr2(24829:24832,:), 1, count);
  t.res_omega_rfgir01 = read_int(chr2(24833:24836,:), 1, count);
  t.res_omega_rfgir02 = read_int(chr2(24837:24840,:), 1, count);
  t.res_omegarf0cfh = read_int(chr2(24841:24844,:), 1, count);
  t.res_rf0 = read_int(chr2(24845:24848,:), 1, count);
  t.res_rf0cfh = read_int(chr2(24849:24852,:), 1, count);
  t.res_rf1 = read_int(chr2(24853:24856,:), 1, count);
  t.res_rf180 = read_int(chr2(24857:24860,:), 1, count);
  t.res_rf1_full = read_int(chr2(24861:24864,:), 1, count);
  t.res_rf1_temp = read_int(chr2(24865:24868,:), 1, count);
  t.res_rf1as = read_int(chr2(24869:24872,:), 1, count);
  t.res_rf1cfh = read_int(chr2(24873:24876,:), 1, count);
  t.res_rf1cfl = read_int(chr2(24877:24880,:), 1, count);
  t.res_rf1dtg = read_int(chr2(24881:24884,:), 1, count);
  t.res_rf1ftg = read_int(chr2(24885:24888,:), 1, count);
  t.res_rf1htr = read_int(chr2(24889:24892,:), 1, count);
  t.res_rf1mon = read_int(chr2(24893:24896,:), 1, count);
  t.res_rf1mps1 = read_int(chr2(24897:24900,:), 1, count);
  t.res_rf1rs = read_int(chr2(24901:24904,:), 1, count);
  t.res_rf1tm = read_int(chr2(24905:24908,:), 1, count);
  t.res_rf1xtg = read_int(chr2(24909:24912,:), 1, count);
  t.res_rf2cfh = read_int(chr2(24913:24916,:), 1, count);
  t.res_rf2ftg = read_int(chr2(24917:24920,:), 1, count);
  t.res_rf2mon = read_int(chr2(24921:24924,:), 1, count);
  t.res_rf2mps1 = read_int(chr2(24925:24928,:), 1, count);
  t.res_rf2xtg = read_int(chr2(24929:24932,:), 1, count);
  t.res_rf3cfh = read_int(chr2(24933:24936,:), 1, count);
  t.res_rf3ftg = read_int(chr2(24937:24940,:), 1, count);
  t.res_rf3xtg = read_int(chr2(24941:24944,:), 1, count);
  t.res_rf4cfh = read_int(chr2(24945:24948,:), 1, count);
  t.res_rf4xtg = read_int(chr2(24949:24952,:), 1, count);
  t.res_rf90 = read_int(chr2(24953:24956,:), 1, count);
  t.res_rfbdtg = read_int(chr2(24957:24960,:), 1, count);
  t.res_rfbrs = read_int(chr2(24961:24964,:), 1, count);
  t.res_rfcssat = read_int(chr2(24965:24968,:), 1, count);
  t.res_rfcylr = read_int(chr2(24969:24972,:), 1, count);
  t.res_rfcylrtipup = read_int(chr2(24973:24976,:), 1, count);
  t.res_rfflp180 = read_int(chr2(24977:24980,:), 1, count);
  t.res_rfflp180_the = read_int(chr2(24981:24984,:), 1, count);
  t.res_rfflp90 = read_int(chr2(24985:24988,:), 1, count);
  t.res_rfflp90_the = read_int(chr2(24989:24992,:), 1, count);
  t.res_rfflp90r = read_int(chr2(24993:24996,:), 1, count);
  t.res_rfflp90r_the = read_int(chr2(24997:25000,:), 1, count);
  t.res_rffrir = read_int(chr2(25001:25004,:), 1, count);
  t.res_rffs = read_int(chr2(25005:25008,:), 1, count);
  t.res_rfgir01 = read_int(chr2(25009:25012,:), 1, count);
  t.res_rfgir02 = read_int(chr2(25013:25016,:), 1, count);
  t.res_rfmontipup = read_int(chr2(25017:25020,:), 1, count);
  t.res_rfs5fph = read_int(chr2(25021:25024,:), 1, count);
  t.res_rfse1 = read_int(chr2(25025:25028,:), 1, count);
  t.res_rfse2 = read_int(chr2(25029:25032,:), 1, count);
  t.res_rfse3 = read_int(chr2(25033:25036,:), 1, count);
  t.res_rfse4 = read_int(chr2(25037:25040,:), 1, count);
  t.res_rfse5 = read_int(chr2(25041:25044,:), 1, count);
  t.res_rfse6 = read_int(chr2(25045:25048,:), 1, count);
  t.res_rfssf = read_int(chr2(25049:25052,:), 1, count);
  t.res_rfssfh = read_int(chr2(25053:25056,:), 1, count);
  t.res_rfsx1 = read_int(chr2(25057:25060,:), 1, count);
  t.res_rfsx2 = read_int(chr2(25061:25064,:), 1, count);
  t.res_rfsy1 = read_int(chr2(25065:25068,:), 1, count);
  t.res_rfsy2 = read_int(chr2(25069:25072,:), 1, count);
  t.res_rfsz1 = read_int(chr2(25073:25076,:), 1, count);
  t.res_rfsz2 = read_int(chr2(25077:25080,:), 1, count);
  t.res_rftipup = read_int(chr2(25081:25084,:), 1, count);
  t.res_thcylr = read_int(chr2(25085:25088,:), 1, count);
  t.res_thcylrtipup = read_int(chr2(25089:25092,:), 1, count);
  t.res_thetarf1 = read_int(chr2(25093:25096,:), 1, count);
  t.res_thetarfbdtg = read_int(chr2(25097:25100,:), 1, count);
  t.res_thetarfbrs = read_int(chr2(25101:25104,:), 1, count);
  t.resp_centk_percent = read_int(chr2(25105:25108,:), 1, count);
  t.resp_dda = read_int(chr2(25109:25112,:), 1, count);
  t.resp_gate_trig_sw = read_int(chr2(25113:25116,:), 1, count);
  t.resp_nex = read_int(chr2(25117:25120,:), 1, count);
  t.respdc = read_float(chr2(25121:25124,:), 1, count);
  t.respgate_flag = read_int(chr2(25125:25128,:), 1, count);
  t.respseqcore = read_int(chr2(25129:25132,:), 1, count);
  t.retropc_extra = read_int(chr2(25133:25136,:), 1, count);
  t.reverseLoopOrder_flag = read_int(chr2(25137:25140,:), 1, count);
  t.reverse_centric_flag = read_int(chr2(25141:25144,:), 1, count);
  t.reverse_ellipt_flag = read_int(chr2(25145:25148,:), 1, count);
  t.reverse_first_region_flag = read_int(chr2(25149:25152,:), 1, count);
  t.reverse_views = read_int(chr2(25153:25156,:), 1, count);
  t.rewinder_flag = read_int(chr2(25157:25160,:), 1, count);
  t.rewinding_time = read_int(chr2(25161:25164,:), 1, count);
  t.rf0_phase = read_float(chr2(25165:25168,:), 1, count);
  t.rf0_pulse_type = read_int(chr2(25169:25172,:), 1, count);
  t.rf1_pulse_type = read_int(chr2(25173:25176,:), 1, count);
  t.rf1dtg_scale = read_float(chr2(25177:25180,:), 1, count);
  t.rf1dtg_type = read_int(chr2(25181:25184,:), 1, count);
  t.rf1mon_shift = read_float(chr2(25185:25188,:), 1, count);
  t.rf1rs_scale = read_float(chr2(25189:25192,:), 1, count);
  t.rf1rs_type = read_int(chr2(25193:25196,:), 1, count);
  t.rf2mon_shift = read_float(chr2(25197:25200,:), 1, count);
  t.rf_scale_fac = read_float(chr2(25201:25204,:), 1, count);
  t.rfb1opt_counter = read_int(chr2(25205:25208,:), 1, count);
  t.rfb1opt_flag = read_int(chr2(25209:25212,:), 1, count);
  t.rfconf = read_int(chr2(25213:25216,:), 1, count);
  t.rffrir_phase = read_float(chr2(25217:25220,:), 1, count);
  t.rfgir01_phase = read_float(chr2(25221:25224,:), 1, count);
  t.rfgir01_start = read_int(chr2(25225:25228,:), 1, count);
  t.rfgir01_time = read_int(chr2(25229:25232,:), 1, count);
  t.rfgir01_type = read_int(chr2(25233:25236,:), 1, count);
  t.rfgir01_wait = read_int(chr2(25237:25240,:), 1, count);
  t.rfgir02_phase = read_float(chr2(25241:25244,:), 1, count);
  t.rfgir02_start = read_int(chr2(25245:25248,:), 1, count);
  t.rfgir02_time = read_int(chr2(25249:25252,:), 1, count);
  t.rfgir02_type = read_int(chr2(25253:25256,:), 1, count);
  t.rfgir02_wait = read_int(chr2(25257:25260,:), 1, count);
  t.rfsafetyopt_timeflag = read_int(chr2(25261:25264,:), 1, count);
  t.rfshim_b1factor = read_float(chr2(25265:25268,:), 1, count);
  t.rfshim_baseline = read_int(chr2(25269:25272,:), 1, count);
  t.rfshim_etl = read_int(chr2(25273:25276,:), 1, count);
  t.rfshim_flipangle = read_float(chr2(25277:25280,:), 1, count);
  t.rfshim_fov = read_float(chr2(25281:25284,:), 1, count);
  t.rfshim_ptsize = read_int(chr2(25285:25288,:), 1, count);
  t.rfshim_slquant = read_int(chr2(25289:25292,:), 1, count);
  t.rfshim_slthick = read_float(chr2(25293:25296,:), 1, count);
  t.rfshim_xres = read_int(chr2(25297:25300,:), 1, count);
  t.rfshim_yres = read_int(chr2(25301:25304,:), 1, count);
  t.rfslot_hard180 = read_int(chr2(25305:25308,:), 1, count);
  t.rfslot_omega_hs_rfcssat = read_int(chr2(25309:25312,:), 1, count);
  t.rfslot_omega_ir0 = read_int(chr2(25313:25316,:), 1, count);
  t.rfslot_omega_rffrir = read_int(chr2(25317:25320,:), 1, count);
  t.rfslot_omega_rfgir01 = read_int(chr2(25321:25324,:), 1, count);
  t.rfslot_omega_rfgir02 = read_int(chr2(25325:25328,:), 1, count);
  t.rfslot_omegarf0cfh = read_int(chr2(25329:25332,:), 1, count);
  t.rfslot_rf90 = read_int(chr2(25333:25336,:), 1, count);
  t.rfslot_rfflp180 = read_int(chr2(25337:25340,:), 1, count);
  t.rfslot_rfflp180_the = read_int(chr2(25341:25344,:), 1, count);
  t.rfslot_rfflp90 = read_int(chr2(25345:25348,:), 1, count);
  t.rfslot_rfflp90_the = read_int(chr2(25349:25352,:), 1, count);
  t.rfslot_rfflp90r = read_int(chr2(25353:25356,:), 1, count);
  t.rfslot_rfflp90r_the = read_int(chr2(25357:25360,:), 1, count);
  t.rfslot_rftipup = read_int(chr2(25361:25364,:), 1, count);
  t.rftype = read_int(chr2(25365:25368,:), 1, count);
  t.rfupacv = read_int(chr2(25369:25372,:), 1, count);
  t.rgfeature_enable = read_int(chr2(25373:25376,:), 1, count);
  t.rh2dscale = read_float(chr2(25377:25380,:), 1, count);
  t.rh3dgw_interptype = read_int(chr2(25381:25384,:), 1, count);
  t.rh3dscale = read_float(chr2(25385:25388,:), 1, count);
  t.rh3dwina = read_float(chr2(25389:25392,:), 1, count);
  t.rh3dwinq = read_float(chr2(25393:25396,:), 1, count);
  t.rh3dwintype = read_int(chr2(25397:25400,:), 1, count);
  t.rhFillMapLSW = read_int(chr2(25401:25404,:), 1, count);
  t.rhFillMapMSW = read_int(chr2(25405:25408,:), 1, count);
  t.rh_ime_clariview_edge = read_float(chr2(25409:25412,:), 1, count);
  t.rh_ime_clariview_focus = read_float(chr2(25413:25416,:), 1, count);
  t.rh_ime_clariview_smooth = read_float(chr2(25417:25420,:), 1, count);
  t.rh_ime_clariview_type = read_int(chr2(25421:25424,:), 1, count);
  t.rh_ime_definefilter_nr = read_int(chr2(25425:25428,:), 1, count);
  t.rh_ime_definefilter_sh = read_int(chr2(25429:25432,:), 1, count);
  t.rh_ime_scic_edge = read_float(chr2(25433:25436,:), 1, count);
  t.rh_ime_scic_enable = read_int(chr2(25437:25440,:), 1, count);
  t.rh_ime_scic_focus = read_float(chr2(25441:25444,:), 1, count);
  t.rh_ime_scic_gauss = read_float(chr2(25445:25448,:), 1, count);
  t.rh_ime_scic_reduction = read_float(chr2(25449:25452,:), 1, count);
  t.rh_ime_scic_smooth = read_float(chr2(25453:25456,:), 1, count);
  t.rh_ime_scic_threshold = read_float(chr2(25457:25460,:), 1, count);
  t.rh_low_pass_nex_filter_width = read_float(chr2(25461:25464,:), 1, count);
  t.rh_rc_enhance_enable = read_int(chr2(25465:25468,:), 1, count);
  t.rhalpha = read_float(chr2(25469:25472,:), 1, count);
  t.rhalt = read_int(chr2(25473:25476,:), 1, count);
  t.rhapfov = read_int(chr2(25477:25480,:), 1, count);
  t.rhaphases = read_int(chr2(25481:25484,:), 1, count);
  t.rhapp = read_int(chr2(25485:25488,:), 1, count);
  t.rhapp_option = read_int(chr2(25489:25492,:), 1, count);
  t.rhasl_perf_weighted_scale = read_int(chr2(25493:25496,:), 1, count);
  t.rhasset = read_int(chr2(25497:25500,:), 1, count);
  t.rhasset_R = read_float(chr2(25501:25504,:), 1, count);
  t.rhasset_alt_cal = read_int(chr2(25505:25508,:), 1, count);
  t.rhasset_calthresh = read_int(chr2(25509:25512,:), 1, count);
  t.rhasset_localTx = read_int(chr2(25513:25516,:), 1, count);
  t.rhasset_phases = read_int(chr2(25517:25520,:), 1, count);
  t.rhasset_slwrap = read_float(chr2(25521:25524,:), 1, count);
  t.rhasset_torso = read_int(chr2(25525:25528,:), 1, count);
  t.rhassetsl_R = read_float(chr2(25529:25532,:), 1, count);
  t.rhb0map = read_int(chr2(25533:25536,:), 1, count);
  t.rhblank = read_int(chr2(25537:25540,:), 1, count);
  t.rhbline = read_int(chr2(25541:25544,:), 1, count);
  t.rhbp_corr = read_int(chr2(25545:25548,:), 1, count);
  t.rhcal_nex_vector = read_int(chr2(25549:25552,:), 1, count);
  t.rhcal_options = read_int(chr2(25553:25556,:), 1, count);
  t.rhcal_pass_set_vector = read_int(chr2(25557:25560,:), 1, count);
  t.rhcal_weight_vector = read_int(chr2(25561:25564,:), 1, count);
  t.rhcalmode = read_int(chr2(25565:25568,:), 1, count);
  t.rhchannel_combine_filter_beta = read_float(chr2(25569:25572,:), 1, count);
  t.rhchannel_combine_filter_type = read_int(chr2(25573:25576,:), 1, count);
  t.rhchannel_combine_filter_width = read_float(chr2(25577:25580,:), 1, count);
  t.rhchannel_combine_method = read_int(chr2(25581:25584,:), 1, count);
  t.rhclipmax = read_float(chr2(25585:25588,:), 1, count);
  t.rhclipmin = read_float(chr2(25589:25592,:), 1, count);
  t.rhcoilno = read_int(chr2(25593:25596,:), 1, count);
  t.rhcorrelationThreshold = read_float(chr2(25597:25600,:), 1, count);
  t.rhcphases = read_int(chr2(25601:25604,:), 1, count);
  t.rhcrrtime = read_float(chr2(25605:25608,:), 1, count);
  t.rhcs_consistency = read_float(chr2(25609:25612,:), 1, count);
  t.rhcs_factor = read_float(chr2(25613:25616,:), 1, count);
  t.rhcs_flag = read_int(chr2(25617:25620,:), 1, count);
  t.rhcs_maxiter = read_int(chr2(25621:25624,:), 1, count);
  t.rhcs_ph_stride = read_int(chr2(25625:25628,:), 1, count);
  t.rhcs_sl_stride = read_int(chr2(25629:25632,:), 1, count);
  t.rhctr = read_float(chr2(25633:25636,:), 1, count);
  t.rhdab0e = read_int(chr2(25637:25640,:), 1, count);
  t.rhdab0s = read_int(chr2(25641:25644,:), 1, count);
  t.rhdacqctrl = read_int(chr2(25645:25648,:), 1, count);
  t.rhdatacq = read_int(chr2(25649:25652,:), 1, count);
  t.rhdaviewsPerBlade = read_int(chr2(25653:25656,:), 1, count);
  t.rhdaxres = read_int(chr2(25657:25660,:), 1, count);
  t.rhdayres = read_int(chr2(25661:25664,:), 1, count);
  t.rhdbgrecon = read_int(chr2(25665:25668,:), 1, count);
  t.rhddaover = read_int(chr2(25669:25672,:), 1, count);
  t.rhdensityfactor = read_float(chr2(25673:25676,:), 1, count);
  t.rhdf = read_int(chr2(25677:25680,:), 1, count);
  t.rhdfm = read_int(chr2(25681:25684,:), 1, count);
  t.rhdfmdebug = read_int(chr2(25685:25688,:), 1, count);
  t.rhdfmnavsperpass = read_int(chr2(25689:25692,:), 1, count);
  t.rhdfmnavsperview = read_int(chr2(25693:25696,:), 1, count);
  t.rhdfmptsize = read_int(chr2(25697:25700,:), 1, count);
  t.rhdfmrbw = read_float(chr2(25701:25704,:), 1, count);
  t.rhdfmthreshold = read_float(chr2(25705:25708,:), 1, count);
  t.rhdfmxres = read_int(chr2(25709:25712,:), 1, count);
  t.rhdifnext2 = read_int(chr2(25713:25716,:), 1, count);
  t.rhdiskacqctrl = read_int(chr2(25717:25720,:), 1, count);
  t.rhdispfov = read_float(chr2(25721:25724,:), 1, count);
  t.rhdoffset = read_float(chr2(25725:25728,:), 1, count);
  t.rhdptype = read_int(chr2(25729:25732,:), 1, count);
  t.rhdwnavcoeff = read_float(chr2(25733:25736,:), 1, count);
  t.rhdwnavcor = read_int(chr2(25737:25740,:), 1, count);
  t.rhdwnavcorecho = read_int(chr2(25741:25744,:), 1, count);
  t.rhdwnaveshot = read_int(chr2(25745:25748,:), 1, count);
  t.rhdwnaveview = read_int(chr2(25749:25752,:), 1, count);
  t.rhdwnavsshot = read_int(chr2(25753:25756,:), 1, count);
  t.rhdwnavsview = read_int(chr2(25757:25760,:), 1, count);
  t.rhdwnavview = read_int(chr2(25761:25764,:), 1, count);
  t.rhech2skip = read_int(chr2(25765:25768,:), 1, count);
  t.rhechopc_ctrl = read_int(chr2(25769:25772,:), 1, count);
  t.rhechopc_extra_bot = read_int(chr2(25773:25776,:), 1, count);
  t.rhechopc_primary_yfirst = read_int(chr2(25777:25780,:), 1, count);
  t.rhechopc_reverse_yfirst = read_int(chr2(25781:25784,:), 1, count);
  t.rhechopc_ylines = read_int(chr2(25785:25788,:), 1, count);
  t.rhechopc_yxfitorder = read_int(chr2(25789:25792,:), 1, count);
  t.rhechopc_zlines = read_int(chr2(25793:25796,:), 1, count);
  t.rhectricks_input_regions = read_int(chr2(25797:25800,:), 1, count);
  t.rhectricks_num_regions = read_int(chr2(25801:25804,:), 1, count);
  t.rhesp = read_int(chr2(25805:25808,:), 1, count);
  t.rhetl = read_int(chr2(25809:25812,:), 1, count);
  t.rhexciterfreqs = read_int(chr2(25813:25816,:), 1, count);
  t.rhexciterusage = read_int(chr2(25817:25820,:), 1, count);
  t.rhexecctrl = read_int(chr2(25821:25824,:), 1, count);
  t.rhextra_frames_bot = read_int(chr2(25825:25828,:), 1, count);
  t.rhextra_frames_top = read_int(chr2(25829:25832,:), 1, count);
  t.rhfast_rec = read_int(chr2(25833:25836,:), 1, count);
  t.rhfatwater = read_int(chr2(25837:25840,:), 1, count);
  t.rhfcinearw = read_int(chr2(25841:25844,:), 1, count);
  t.rhfcinemode = read_int(chr2(25845:25848,:), 1, count);
  t.rhfdctrl = read_int(chr2(25849:25852,:), 1, count);
  t.rhfeextra = read_int(chr2(25853:25856,:), 1, count);
  t.rhferme = read_float(chr2(25857:25860,:), 1, count);
  t.rhfermr = read_float(chr2(25861:25864,:), 1, count);
  t.rhfermw = read_float(chr2(25865:25868,:), 1, count);
  t.rhfiesta = read_int(chr2(25869:25872,:), 1, count);
  t.rhflipfilter = read_int(chr2(25873:25876,:), 1, count);
  t.rhformat = read_int(chr2(25877:25880,:), 1, count);
  t.rhfreqscale = read_float(chr2(25881:25884,:), 1, count);
  t.rhfrsize = read_int(chr2(25885:25888,:), 1, count);
  t.rhgradmode = read_int(chr2(25889:25892,:), 1, count);
  t.rhgridcontrol = read_int(chr2(25893:25896,:), 1, count);
  t.rhhdbestky = read_int(chr2(25897:25900,:), 1, count);
  t.rhheover = read_int(chr2(25901:25904,:), 1, count);
  t.rhherawflt = read_int(chr2(25905:25908,:), 1, count);
  t.rhherawflt_befamp = read_float(chr2(25909:25912,:), 1, count);
  t.rhherawflt_befntran = read_float(chr2(25913:25916,:), 1, count);
  t.rhherawflt_befnwin = read_float(chr2(25917:25920,:), 1, count);
  t.rhherawflt_hpfamp = read_float(chr2(25921:25924,:), 1, count);
  t.rhhniter = read_int(chr2(25925:25928,:), 1, count);
  t.rhhnover = read_int(chr2(25929:25932,:), 1, count);
  t.rhhoec_fit_order = read_int(chr2(25933:25936,:), 1, count);
  t.rhhoecc = read_int(chr2(25937:25940,:), 1, count);
  t.rhileaves = read_int(chr2(25941:25944,:), 1, count);
  t.rhimsize = read_int(chr2(25945:25948,:), 1, count);
  t.rhincrpass = read_int(chr2(25949:25952,:), 1, count);
  t.rhinitpass = read_int(chr2(25953:25956,:), 1, count);
  t.rhkacq_uid = read_int(chr2(25957:25960,:), 1, count);
  t.rhkt_cal_factor = read_int(chr2(25961:25964,:), 1, count);
  t.rhkt_calwidth_ph = read_int(chr2(25965:25968,:), 1, count);
  t.rhkt_calwidth_sl = read_int(chr2(25969:25972,:), 1, count);
  t.rhkt_factor = read_int(chr2(25973:25976,:), 1, count);
  t.rhkydir = read_int(chr2(25977:25980,:), 1, count);
  t.rhlcfiesta = read_int(chr2(25981:25984,:), 1, count);
  t.rhlcfiesta_phase = read_float(chr2(25985:25988,:), 1, count);
  t.rhleft_blank = read_int(chr2(25989:25992,:), 1, count);
  t.rhmaxcoef1a = read_float(chr2(25993:25996,:), 1, count);
  t.rhmaxcoef1b = read_float(chr2(25997:26000,:), 1, count);
  t.rhmaxcoef1c = read_float(chr2(26001:26004,:), 1, count);
  t.rhmaxcoef1d = read_float(chr2(26005:26008,:), 1, count);
  t.rhmaxcoef2a = read_float(chr2(26009:26012,:), 1, count);
  t.rhmaxcoef2b = read_float(chr2(26013:26016,:), 1, count);
  t.rhmaxcoef2c = read_float(chr2(26017:26020,:), 1, count);
  t.rhmaxcoef2d = read_float(chr2(26021:26024,:), 1, count);
  t.rhmaxcoef3a = read_float(chr2(26025:26028,:), 1, count);
  t.rhmaxcoef3b = read_float(chr2(26029:26032,:), 1, count);
  t.rhmaxcoef3c = read_float(chr2(26033:26036,:), 1, count);
  t.rhmaxcoef3d = read_float(chr2(26037:26040,:), 1, count);
  t.rhmaxgrad = read_float(chr2(26041:26044,:), 1, count);
  t.rhmb_factor = read_int(chr2(26045:26048,:), 1, count);
  t.rhmb_slice_fov_shift_factor = read_int(chr2(26049:26052,:), 1, count);
  t.rhmb_slice_order_sign = read_int(chr2(26053:26056,:), 1, count);
  t.rhmedal_down_kernel_size = read_int(chr2(26057:26060,:), 1, count);
  t.rhmedal_echo_order = read_int(chr2(26061:26064,:), 1, count);
  t.rhmedal_ending_slice = read_int(chr2(26065:26068,:), 1, count);
  t.rhmedal_mode = read_int(chr2(26069:26072,:), 1, count);
  t.rhmedal_nstack_size = read_int(chr2(26073:26076,:), 1, count);
  t.rhmedal_param = read_float(chr2(26077:26080,:), 1, count);
  t.rhmedal_smooth_kernel_size = read_int(chr2(26081:26084,:), 1, count);
  t.rhmedal_starting_slice = read_int(chr2(26085:26088,:), 1, count);
  t.rhmedal_up_kernel_size = read_int(chr2(26089:26092,:), 1, count);
  t.rhmeth = read_int(chr2(26093:26096,:), 1, count);
  t.rhmethod = read_int(chr2(26097:26100,:), 1, count);
  t.rhmotioncomp = read_int(chr2(26101:26104,:), 1, count);
  t.rhmphasetype = read_int(chr2(26105:26108,:), 1, count);
  t.rhnavs = read_int(chr2(26109:26112,:), 1, count);
  t.rhncoillimit = read_int(chr2(26113:26116,:), 1, count);
  t.rhncoilsel = read_int(chr2(26117:26120,:), 1, count);
  t.rhncycles_cine = read_int(chr2(26121:26124,:), 1, count);
  t.rhnecho = read_int(chr2(26125:26128,:), 1, count);
  t.rhnew_wnd_level_flag = read_int(chr2(26129:26132,:), 1, count);
  t.rhnex = read_int(chr2(26133:26136,:), 1, count);
  t.rhnex_unacquired = read_int(chr2(26137:26140,:), 1, count);
  t.rhnframes = read_int(chr2(26141:26144,:), 1, count);
  t.rhnoncart_dual_traj = read_int(chr2(26145:26148,:), 1, count);
  t.rhnoncart_grid_factor = read_float(chr2(26149:26152,:), 1, count);
  t.rhnoncart_traj_kmax_ratio = read_int(chr2(26153:26156,:), 1, count);
  t.rhnoncart_traj_merge_end = read_int(chr2(26157:26160,:), 1, count);
  t.rhnoncart_traj_merge_start = read_int(chr2(26161:26164,:), 1, count);
  t.rhnoncart_traj_mode = read_int(chr2(26165:26168,:), 1, count);
  t.rhnpasses = read_int(chr2(26169:26172,:), 1, count);
  t.rhnphases = read_int(chr2(26173:26176,:), 1, count);
  t.rhnpomp = read_int(chr2(26177:26180,:), 1, count);
  t.rhnpwfactor = read_float(chr2(26181:26184,:), 1, count);
  t.rhnrefslices = read_int(chr2(26185:26188,:), 1, count);
  t.rhnslices = read_int(chr2(26189:26192,:), 1, count);
  t.rhnspokes_highres = read_int(chr2(26193:26196,:), 1, count);
  t.rhnspokes_lowres = read_int(chr2(26197:26200,:), 1, count);
  t.rhntran = read_float(chr2(26201:26204,:), 1, count);
  t.rhnumCoilConfigs = read_int(chr2(26205:26208,:), 1, count);
  t.rhnumbvals = read_int(chr2(26209:26212,:), 1, count);
  t.rhnumdifdirs = read_int(chr2(26213:26216,:), 1, count);
  t.rhnumslabs = read_int(chr2(26217:26220,:), 1, count);
  t.rhnvircchannel = read_int(chr2(26221:26224,:), 1, count);
  t.rhnwin = read_float(chr2(26225:26228,:), 1, count);
  t.rhoscans = read_int(chr2(26229:26232,:), 1, count);
  t.rhoversamplingfactor = read_float(chr2(26233:26236,:), 1, count);
  t.rhovl = read_int(chr2(26237:26240,:), 1, count);
  t.rhpasframe = read_int(chr2(26241:26244,:), 1, count);
  t.rhpc_rationalscale = read_int(chr2(26245:26248,:), 1, count);
  t.rhpc_ref_skip = read_int(chr2(26249:26252,:), 1, count);
  t.rhpc_ref_start = read_int(chr2(26253:26256,:), 1, count);
  t.rhpc_ref_stop = read_int(chr2(26257:26260,:), 1, count);
  t.rhpcbestky = read_float(chr2(26261:26264,:), 1, count);
  t.rhpccoil = read_int(chr2(26265:26268,:), 1, count);
  t.rhpccon = read_int(chr2(26269:26272,:), 1, count);
  t.rhpcconfitwt = read_int(chr2(26273:26276,:), 1, count);
  t.rhpcconfix = read_int(chr2(26277:26280,:), 1, count);
  t.rhpcconnorm = read_int(chr2(26281:26284,:), 1, count);
  t.rhpcconnpts = read_int(chr2(26285:26288,:), 1, count);
  t.rhpcconorder = read_int(chr2(26289:26292,:), 1, count);
  t.rhpcconslope = read_float(chr2(26293:26296,:), 1, count);
  t.rhpcctrl = read_int(chr2(26297:26300,:), 1, count);
  t.rhpcdiscbeg = read_int(chr2(26301:26304,:), 1, count);
  t.rhpcdiscend = read_int(chr2(26305:26308,:), 1, count);
  t.rhpcdiscmid = read_int(chr2(26309:26312,:), 1, count);
  t.rhpcextcorr = read_int(chr2(26313:26316,:), 1, count);
  t.rhpcfitorig = read_int(chr2(26317:26320,:), 1, count);
  t.rhpcgraph = read_int(chr2(26321:26324,:), 1, count);
  t.rhpcileave = read_int(chr2(26325:26328,:), 1, count);
  t.rhpcinvft = read_int(chr2(26329:26332,:), 1, count);
  t.rhpclin = read_int(chr2(26333:26336,:), 1, count);
  t.rhpclinavg = read_int(chr2(26337:26340,:), 1, count);
  t.rhpclinfitwt = read_int(chr2(26341:26344,:), 1, count);
  t.rhpclinfix = read_int(chr2(26345:26348,:), 1, count);
  t.rhpclinnorm = read_int(chr2(26349:26352,:), 1, count);
  t.rhpclinnpts = read_int(chr2(26353:26356,:), 1, count);
  t.rhpclinorder = read_int(chr2(26357:26360,:), 1, count);
  t.rhpclinslope = read_float(chr2(26361:26364,:), 1, count);
  t.rhpcmag = read_int(chr2(26365:26368,:), 1, count);
  t.rhpcmultegrp = read_int(chr2(26369:26372,:), 1, count);
  t.rhpcshotfirst = read_int(chr2(26373:26376,:), 1, count);
  t.rhpcshotlast = read_int(chr2(26377:26380,:), 1, count);
  t.rhpcsnore = read_int(chr2(26381:26384,:), 1, count);
  t.rhpcspacial = read_int(chr2(26385:26388,:), 1, count);
  t.rhpcspacial_dynamic = read_int(chr2(26389:26392,:), 1, count);
  t.rhpctemporal = read_int(chr2(26393:26396,:), 1, count);
  t.rhpctest = read_int(chr2(26397:26400,:), 1, count);
  t.rhpcthrespct = read_int(chr2(26401:26404,:), 1, count);
  t.rhpcthrespts = read_int(chr2(26405:26408,:), 1, count);
  t.rhphasescale = read_float(chr2(26409:26412,:), 1, count);
  t.rhphsen_pixel_offset = read_int(chr2(26413:26416,:), 1, count);
  t.rhposition_detection = read_int(chr2(26417:26420,:), 1, count);
  t.rhpropellerCtrl = read_int(chr2(26421:26424,:), 1, count);
  t.rhptsize = read_int(chr2(26425:26428,:), 1, count);
  t.rhpure = read_int(chr2(26429:26432,:), 1, count);
  t.rhpure_blur = read_float(chr2(26433:26436,:), 1, count);
  t.rhpure_blur_enable = read_int(chr2(26437:26440,:), 1, count);
  t.rhpure_cal_reapodization = read_float(chr2(26441:26444,:), 1, count);
  t.rhpure_derived_cal_fraction = read_float(chr2(26445:26448,:), 1, count);
  t.rhpure_filtering_mode = read_int(chr2(26449:26452,:), 1, count);
  t.rhpure_lambda = read_float(chr2(26453:26456,:), 1, count);
  t.rhpure_mix_alpha = read_float(chr2(26457:26460,:), 1, count);
  t.rhpure_mix_aniso_blur = read_int(chr2(26461:26464,:), 1, count);
  t.rhpure_mix_aniso_dilate_dist = read_int(chr2(26465:26468,:), 1, count);
  t.rhpure_mix_aniso_erode_dist = read_int(chr2(26469:26472,:), 1, count);
  t.rhpure_mix_blur = read_float(chr2(26473:26476,:), 1, count);
  t.rhpure_mix_blur_enable = read_int(chr2(26477:26480,:), 1, count);
  t.rhpure_mix_dilate_dist = read_int(chr2(26481:26484,:), 1, count);
  t.rhpure_mix_erode_dist = read_int(chr2(26485:26488,:), 1, count);
  t.rhpure_mix_exp_wt = read_float(chr2(26489:26492,:), 1, count);
  t.rhpure_mix_lambda = read_float(chr2(26493:26496,:), 1, count);
  t.rhpure_mix_otsu_class_qty = read_int(chr2(26497:26500,:), 1, count);
  t.rhpure_mix_tuning_factor_body = read_float(chr2(26501:26504,:), 1, count);
  t.rhpure_mix_tuning_factor_surface = read_float(chr2(26505:26508,:), 1, count);
  t.rhpure_scale_factor = read_float(chr2(26509:26512,:), 1, count);
  t.rhpure_tuning_factor_body = read_float(chr2(26513:26516,:), 1, count);
  t.rhpure_tuning_factor_surface = read_float(chr2(26517:26520,:), 1, count);
  t.rhpurechannel = read_int(chr2(26521:26524,:), 1, count);
  t.rhpurefilter = read_int(chr2(26525:26528,:), 1, count);
  t.rhradiusa = read_float(chr2(26529:26532,:), 1, count);
  t.rhradiusb = read_float(chr2(26533:26536,:), 1, count);
  t.rhrawsize = read_n64(chr2(26537:26544,:), 1, count);
  t.rhrawsizeview = read_int(chr2(26545:26548,:), 1, count);
  t.rhrc3dcinectrl = read_int(chr2(26549:26552,:), 1, count);
  t.rhrc_cardt1map_ctrl = read_int(chr2(26553:26556,:), 1, count);
  t.rhrc_moco_ctrl = read_int(chr2(26557:26560,:), 1, count);
  t.rhrcctrl = read_int(chr2(26561:26564,:), 1, count);
  t.rhrcdixproc = read_int(chr2(26565:26568,:), 1, count);
  t.rhrcideal = read_int(chr2(26569:26572,:), 1, count);
  t.rhrcidealctrl = read_int(chr2(26573:26576,:), 1, count);
  t.rhrcmavric_bin_separation = read_int(chr2(26577:26580,:), 1, count);
  t.rhrcmavric_control = read_int(chr2(26581:26584,:), 1, count);
  t.rhrcmavric_image = read_int(chr2(26585:26588,:), 1, count);
  t.rhrcxres = read_int(chr2(26589:26592,:), 1, count);
  t.rhrcyres = read_int(chr2(26593:26596,:), 1, count);
  t.rhrecon = read_int(chr2(26597:26600,:), 1, count);
  t.rhrecv_freq_e = read_float(chr2(26601:26604,:), 1, count);
  t.rhrecv_freq_s = read_float(chr2(26605:26608,:), 1, count);
  t.rhref = read_int(chr2(26609:26612,:), 1, count);
  t.rhrefframep = read_int(chr2(26613:26616,:), 1, count);
  t.rhrefframes = read_int(chr2(26617:26620,:), 1, count);
  t.rhreps = read_int(chr2(26621:26624,:), 1, count);
  t.rhretro_control = read_int(chr2(26625:26628,:), 1, count);
  t.rhright_blank = read_int(chr2(26629:26632,:), 1, count);
  t.rhrlfov = read_int(chr2(26633:26636,:), 1, count);
  t.rhrotationThreshold = read_float(chr2(26637:26640,:), 1, count);
  t.rhscancent = read_float(chr2(26641:26644,:), 1, count);
  t.rhscanfov = read_float(chr2(26645:26648,:), 1, count);
  t.rhscnframe = read_int(chr2(26649:26652,:), 1, count);
  t.rhshiftThreshold = read_float(chr2(26653:26656,:), 1, count);
  t.rhsifov = read_int(chr2(26657:26660,:), 1, count);
  t.rhslblank = read_int(chr2(26661:26664,:), 1, count);
  t.rhslewmax = read_float(chr2(26665:26668,:), 1, count);
  t.rhsnrnoise = read_int(chr2(26669:26672,:), 1, count);
  t.rhspeccsidims = read_int(chr2(26673:26676,:), 1, count);
  t.rhspecrescsix = read_int(chr2(26677:26680,:), 1, count);
  t.rhspecrescsiy = read_int(chr2(26681:26684,:), 1, count);
  t.rhspecrescsiz = read_int(chr2(26685:26688,:), 1, count);
  t.rhspecroilenx = read_float(chr2(26689:26692,:), 1, count);
  t.rhspecroileny = read_float(chr2(26693:26696,:), 1, count);
  t.rhspecroilenz = read_float(chr2(26697:26700,:), 1, count);
  t.rhspecroilocx = read_float(chr2(26701:26704,:), 1, count);
  t.rhspecroilocy = read_float(chr2(26705:26708,:), 1, count);
  t.rhspecroilocz = read_float(chr2(26709:26712,:), 1, count);
  t.rhspecwidth = read_float(chr2(26713:26716,:), 1, count);
  t.rhsspsave = read_int(chr2(26717:26720,:), 1, count);
  t.rhswiftenable = read_int(chr2(26721:26724,:), 1, count);
  t.rhte = read_int(chr2(26725:26728,:), 1, count);
  t.rhte2 = read_int(chr2(26729:26732,:), 1, count);
  t.rhtediff = read_int(chr2(26733:26736,:), 1, count);
  t.rhtrickstype = read_int(chr2(26737:26740,:), 1, count);
  t.rhtsamp = read_float(chr2(26741:26744,:), 1, count);
  t.rhtype = read_int(chr2(26745:26748,:), 1, count);
  t.rhtype1 = read_int(chr2(26749:26752,:), 1, count);
  t.rhudasave = read_int(chr2(26753:26756,:), 1, count);
  t.rhuser0 = read_float(chr2(26757:26760,:), 1, count);
  t.rhuser1 = read_float(chr2(26761:26764,:), 1, count);
  t.rhuser10 = read_float(chr2(26765:26768,:), 1, count);
  t.rhuser11 = read_float(chr2(26769:26772,:), 1, count);
  t.rhuser12 = read_float(chr2(26773:26776,:), 1, count);
  t.rhuser13 = read_float(chr2(26777:26780,:), 1, count);
  t.rhuser14 = read_float(chr2(26781:26784,:), 1, count);
  t.rhuser15 = read_float(chr2(26785:26788,:), 1, count);
  t.rhuser16 = read_float(chr2(26789:26792,:), 1, count);
  t.rhuser17 = read_float(chr2(26793:26796,:), 1, count);
  t.rhuser18 = read_float(chr2(26797:26800,:), 1, count);
  t.rhuser19 = read_float(chr2(26801:26804,:), 1, count);
  t.rhuser2 = read_float(chr2(26805:26808,:), 1, count);
  t.rhuser20 = read_float(chr2(26809:26812,:), 1, count);
  t.rhuser21 = read_float(chr2(26813:26816,:), 1, count);
  t.rhuser22 = read_float(chr2(26817:26820,:), 1, count);
  t.rhuser23 = read_float(chr2(26821:26824,:), 1, count);
  t.rhuser24 = read_float(chr2(26825:26828,:), 1, count);
  t.rhuser25 = read_float(chr2(26829:26832,:), 1, count);
  t.rhuser26 = read_float(chr2(26833:26836,:), 1, count);
  t.rhuser27 = read_float(chr2(26837:26840,:), 1, count);
  t.rhuser28 = read_float(chr2(26841:26844,:), 1, count);
  t.rhuser29 = read_float(chr2(26845:26848,:), 1, count);
  t.rhuser3 = read_float(chr2(26849:26852,:), 1, count);
  t.rhuser30 = read_float(chr2(26853:26856,:), 1, count);
  t.rhuser31 = read_float(chr2(26857:26860,:), 1, count);
  t.rhuser32 = read_float(chr2(26861:26864,:), 1, count);
  t.rhuser33 = read_float(chr2(26865:26868,:), 1, count);
  t.rhuser34 = read_float(chr2(26869:26872,:), 1, count);
  t.rhuser35 = read_float(chr2(26873:26876,:), 1, count);
  t.rhuser36 = read_float(chr2(26877:26880,:), 1, count);
  t.rhuser37 = read_float(chr2(26881:26884,:), 1, count);
  t.rhuser38 = read_float(chr2(26885:26888,:), 1, count);
  t.rhuser39 = read_float(chr2(26889:26892,:), 1, count);
  t.rhuser4 = read_float(chr2(26893:26896,:), 1, count);
  t.rhuser40 = read_float(chr2(26897:26900,:), 1, count);
  t.rhuser41 = read_float(chr2(26901:26904,:), 1, count);
  t.rhuser42 = read_float(chr2(26905:26908,:), 1, count);
  t.rhuser43 = read_float(chr2(26909:26912,:), 1, count);
  t.rhuser44 = read_float(chr2(26913:26916,:), 1, count);
  t.rhuser45 = read_float(chr2(26917:26920,:), 1, count);
  t.rhuser46 = read_float(chr2(26921:26924,:), 1, count);
  t.rhuser47 = read_float(chr2(26925:26928,:), 1, count);
  t.rhuser48 = read_float(chr2(26929:26932,:), 1, count);
  t.rhuser5 = read_float(chr2(26933:26936,:), 1, count);
  t.rhuser6 = read_float(chr2(26937:26940,:), 1, count);
  t.rhuser7 = read_float(chr2(26941:26944,:), 1, count);
  t.rhuser8 = read_float(chr2(26945:26948,:), 1, count);
  t.rhuser9 = read_float(chr2(26949:26952,:), 1, count);
  t.rhuser_usage_tag = read_int(chr2(26953:26956,:), 1, count);
  t.rhutctrl = read_int(chr2(26957:26960,:), 1, count);
  t.rhvcoefxa = read_float(chr2(26961:26964,:), 1, count);
  t.rhvcoefxb = read_float(chr2(26965:26968,:), 1, count);
  t.rhvcoefxc = read_float(chr2(26969:26972,:), 1, count);
  t.rhvcoefxd = read_float(chr2(26973:26976,:), 1, count);
  t.rhvcoefya = read_float(chr2(26977:26980,:), 1, count);
  t.rhvcoefyb = read_float(chr2(26981:26984,:), 1, count);
  t.rhvcoefyc = read_float(chr2(26985:26988,:), 1, count);
  t.rhvcoefyd = read_float(chr2(26989:26992,:), 1, count);
  t.rhvcoefza = read_float(chr2(26993:26996,:), 1, count);
  t.rhvcoefzb = read_float(chr2(26997:27000,:), 1, count);
  t.rhvcoefzc = read_float(chr2(27001:27004,:), 1, count);
  t.rhvcoefzd = read_float(chr2(27005:27008,:), 1, count);
  t.rhvenc = read_float(chr2(27009:27012,:), 1, count);
  t.rhvibrant = read_int(chr2(27013:27016,:), 1, count);
  t.rhviewSharing3D = read_int(chr2(27017:27020,:), 1, count);
  t.rhvircoilchannels = read_int(chr2(27021:27024,:), 1, count);
  t.rhvircoiltype = read_int(chr2(27025:27028,:), 1, count);
  t.rhvircoilunif = read_int(chr2(27029:27032,:), 1, count);
  t.rhvircpolicy = read_int(chr2(27033:27036,:), 1, count);
  t.rhvirsenstype = read_int(chr2(27037:27040,:), 1, count);
  t.rhvmcoef1 = read_float(chr2(27041:27044,:), 1, count);
  t.rhvmcoef2 = read_float(chr2(27045:27048,:), 1, count);
  t.rhvmcoef3 = read_float(chr2(27049:27052,:), 1, count);
  t.rhvmcoef4 = read_float(chr2(27053:27056,:), 1, count);
  t.rhvps = read_int(chr2(27057:27060,:), 1, count);
  t.rhvquant = read_int(chr2(27061:27064,:), 1, count);
  t.rhvrgf = read_int(chr2(27065:27068,:), 1, count);
  t.rhvrgfxres = read_int(chr2(27069:27072,:), 1, count);
  t.rhvtype = read_int(chr2(27073:27076,:), 1, count);
  t.rhvvsaimgs = read_int(chr2(27077:27080,:), 1, count);
  t.rhvvsgender = read_int(chr2(27081:27084,:), 1, count);
  t.rhvvstr = read_int(chr2(27085:27088,:), 1, count);
  t.rhwiener = read_int(chr2(27089:27092,:), 1, count);
  t.rhwienera = read_float(chr2(27093:27096,:), 1, count);
  t.rhwienerb = read_float(chr2(27097:27100,:), 1, count);
  t.rhwieneresp = read_float(chr2(27101:27104,:), 1, count);
  t.rhwienert2 = read_float(chr2(27105:27108,:), 1, count);
  t.rhwnd_high_hist = read_float(chr2(27109:27112,:), 1, count);
  t.rhwnd_image_hist_area = read_int(chr2(27113:27116,:), 1, count);
  t.rhwnd_lower_hist = read_float(chr2(27117:27120,:), 1, count);
  t.rhxoff = read_float(chr2(27121:27124,:), 1, count);
  t.rhyoff = read_float(chr2(27125:27128,:), 1, count);
  t.rhzeroph = read_float(chr2(27129:27132,:), 1, count);
  t.rhzipfact = read_float(chr2(27133:27136,:), 1, count);
  t.rl_flow = read_int(chr2(27137:27140,:), 1, count);
  t.rot_delay = read_int(chr2(27141:27144,:), 1, count);
  t.rot_delay_gir = read_int(chr2(27145:27148,:), 1, count);
  t.rotateflag = read_int(chr2(27149:27152,:), 1, count);
  t.rs_dda = read_int(chr2(27153:27156,:), 1, count);
  t.rs_esp = read_int(chr2(27157:27160,:), 1, count);
  t.rs_iso_delay = read_int(chr2(27161:27164,:), 1, count);
  t.rs_off90 = read_int(chr2(27165:27168,:), 1, count);
  t.rsamp_time = read_int(chr2(27169:27172,:), 1, count);
  t.rsaxial_flag = read_int(chr2(27173:27176,:), 1, count);
  t.rsloggrd = read_LOG_GRAD(chr2(27177:27476,:), 1, count);
  t.rsphorder = read_int(chr2(27477:27480,:), 1, count);
  t.rsspgr_flag = read_int(chr2(27481:27484,:), 1, count);
  t.rst_exa = read_int(chr2(27485:27488,:), 1, count);
  t.rst_exb = read_int(chr2(27489:27492,:), 1, count);
  t.rtca_insteps_flip = read_int(chr2(27493:27496,:), 1, count);
  t.rtca_insteps_fov = read_int(chr2(27497:27500,:), 1, count);
  t.rtca_insteps_slthick = read_float(chr2(27501:27504,:), 1, count);
  t.rtca_max_flip = read_float(chr2(27505:27508,:), 1, count);
  t.rtca_max_fov = read_float(chr2(27509:27512,:), 1, count);
  t.rtca_max_slthick = read_float(chr2(27513:27516,:), 1, count);
  t.rtca_min_flip = read_float(chr2(27517:27520,:), 1, count);
  t.rtca_min_fov = read_float(chr2(27521:27524,:), 1, count);
  t.rtca_min_slabthick = read_float(chr2(27525:27528,:), 1, count);
  t.rtca_min_slthick = read_float(chr2(27529:27532,:), 1, count);
  t.rtia3d_buffers = read_int(chr2(27533:27536,:), 1, count);
  t.rtia3d_eff_slabthick = read_float(chr2(27537:27540,:), 1, count);
  t.rtia3d_irp_flag = read_int(chr2(27541:27544,:), 1, count);
  t.rtia3d_original_flip = read_int(chr2(27545:27548,:), 1, count);
  t.rtia3d_original_fov = read_int(chr2(27549:27552,:), 1, count);
  t.rtia3d_original_slthick = read_int(chr2(27553:27556,:), 1, count);
  t.rtia3d_pass = read_int(chr2(27557:27560,:), 1, count);
  t.rtia3d_phorder = read_int(chr2(27561:27564,:), 1, count);
  t.rtia3d_repeat_views = read_int(chr2(27565:27568,:), 1, count);
  t.rtia3d_restricted_nav_flag = read_int(chr2(27569:27572,:), 1, count);
  t.rtia3d_sat_flip = read_float(chr2(27573:27576,:), 1, count);
  t.rtia3d_sat_pos = read_float(chr2(27577:27580,:), 1, count);
  t.rtia3d_sat_views = read_int(chr2(27581:27584,:), 1, count);
  t.rtia3d_slice_thinning_factor = read_float(chr2(27585:27588,:), 1, count);
  t.rtia3d_thkslab_proj_enable_flag = read_int(chr2(27589:27592,:), 1, count);
  t.rtia3d_thkslab_proj_flag = read_int(chr2(27593:27596,:), 1, count);
  t.rtia3d_turbo = read_int(chr2(27597:27600,:), 1, count);
  t.rtia_first_scan_flag = read_int(chr2(27601:27604,:), 1, count);
  t.rtia_fov_freq_scale = read_float(chr2(27605:27608,:), 1, count);
  t.rtia_fov_phase_scale = read_float(chr2(27609:27612,:), 1, count);
  t.rtia_init_phasoff = read_float(chr2(27613:27616,:), 1, count);
  t.rtia_init_rloc = read_float(chr2(27617:27620,:), 1, count);
  t.rtia_init_tloc = read_float(chr2(27621:27624,:), 1, count);
  t.rtia_orig_phasoff = read_float(chr2(27625:27628,:), 1, count);
  t.rtia_orig_rloc = read_float(chr2(27629:27632,:), 1, count);
  t.rtia_orig_tloc = read_float(chr2(27633:27636,:), 1, count);
  t.rtia_rel_fov_freq_scale = read_float(chr2(27637:27640,:), 1, count);
  t.rtia_rel_fov_phase_scale = read_float(chr2(27641:27644,:), 1, count);
  t.rtia_satgapzneg = read_float(chr2(27645:27648,:), 1, count);
  t.rtia_satgapzpos = read_float(chr2(27649:27652,:), 1, count);
  t.rtia_slthick_scale = read_float(chr2(27653:27656,:), 1, count);
  t.rtpend_quiet_dda = read_int(chr2(27657:27660,:), 1, count);
  t.rtpresultwait = read_int(chr2(27661:27664,:), 1, count);
  t.rtsar_enable_flag = read_int(chr2(27665:27668,:), 1, count);
  t.rtsar_first_series_flag = read_int(chr2(27669:27672,:), 1, count);
  t.run_eval_from_get_flag = read_int(chr2(27673:27676,:), 1, count);
  t.rvssliceenc = read_int(chr2(27677:27680,:), 1, count);
  t.s5fpharea = read_float(chr2(27681:27684,:), 1, count);
  t.sampledPoints = read_int(chr2(27685:27688,:), 1, count);
  t.sar_amp = read_int(chr2(27689:27692,:), 1, count);
  t.sar_correction_factor = read_float(chr2(27693:27696,:), 1, count);
  t.sar_cycle = read_int(chr2(27697:27700,:), 1, count);
  t.sar_width = read_int(chr2(27701:27704,:), 1, count);
  t.sat_TGlimit = read_int(chr2(27705:27708,:), 1, count);
  t.sat_dda = read_int(chr2(27709:27712,:), 1, count);
  t.sat_debug = read_int(chr2(27713:27716,:), 1, count);
  t.sat_newgeo = read_int(chr2(27717:27720,:), 1, count);
  t.sat_obl_debug = read_int(chr2(27721:27724,:), 1, count);
  t.sat_pulse_type = read_int(chr2(27725:27728,:), 1, count);
  t.sat_reps = read_int(chr2(27729:27732,:), 1, count);
  t.sat_rot_df_num = read_int(chr2(27733:27736,:), 1, count);
  t.sat_rot_ex_num = read_int(chr2(27737:27740,:), 1, count);
  t.sat_rot_index = read_int(chr2(27741:27744,:), 1, count);
  t.satgapxneg = read_float(chr2(27745:27748,:), 1, count);
  t.satgapxpos = read_float(chr2(27749:27752,:), 1, count);
  t.satgapyneg = read_float(chr2(27753:27756,:), 1, count);
  t.satgapypos = read_float(chr2(27757:27760,:), 1, count);
  t.satgapzneg = read_float(chr2(27761:27764,:), 1, count);
  t.satgapzpos = read_float(chr2(27765:27768,:), 1, count);
  t.satloce1 = read_float(chr2(27769:27772,:), 1, count);
  t.satloce2 = read_float(chr2(27773:27776,:), 1, count);
  t.satloce3 = read_float(chr2(27777:27780,:), 1, count);
  t.satloce4 = read_float(chr2(27781:27784,:), 1, count);
  t.satloce5 = read_float(chr2(27785:27788,:), 1, count);
  t.satloce6 = read_float(chr2(27789:27792,:), 1, count);
  t.satloggrd = read_LOG_GRAD(chr2(27793:28092,:), 1, count);
  t.satspace1 = read_float(chr2(28093:28096,:), 1, count);
  t.satspace2 = read_float(chr2(28097:28100,:), 1, count);
  t.satspace3 = read_float(chr2(28101:28104,:), 1, count);
  t.satspace4 = read_float(chr2(28105:28108,:), 1, count);
  t.satspace5 = read_float(chr2(28109:28112,:), 1, count);
  t.satspace6 = read_float(chr2(28113:28116,:), 1, count);
  t.satspacex1 = read_float(chr2(28117:28120,:), 1, count);
  t.satspacex2 = read_float(chr2(28121:28124,:), 1, count);
  t.satspacey1 = read_float(chr2(28125:28128,:), 1, count);
  t.satspacey2 = read_float(chr2(28129:28132,:), 1, count);
  t.satspacez1 = read_float(chr2(28133:28136,:), 1, count);
  t.satspacez2 = read_float(chr2(28137:28140,:), 1, count);
  t.satthickdfx = read_float(chr2(28141:28144,:), 1, count);
  t.satthickdfy = read_float(chr2(28145:28148,:), 1, count);
  t.satthickdfz = read_float(chr2(28149:28152,:), 1, count);
  t.satthickx1 = read_float(chr2(28153:28156,:), 1, count);
  t.satthickx2 = read_float(chr2(28157:28160,:), 1, count);
  t.satthicky1 = read_float(chr2(28161:28164,:), 1, count);
  t.satthicky2 = read_float(chr2(28165:28168,:), 1, count);
  t.satthickz1 = read_float(chr2(28169:28172,:), 1, count);
  t.satthickz2 = read_float(chr2(28173:28176,:), 1, count);
  t.satview = read_int(chr2(28177:28180,:), 1, count);
  t.satxlocneg = read_float(chr2(28181:28184,:), 1, count);
  t.satxlocpos = read_float(chr2(28185:28188,:), 1, count);
  t.satylocneg = read_float(chr2(28189:28192,:), 1, count);
  t.satylocpos = read_float(chr2(28193:28196,:), 1, count);
  t.satzloca = read_float(chr2(28197:28200,:), 1, count);
  t.satzlocb = read_float(chr2(28201:28204,:), 1, count);
  t.satzlocneg = read_float(chr2(28205:28208,:), 1, count);
  t.satzlocpos = read_float(chr2(28209:28212,:), 1, count);
  t.save_cfxfull = read_int(chr2(28213:28216,:), 1, count);
  t.save_cfxipeak = read_float(chr2(28217:28220,:), 1, count);
  t.save_cfyfull = read_int(chr2(28221:28224,:), 1, count);
  t.save_cfyipeak = read_float(chr2(28225:28228,:), 1, count);
  t.save_cfzfull = read_int(chr2(28229:28232,:), 1, count);
  t.save_cfzipeak = read_float(chr2(28233:28236,:), 1, count);
  t.save_fft = read_int(chr2(28237:28240,:), 1, count);
  t.save_gmax = read_float(chr2(28241:28244,:), 1, count);
  t.save_gradOpt_TEfactor = read_float(chr2(28245:28248,:), 1, count);
  t.save_gradOpt_TRfactor = read_float(chr2(28249:28252,:), 1, count);
  t.save_gradOpt_ratio = read_float(chr2(28253:28256,:), 1, count);
  t.save_gradOpt_scale = read_float(chr2(28257:28260,:), 1, count);
  t.save_grad_spec_flag = read_int(chr2(28261:28264,:), 1, count);
  t.save_ogsfX1 = read_float(chr2(28265:28268,:), 1, count);
  t.save_ogsfX2 = read_float(chr2(28269:28272,:), 1, count);
  t.save_ogsfXwex = read_float(chr2(28273:28276,:), 1, count);
  t.save_ogsfY = read_float(chr2(28277:28280,:), 1, count);
  t.save_ogsfYk = read_float(chr2(28281:28284,:), 1, count);
  t.save_ogsfZ = read_float(chr2(28285:28288,:), 1, count);
  t.save_ramptime = read_int(chr2(28289:28292,:), 1, count);
  t.save_srate = read_float(chr2(28293:28296,:), 1, count);
  t.savedata = read_int(chr2(28297:28300,:), 1, count);
  t.saveinter = read_int(chr2(28301:28304,:), 1, count);
  t.sbm_bak_pitscan = read_float(chr2(28305:28308,:), 1, count);
  t.sbm_cvs_changed = read_int(chr2(28309:28312,:), 1, count);
  t.sbm_cvs_old = read_int(chr2(28313:28316,:), 1, count);
  t.sbm_dda = read_int(chr2(28317:28320,:), 1, count);
  t.sbm_dda_max = read_int(chr2(28321:28324,:), 1, count);
  t.sbm_dda_min = read_int(chr2(28325:28328,:), 1, count);
  t.sbm_debug = read_int(chr2(28329:28332,:), 1, count);
  t.sbm_dummy_num = read_int(chr2(28333:28336,:), 1, count);
  t.sbm_flag = read_int(chr2(28337:28340,:), 1, count);
  t.sbm_gradient_method = read_int(chr2(28341:28344,:), 1, count);
  t.sbm_gx1_scale = read_float(chr2(28345:28348,:), 1, count);
  t.sbm_gxw_scale = read_float(chr2(28349:28352,:), 1, count);
  t.sbm_gxwex_scale = read_float(chr2(28353:28356,:), 1, count);
  t.sbm_gy1_scale = read_float(chr2(28357:28360,:), 1, count);
  t.sbm_gy1r_scale = read_float(chr2(28361:28364,:), 1, count);
  t.sbm_gzcomb_scale = read_float(chr2(28365:28368,:), 1, count);
  t.sbm_gzp_scale = read_float(chr2(28369:28372,:), 1, count);
  t.sbm_margin = read_float(chr2(28373:28376,:), 1, count);
  t.sbm_mps2_imaging_num = read_int(chr2(28377:28380,:), 1, count);
  t.sbm_pitscan_changed = read_int(chr2(28381:28384,:), 1, count);
  t.sbm_pitscan_limit = read_float(chr2(28385:28388,:), 1, count);
  t.sbm_pitscan_old = read_float(chr2(28389:28392,:), 1, count);
  t.sbm_smartderating_factor = read_float(chr2(28393:28396,:), 1, count);
  t.sbm_sum_dummy = read_float(chr2(28397:28400,:), 1, count);
  t.sbm_time_limit = read_float(chr2(28401:28404,:), 1, count);
  t.sbm_time_limit_max = read_float(chr2(28405:28408,:), 1, count);
  t.sbm_time_limit_min = read_float(chr2(28409:28412,:), 1, count);
  t.sbm_time_limit_ratio = read_float(chr2(28413:28416,:), 1, count);
  t.sbm_waiting_time = read_float(chr2(28417:28420,:), 1, count);
  t.sbm_y_num = read_int(chr2(28421:28424,:), 1, count);
  t.sbm_z_num = read_int(chr2(28425:28428,:), 1, count);
  t.scale_fac = read_float(chr2(28429:28432,:), 1, count);
  t.scale_tr = read_float(chr2(28433:28436,:), 1, count);
  t.scale_tr_grad = read_float(chr2(28437:28440,:), 1, count);
  t.scanclocktime = read_float(chr2(28441:28444,:), 1, count);
  t.scanrcvr = read_int(chr2(28445:28448,:), 1, count);
  t.scanrf1_inst = read_int(chr2(28449:28452,:), 1, count);
  t.scanrf1tm_inst = read_int(chr2(28453:28456,:), 1, count);
  t.scansat0 = read_int(chr2(28457:28460,:), 1, count);
  t.scansatint = read_int(chr2(28461:28464,:), 1, count);
  t.scptrg = read_int(chr2(28465:28468,:), 1, count);
  t.seed = read_int(chr2(28469:28472,:), 1, count);
  t.seeddef = read_int(chr2(28473:28476,:), 1, count);
  t.seg_debug = read_int(chr2(28477:28480,:), 1, count);
  t.seg_foundvps_flag = read_int(chr2(28481:28484,:), 1, count);
  t.seg_sort_dir = read_int(chr2(28485:28488,:), 1, count);
  t.seg_totalPEs = read_int(chr2(28489:28492,:), 1, count);
  t.seg_vps_max = read_int(chr2(28493:28496,:), 1, count);
  t.seg_vps_min = read_int(chr2(28497:28500,:), 1, count);
  t.seg_vps_range = read_int(chr2(28501:28504,:), 1, count);
  t.seg_vps_target = read_int(chr2(28505:28508,:), 1, count);
  t.segment_tr = read_int(chr2(28509:28512,:), 1, count);
  t.segmented_flag = read_int(chr2(28513:28516,:), 1, count);
  t.sep3d = read_int(chr2(28517:28520,:), 1, count);
  t.seq3ddummytr = read_int(chr2(28521:28524,:), 1, count);
  t.seq3dtr = read_int(chr2(28525:28528,:), 1, count);
  t.seqEntryIndex = read_int(chr2(28529:28532,:), 1, count);
  t.seq_necho = read_int(chr2(28533:28536,:), 1, count);
  t.seq_type = read_int(chr2(28537:28540,:), 1, count);
  t.serviceMode = read_int(chr2(28541:28544,:), 1, count);
  t.set_realtime_rotmat = read_int(chr2(28545:28548,:), 1, count);
  t.show_rtfilts = read_int(chr2(28549:28552,:), 1, count);
  t.si_flow = read_int(chr2(28553:28556,:), 1, count);
  t.sifsetwokey = read_int(chr2(28557:28560,:), 1, count);
  t.sigma1 = read_float(chr2(28561:28564,:), 1, count);
  t.sigma2 = read_float(chr2(28565:28568,:), 1, count);
  t.sigrammode = read_int(chr2(28569:28572,:), 1, count);
  t.silent_mode = read_int(chr2(28573:28576,:), 1, count);
  t.silent_slew_rate = read_float(chr2(28577:28580,:), 1, count);
  t.simulation = read_int(chr2(28581:28584,:), 1, count);
  t.skip_initialize_dbdtopt = read_int(chr2(28585:28588,:), 1, count);
  t.skip_minseqseg = read_int(chr2(28589:28592,:), 1, count);
  t.skip_navigator_prescan = read_int(chr2(28593:28596,:), 1, count);
  t.skip_rotmat_search = read_int(chr2(28597:28600,:), 1, count);
  t.skip_waveform_rotmat_check = read_int(chr2(28601:28604,:), 1, count);
  t.sl_per_chem = read_int(chr2(28605:28608,:), 1, count);
  t.slab_fact = read_float(chr2(28609:28612,:), 1, count);
  t.slab_wrap_corr = read_int(chr2(28613:28616,:), 1, count);
  t.slabtracking_flag = read_int(chr2(28617:28620,:), 1, count);
  t.sldelay = read_int(chr2(28621:28624,:), 1, count);
  t.sldeltime = read_int(chr2(28625:28628,:), 1, count);
  t.slfreq = read_int(chr2(28629:28632,:), 1, count);
  t.slice_col = read_int(chr2(28633:28636,:), 1, count);
  t.slice_dda = read_int(chr2(28637:28640,:), 1, count);
  t.slice_order = read_int(chr2(28641:28644,:), 1, count);
  t.slice_size = read_int(chr2(28645:28648,:), 1, count);
  t.slicecnt = read_int(chr2(28649:28652,:), 1, count);
  t.slicezp = read_int(chr2(28653:28656,:), 1, count);
  t.slorder = read_int(chr2(28657:28660,:), 1, count);
  t.slq_shots = read_int(chr2(28661:28664,:), 1, count);
  t.slquant1 = read_int(chr2(28665:28668,:), 1, count);
  t.slquant_per_trig = read_int(chr2(28669:28672,:), 1, count);
  t.slthick_rfgir01 = read_float(chr2(28673:28676,:), 1, count);
  t.slthick_rfgir02 = read_float(chr2(28677:28680,:), 1, count);
  t.slthick_scale = read_float(chr2(28681:28684,:), 1, count);
  t.smartPrepEdrFlag = read_int(chr2(28685:28688,:), 1, count);
  t.smartp_rtpend_wait = read_int(chr2(28689:28692,:), 1, count);
  t.smartprep_flag = read_int(chr2(28693:28696,:), 1, count);
  t.smartprep_was_on = read_int(chr2(28697:28700,:), 1, count);
  t.smoothec = read_int(chr2(28701:28704,:), 1, count);
  t.sp_first_scan = read_int(chr2(28705:28708,:), 1, count);
  t.sp_sat = read_int(chr2(28709:28712,:), 1, count);
  t.sp_satcard_loc = read_int(chr2(28713:28716,:), 1, count);
  t.sp_satend = read_int(chr2(28717:28720,:), 1, count);
  t.sp_satstart = read_int(chr2(28721:28724,:), 1, count);
  t.sp_sattime = read_int(chr2(28725:28728,:), 1, count);
  t.specdwells = read_int(chr2(28729:28732,:), 1, count);
  t.specir_delay = read_int(chr2(28733:28736,:), 1, count);
  t.specir_flag = read_int(chr2(28737:28740,:), 1, count);
  t.specir_ti = read_int(chr2(28741:28744,:), 1, count);
  t.specirsol = read_int(chr2(28745:28748,:), 1, count);
  t.specnavs = read_int(chr2(28749:28752,:), 1, count);
  t.specnex = read_int(chr2(28753:28756,:), 1, count);
  t.specnuc = read_int(chr2(28757:28760,:), 1, count);
  t.specpts = read_int(chr2(28761:28764,:), 1, count);
  t.specsolreps = read_int(chr2(28765:28768,:), 1, count);
  t.specwidth = read_int(chr2(28769:28772,:), 1, count);
  t.spgr_flag = read_int(chr2(28773:28776,:), 1, count);
  t.split_dab = read_int(chr2(28777:28780,:), 1, count);
  t.sprep_debug_flag = read_int(chr2(28781:28784,:), 1, count);
  t.sprep_save_raw_data = read_int(chr2(28785:28788,:), 1, count);
  t.sprep_timing_flag = read_int(chr2(28789:28792,:), 1, count);
  t.spsat_host_debug = read_int(chr2(28793:28796,:), 1, count);
  t.spsat_rfupa = read_int(chr2(28797:28800,:), 1, count);
  t.spsat_sys_type = read_int(chr2(28801:28804,:), 1, count);
  t.spsp_min_opvthick = read_float(chr2(28805:28808,:), 1, count);
  t.sr_flpvenc_limit = read_float(chr2(28809:28812,:), 1, count);
  t.srate = read_float(chr2(28813:28816,:), 1, count);
  t.srate_x = read_float(chr2(28817:28820,:), 1, count);
  t.srate_y = read_float(chr2(28821:28824,:), 1, count);
  t.srate_z = read_float(chr2(28825:28828,:), 1, count);
  t.srderate = read_float(chr2(28829:28832,:), 1, count);
  t.ss_convolution_flag = read_int(chr2(28833:28836,:), 1, count);
  t.ss_fa_scale_debug = read_int(chr2(28837:28840,:), 1, count);
  t.ss_fa_scaling_flag = read_int(chr2(28841:28844,:), 1, count);
  t.ss_maxoff = read_float(chr2(28845:28848,:), 1, count);
  t.ss_maxoffex = read_int(chr2(28849:28852,:), 1, count);
  t.ss_min_slthk = read_float(chr2(28853:28856,:), 1, count);
  t.ss_minslthk1 = read_float(chr2(28857:28860,:), 1, count);
  t.ss_override = read_int(chr2(28861:28864,:), 1, count);
  t.ss_psd_slthick = read_float(chr2(28865:28868,:), 1, count);
  t.ss_rewinder_flag = read_int(chr2(28869:28872,:), 1, count);
  t.ss_rf1 = read_int(chr2(28873:28876,:), 1, count);
  t.ss_rf_wait = read_int(chr2(28877:28880,:), 1, count);
  t.ssfat = read_int(chr2(28881:28884,:), 1, count);
  t.ssfat_freq = read_int(chr2(28885:28888,:), 1, count);
  t.ssfat_kaiser = read_int(chr2(28889:28892,:), 1, count);
  t.ssfat_nullb = read_int(chr2(28893:28896,:), 1, count);
  t.ssfat_ramp = read_int(chr2(28897:28900,:), 1, count);
  t.ssfat_rfspoil = read_int(chr2(28901:28904,:), 1, count);
  t.ssfat_rotate = read_int(chr2(28905:28908,:), 1, count);
  t.ssfat_vo = read_int(chr2(28909:28912,:), 1, count);
  t.ssfharea = read_float(chr2(28913:28916,:), 1, count);
  t.ssfp_flag = read_int(chr2(28917:28920,:), 1, count);
  t.ssfp_symmetry_flag = read_int(chr2(28921:28924,:), 1, count);
  t.ssfse_ir_on = read_int(chr2(28925:28928,:), 1, count);
  t.ssp_pwisi7 = read_int(chr2(28929:28932,:), 1, count);
  t.sszchop = read_int(chr2(28933:28936,:), 1, count);
  t.start_gycylra = read_float(chr2(28937:28940,:), 1, count);
  t.start_gycylratipup = read_float(chr2(28941:28944,:), 1, count);
  t.start_gzcylra = read_float(chr2(28945:28948,:), 1, count);
  t.start_gzcylratipup = read_float(chr2(28949:28952,:), 1, count);
  t.std_amp = read_float(chr2(28953:28956,:), 1, count);
  t.steam_pg_gap = read_int(chr2(28957:28960,:), 1, count);
  t.stopwatchFlag = read_int(chr2(28961:28964,:), 1, count);
  t.stre_flag = read_int(chr2(28965:28968,:), 1, count);
  t.sun_done_flag = read_int(chr2(28969:28972,:), 1, count);
  t.sun_success_flag1 = read_int(chr2(28973:28976,:), 1, count);
  t.sun_success_flag2 = read_int(chr2(28977:28980,:), 1, count);
  t.swan_flag = read_int(chr2(28981:28984,:), 1, count);
  t.swanfirstTE = read_int(chr2(28985:28988,:), 1, count);
  t.swap_fat_cs = read_int(chr2(28989:28992,:), 1, count);
  t.swap_mon_zy = read_int(chr2(28993:28996,:), 1, count);
  t.swap_monplane = read_int(chr2(28997:29000,:), 1, count);
  t.system_type = read_int(chr2(29001:29004,:), 1, count);
  t.t1flair_flag = read_int(chr2(29005:29008,:), 1, count);
  t.t2pk_area = read_float(chr2(29009:29012,:), 1, count);
  t.t2pk_delay = read_int(chr2(29013:29016,:), 1, count);
  t.t2prep_flag = read_int(chr2(29017:29020,:), 1, count);
  t.t2prep_num180 = read_int(chr2(29021:29024,:), 1, count);
  t.t2prep_rate = read_float(chr2(29025:29028,:), 1, count);
  t.t2prep_t180 = read_int(chr2(29029:29032,:), 1, count);
  t.t2prep_tseq = read_int(chr2(29033:29036,:), 1, count);
  t.t_exa = read_int(chr2(29037:29040,:), 1, count);
  t.t_exa_cylr = read_int(chr2(29041:29044,:), 1, count);
  t.t_exaas = read_int(chr2(29045:29048,:), 1, count);
  t.t_exb = read_int(chr2(29049:29052,:), 1, count);
  t.t_exb_cylr = read_int(chr2(29053:29056,:), 1, count);
  t.t_rd1a = read_int(chr2(29057:29060,:), 1, count);
  t.t_rd1a_frac = read_int(chr2(29061:29064,:), 1, count);
  t.t_rd1a_full = read_int(chr2(29065:29068,:), 1, count);
  t.t_rdb = read_int(chr2(29069:29072,:), 1, count);
  t.t_rdb_cylr = read_int(chr2(29073:29076,:), 1, count);
  t.t_rdb_frac = read_int(chr2(29077:29080,:), 1, count);
  t.t_rdb_full = read_int(chr2(29081:29084,:), 1, count);
  t.t_slice2read = read_int(chr2(29085:29088,:), 1, count);
  t.t_slicereadgap = read_int(chr2(29089:29092,:), 1, count);
  t.ta_180sp = read_int(chr2(29093:29096,:), 1, count);
  t.tableaccel = read_int(chr2(29097:29100,:), 1, count);
  t.tabledecel = read_int(chr2(29101:29104,:), 1, count);
  t.tablespeed = read_int(chr2(29105:29108,:), 1, count);
  t.targ_dr = read_float(chr2(29109:29112,:), 1, count);
  t.targ_dr_ramp = read_float(chr2(29113:29116,:), 1, count);
  t.target_cfh_crusher = read_float(chr2(29117:29120,:), 1, count);
  t.target_cfh_crusher2 = read_float(chr2(29121:29124,:), 1, count);
  t.target_ti = read_int(chr2(29125:29128,:), 1, count);
  t.tb_180sp = read_int(chr2(29129:29132,:), 1, count);
  t.td0 = read_int(chr2(29133:29136,:), 1, count);
  t.td0as = read_int(chr2(29137:29140,:), 1, count);
  t.td0dtg = read_int(chr2(29141:29144,:), 1, count);
  t.td0rs = read_int(chr2(29145:29148,:), 1, count);
  t.tdaq = read_int(chr2(29149:29152,:), 1, count);
  t.tdel1_time = read_int(chr2(29153:29156,:), 1, count);
  t.tdel1_tmp = read_int(chr2(29157:29160,:), 1, count);
  t.te_180sp = read_int(chr2(29161:29164,:), 1, count);
  t.te_as = read_int(chr2(29165:29168,:), 1, count);
  t.te_time = read_int(chr2(29169:29172,:), 1, count);
  t.temp_factor = read_float(chr2(29173:29176,:), 1, count);
  t.temp_float = read_float(chr2(29177:29180,:), 1, count);
  t.temp_grd = read_int(chr2(29181:29184,:), 1, count);
  t.temp_res_rf1as = read_int(chr2(29185:29188,:), 1, count);
  t.temp_res_rf1cfh = read_int(chr2(29189:29192,:), 1, count);
  t.temp_res_rf1cfl = read_int(chr2(29193:29196,:), 1, count);
  t.temp_res_rf1ftg = read_int(chr2(29197:29200,:), 1, count);
  t.temp_res_rf1mon = read_int(chr2(29201:29204,:), 1, count);
  t.temp_res_rf2ftg = read_int(chr2(29205:29208,:), 1, count);
  t.temp_res_rf2mon = read_int(chr2(29209:29212,:), 1, count);
  t.temp_res_rf2mps1 = read_int(chr2(29213:29216,:), 1, count);
  t.temp_res_rf2xtg = read_int(chr2(29217:29220,:), 1, count);
  t.temp_res_rf3ftg = read_int(chr2(29221:29224,:), 1, count);
  t.temp_res_rfmontipup = read_int(chr2(29225:29228,:), 1, count);
  t.temp_res_rfse1 = read_int(chr2(29229:29232,:), 1, count);
  t.temp_res_rfse2 = read_int(chr2(29233:29236,:), 1, count);
  t.temp_res_rfse3 = read_int(chr2(29237:29240,:), 1, count);
  t.temp_res_rfse4 = read_int(chr2(29241:29244,:), 1, count);
  t.temp_res_rfse5 = read_int(chr2(29245:29248,:), 1, count);
  t.temp_res_rfse6 = read_int(chr2(29249:29252,:), 1, count);
  t.temp_res_rfsx1 = read_int(chr2(29253:29256,:), 1, count);
  t.temp_res_rfsx2 = read_int(chr2(29257:29260,:), 1, count);
  t.temp_res_rfsy1 = read_int(chr2(29261:29264,:), 1, count);
  t.temp_res_rfsy2 = read_int(chr2(29265:29268,:), 1, count);
  t.temp_res_rfsz1 = read_int(chr2(29269:29272,:), 1, count);
  t.temp_res_rfsz2 = read_int(chr2(29273:29276,:), 1, count);
  t.temp_rf = read_int(chr2(29277:29280,:), 1, count);
  t.tfe_extra = read_int(chr2(29281:29284,:), 1, count);
  t.tg_1_2_pw = read_int(chr2(29285:29288,:), 1, count);
  t.tg_axial = read_int(chr2(29289:29292,:), 1, count);
  t.tg_killer_axis = read_WF_PROCESSOR(chr2(29293:29296,:), 1, count);
  t.tg_read_axis = read_WF_PROCESSOR(chr2(29297:29300,:), 1, count);
  t.tgcap = read_int(chr2(29301:29304,:), 1, count);
  t.tgfov = read_float(chr2(29305:29308,:), 1, count);
  t.tgwindow = read_int(chr2(29309:29312,:), 1, count);
  t.theta = read_float(chr2(29313:29316,:), 1, count);
  t.thetatype = read_int(chr2(29317:29320,:), 1, count);
  t.thickPS_mod = read_float(chr2(29321:29324,:), 1, count);
  t.thk_rf0 = read_float(chr2(29325:29328,:), 1, count);
  t.thk_rf0cfh = read_float(chr2(29329:29332,:), 1, count);
  t.thk_rf1 = read_float(chr2(29333:29336,:), 1, count);
  t.thk_rf1as = read_float(chr2(29337:29340,:), 1, count);
  t.thk_rf1cfh = read_float(chr2(29341:29344,:), 1, count);
  t.thk_rf1cfl = read_float(chr2(29345:29348,:), 1, count);
  t.thk_rf1ftg = read_float(chr2(29349:29352,:), 1, count);
  t.thk_rf1mon = read_float(chr2(29353:29356,:), 1, count);
  t.thk_rf1tm = read_float(chr2(29357:29360,:), 1, count);
  t.thk_rf2ftg = read_float(chr2(29361:29364,:), 1, count);
  t.thk_rf2mon = read_float(chr2(29365:29368,:), 1, count);
  t.thk_rf2mps1 = read_float(chr2(29369:29372,:), 1, count);
  t.thk_rf2xtg = read_float(chr2(29373:29376,:), 1, count);
  t.thk_rf3ftg = read_float(chr2(29377:29380,:), 1, count);
  t.thk_rffrir = read_float(chr2(29381:29384,:), 1, count);
  t.thk_rfgir01 = read_float(chr2(29385:29388,:), 1, count);
  t.thk_rfgir02 = read_float(chr2(29389:29392,:), 1, count);
  t.thk_rfmontipup = read_float(chr2(29393:29396,:), 1, count);
  t.thk_rfse1 = read_float(chr2(29397:29400,:), 1, count);
  t.thk_rfse2 = read_float(chr2(29401:29404,:), 1, count);
  t.thk_rfse3 = read_float(chr2(29405:29408,:), 1, count);
  t.thk_rfse4 = read_float(chr2(29409:29412,:), 1, count);
  t.thk_rfse5 = read_float(chr2(29413:29416,:), 1, count);
  t.thk_rfse6 = read_float(chr2(29417:29420,:), 1, count);
  t.thk_rfsx1 = read_float(chr2(29421:29424,:), 1, count);
  t.thk_rfsx2 = read_float(chr2(29425:29428,:), 1, count);
  t.thk_rfsy1 = read_float(chr2(29429:29432,:), 1, count);
  t.thk_rfsy2 = read_float(chr2(29433:29436,:), 1, count);
  t.thk_rfsz1 = read_float(chr2(29437:29440,:), 1, count);
  t.thk_rfsz2 = read_float(chr2(29441:29444,:), 1, count);
  t.threedpktdly = read_int(chr2(29445:29448,:), 1, count);
  t.ti_rfgir01 = read_int(chr2(29449:29452,:), 1, count);
  t.ti_rfgir02 = read_int(chr2(29453:29456,:), 1, count);
  t.time_between_rfflp180_venc = read_int(chr2(29457:29460,:), 1, count);
  t.time_between_rfflp90_venc = read_int(chr2(29461:29464,:), 1, count);
  t.time_between_venc1_2 = read_int(chr2(29465:29468,:), 1, count);
  t.time_between_venc2_3 = read_int(chr2(29469:29472,:), 1, count);
  t.time_between_venc_rfflp180 = read_int(chr2(29473:29476,:), 1, count);
  t.time_between_venc_rfflp90r = read_int(chr2(29477:29480,:), 1, count);
  t.time_fsprep = read_int(chr2(29481:29484,:), 1, count);
  t.time_killer = read_int(chr2(29485:29488,:), 1, count);
  t.time_pgen = read_int(chr2(29489:29492,:), 1, count);
  t.time_s5fpprep = read_int(chr2(29493:29496,:), 1, count);
  t.time_seqwait = read_int(chr2(29497:29500,:), 1, count);
  t.time_spoiler = read_int(chr2(29501:29504,:), 1, count);
  t.time_ssfprep = read_int(chr2(29505:29508,:), 1, count);
  t.time_ssi = read_int(chr2(29509:29512,:), 1, count);
  t.time_ssi_pre = read_int(chr2(29513:29516,:), 1, count);
  t.time_ssias = read_int(chr2(29517:29520,:), 1, count);
  t.time_ssidtg = read_int(chr2(29521:29524,:), 1, count);
  t.time_ssirs = read_int(chr2(29525:29528,:), 1, count);
  t.time_wait2 = read_int(chr2(29529:29532,:), 1, count);
  t.time_wait3 = read_int(chr2(29533:29536,:), 1, count);
  t.time_wait4 = read_int(chr2(29537:29540,:), 1, count);
  t.timefcx = read_int(chr2(29541:29544,:), 1, count);
  t.timefcy = read_int(chr2(29545:29548,:), 1, count);
  t.timefcz = read_int(chr2(29549:29552,:), 1, count);
  t.timefcz_echo1 = read_int(chr2(29553:29556,:), 1, count);
  t.tlead = read_int(chr2(29557:29560,:), 1, count);
  t.tlead_cylnav = read_int(chr2(29561:29564,:), 1, count);
  t.tlead_monitor = read_int(chr2(29565:29568,:), 1, count);
  t.tlead_montipup = read_int(chr2(29569:29572,:), 1, count);
  t.tleadas = read_int(chr2(29573:29576,:), 1, count);
  t.tleadcs = read_int(chr2(29577:29580,:), 1, count);
  t.tleaddtg = read_int(chr2(29581:29584,:), 1, count);
  t.tleadrs = read_int(chr2(29585:29588,:), 1, count);
  t.tm_axis = read_int(chr2(29589:29592,:), 1, count);
  t.tm_disdaqs = read_int(chr2(29593:29596,:), 1, count);
  t.tm_flag = read_int(chr2(29597:29600,:), 1, count);
  t.tm_flip = read_float(chr2(29601:29604,:), 1, count);
  t.tm_locstep = read_float(chr2(29605:29608,:), 1, count);
  t.tm_nex = read_int(chr2(29609:29612,:), 1, count);
  t.tm_ns = read_int(chr2(29613:29616,:), 1, count);
  t.tm_pos_start = read_int(chr2(29617:29620,:), 1, count);
  t.tm_prepslice_flag = read_int(chr2(29621:29624,:), 1, count);
  t.tm_scale = read_float(chr2(29625:29628,:), 1, count);
  t.tm_slthick = read_float(chr2(29629:29632,:), 1, count);
  t.tm_spiral_delay = read_int(chr2(29633:29636,:), 1, count);
  t.tm_time = read_int(chr2(29637:29640,:), 1, count);
  t.tm_xloc = read_float(chr2(29641:29644,:), 1, count);
  t.tm_yloc = read_float(chr2(29645:29648,:), 1, count);
  t.tmin = read_int(chr2(29649:29652,:), 1, count);
  t.tmin_mon = read_int(chr2(29653:29656,:), 1, count);
  t.tmin_montipup = read_int(chr2(29657:29660,:), 1, count);
  t.tmin_reduced = read_int(chr2(29661:29664,:), 1, count);
  t.tmin_satoff = read_int(chr2(29665:29668,:), 1, count);
  t.tmin_total = read_int(chr2(29669:29672,:), 1, count);
  t.tmpbw = read_float(chr2(29673:29676,:), 1, count);
  t.tmpbw1 = read_float(chr2(29677:29680,:), 1, count);
  t.tns_len = read_int(chr2(29681:29684,:), 1, count);
  t.tnslength = read_int(chr2(29685:29688,:), 1, count);
  t.tof_lowflip_asset_flag = read_int(chr2(29689:29692,:), 1, count);
  t.topofhead = read_POSITION_DETECTION_DONE_TYPE(chr2(29693:29716,:), 1, count);
  t.total_acq_points = read_int(chr2(29717:29720,:), 1, count);
  t.total_acq_regions = read_int(chr2(29721:29724,:), 1, count);
  t.total_area_gx = read_float(chr2(29725:29728,:), 1, count);
  t.total_area_gxfc = read_float(chr2(29729:29732,:), 1, count);
  t.total_area_gz = read_float(chr2(29733:29736,:), 1, count);
  t.total_area_gzfc = read_float(chr2(29737:29740,:), 1, count);
  t.total_quiet_dda = read_int(chr2(29741:29744,:), 1, count);
  t.totalecregions = read_int(chr2(29745:29748,:), 1, count);
  t.tr_as = read_int(chr2(29749:29752,:), 1, count);
  t.tr_dtg = read_int(chr2(29753:29756,:), 1, count);
  t.tr_pad = read_int(chr2(29757:29760,:), 1, count);
  t.tr_prep_rs = read_int(chr2(29761:29764,:), 1, count);
  t.tr_rs = read_int(chr2(29765:29768,:), 1, count);
  t.track_flag = read_int(chr2(29769:29772,:), 1, count);
  t.tracker_quant = read_int(chr2(29773:29776,:), 1, count);
  t.transpose_monloc = read_int(chr2(29777:29780,:), 1, count);
  t.tricks_check = read_int(chr2(29781:29784,:), 1, count);
  t.tricks_debug = read_int(chr2(29785:29788,:), 1, count);
  t.tricks_delay = read_int(chr2(29789:29792,:), 1, count);
  t.tricks_flag = read_int(chr2(29793:29796,:), 1, count);
  t.tricks_index = read_int(chr2(29797:29800,:), 1, count);
  t.tricks_index2 = read_int(chr2(29801:29804,:), 1, count);
  t.tricks_mask_time = read_float(chr2(29805:29808,:), 1, count);
  t.tricks_maxecho = read_int(chr2(29809:29812,:), 1, count);
  t.tricks_maxphases = read_int(chr2(29813:29816,:), 1, count);
  t.tricks_maxseries = read_int(chr2(29817:29820,:), 1, count);
  t.tricks_minecho = read_int(chr2(29821:29824,:), 1, count);
  t.tricks_stop = read_int(chr2(29825:29828,:), 1, count);
  t.tricks_transition_views = read_int(chr2(29829:29832,:), 1, count);
  t.tricksdda = read_int(chr2(29833:29836,:), 1, count);
  t.trig_aps2 = read_int(chr2(29837:29840,:), 1, count);
  t.trig_mps2 = read_int(chr2(29841:29844,:), 1, count);
  t.trig_prescan = read_int(chr2(29845:29848,:), 1, count);
  t.trig_scan = read_int(chr2(29849:29852,:), 1, count);
  t.triggerState = read_LONG(chr2(29853:29856,:), 1, count);
  t.trigger_delay_silent_countdown = read_int(chr2(29857:29860,:), 1, count);
  t.trigger_delay_wosp = read_int(chr2(29861:29864,:), 1, count);
  t.truenex = read_float(chr2(29865:29868,:), 1, count);
  t.tsamp = read_int(chr2(29869:29872,:), 1, count);
  t.tseq_gzk = read_int(chr2(29873:29876,:), 1, count);
  t.tseq_irprep = read_int(chr2(29877:29880,:), 1, count);
  t.tseq_msde = read_int(chr2(29881:29884,:), 1, count);
  t.tseq_prep_frir = read_int(chr2(29885:29888,:), 1, count);
  t.tsp = read_float(chr2(29889:29892,:), 1, count);
  t.turbo_cemra_enable = read_int(chr2(29893:29896,:), 1, count);
  t.turbo_cemra_flag = read_int(chr2(29897:29900,:), 1, count);
  t.turbo_flag = read_int(chr2(29901:29904,:), 1, count);
  t.twaitt2prep = read_int(chr2(29905:29908,:), 1, count);
  t.ugfsf_flag = read_int(chr2(29909:29912,:), 1, count);
  t.ugfsf_flat_dda = read_int(chr2(29913:29916,:), 1, count);
  t.ugfsf_linear_ramp_down = read_int(chr2(29917:29920,:), 1, count);
  t.ugfsf_ramp_dda = read_int(chr2(29921:29924,:), 1, count);
  t.ugfsf_shot_delay = read_int(chr2(29925:29928,:), 1, count);
  t.ugfsf_slice_dda = read_int(chr2(29929:29932,:), 1, count);
  t.ugfsf_slice_order_flag = read_int(chr2(29933:29936,:), 1, count);
  t.ugfsf_view_order_flag = read_int(chr2(29937:29940,:), 1, count);
  t.coilInfo_tgt = read_COIL_INFO(chr2(29941:31060,:), 1, count*10);
  t.volRecCoilInfo_tgt = read_COIL_INFO(chr2(31061:32180,:), 1, count*10);
  t.data_acq_order = read_DATA_ACQ_ORDER(chr2(32181:44468,:), 1, count*2048);
  t.gir_info = read_GIR_INFO(chr2(44469:44556,:), 1, count*2);
  t.gradx = read_GRAD_PULSE(chr2(44561:46480,:), 1, count*15);
  t.grady = read_GRAD_PULSE(chr2(46481:49552,:), 1, count*24);
  t.gradz = read_GRAD_PULSE(chr2(49553:52880,:), 1, count*26);
  t.phase_off = read_PHASE_OFF(chr2(52881:69264,:), 1, count*2048);
  t.presscfh_info = read_PSC_INFO(chr2(69265:69564,:), 1, count*5);
  t.psc_info = read_PSC_INFO(chr2(69565:69864,:), 1, count*5);
  t.psd_filt_spec = read_PSD_FILTER_GEN(chr2(69865:70376,:), 1, count*16);
  t.rfpulse = read_RF_PULSE(chr2(70377:76312,:), 1, count*53);
  t.rfpulseInfo = read_RF_PULSE_INFO(chr2(76313:76736,:), 1, count*53);
  t.asrsp_info = read_RSP_INFO(chr2(76737:76784,:), 1, count*3);
  t.dtgrsp_info = read_RSP_INFO(chr2(76785:76864,:), 1, count*5);
  t.mon_rsp_info2 = read_RSP_INFO(chr2(76865:76880,:), 1, count*1);
  t.mon_rsp_info = read_RSP_INFO(chr2(76881:76896,:), 1, count*1);
  t.rsp_info = read_RSP_INFO(chr2(76897:109664,:), 1, count*2048);
  t.rsrsp_info = read_RSP_INFO(chr2(109665:109680,:), 1, count*1);
  t.rsp_psc_info = read_RSP_PSC_INFO(chr2(109681:110240,:), 1, count*5);
  t.asscan_info = read_SCAN_INFO(chr2(110241:110456,:), 1, count*3);
  t.scan_info = read_SCAN_INFO(chr2(110457:257912,:), 1, count*2048);
  t.scan_info_base = read_SCAN_INFO(chr2(257913:257984,:), 1, count*1);
  t.slab_off = read_SLAB_OFF(chr2(257985:260032,:), 1, count*256);
  t.brs_viewtab = read_SPIRAL_VIEW(chr2(260033:1046464,:), 1, count*131072);
  t.txCoilInfo_tgt = read_TX_COIL_INFO(chr2(1046465:1047704,:), 1, count*5);
  t.hgzssfn = read_char(chr2(1047705:1047744,:), 1, count*40);
  t.piamval1 = read_char(chr2(1047745:1047752,:), 1, count*8);
  t.piamval2 = read_char(chr2(1047753:1047760,:), 1, count*8);
  t.piamval3 = read_char(chr2(1047761:1047768,:), 1, count*8);
  t.piamval4 = read_char(chr2(1047769:1047776,:), 1, count*8);
  t.piamval5 = read_char(chr2(1047777:1047784,:), 1, count*8);
  t.piamval6 = read_char(chr2(1047785:1047792,:), 1, count*8);
  t.pidfirecval2 = read_char(chr2(1047793:1047822,:), 1, count*30);
  t.pidfirecval3 = read_char(chr2(1047823:1047852,:), 1, count*30);
  t.pidfirecval4 = read_char(chr2(1047853:1047882,:), 1, count*30);
  t.pidfirecval5 = read_char(chr2(1047883:1047912,:), 1, count*30);
  t.pidifaxval1 = read_char(chr2(1047913:1047919,:), 1, count*7);
  t.pidifaxval2 = read_char(chr2(1047920:1047926,:), 1, count*7);
  t.pidifaxval3 = read_char(chr2(1047927:1047933,:), 1, count*7);
  t.pidifaxval4 = read_char(chr2(1047934:1047940,:), 1, count*7);
  t.pidifaxval5 = read_char(chr2(1047941:1047947,:), 1, count*7);
  t.pidifaxval6 = read_char(chr2(1047948:1047954,:), 1, count*7);
  t.pidifrecval1 = read_char(chr2(1047955:1047984,:), 1, count*30);
  t.pitrecoverylabel = read_char(chr2(1047985:1048016,:), 1, count*32);
  t.ssgzfile = read_char(chr2(1048017:1048056,:), 1, count*40);
  t.ssrffile = read_char(chr2(1048057:1048096,:), 1, count*40);
  t.body_sar_table = read_float(chr2(1048097:1049536,:), 1, count*360);
  t.brs_mfa_angles = read_float(chr2(1049537:1049632,:), 1, count*24);
  t.eg_sat_rot = read_float(chr2(1049633:1049848,:), 1, count*54);
  t.extremity_sar_table = read_float(chr2(1049849:1051288,:), 1, count*360);
  t.flp_venc_x = read_float(chr2(1051289:1051320,:), 1, count*8);
  t.flp_venc_y = read_float(chr2(1051321:1051352,:), 1, count*8);
  t.flp_venc_z = read_float(chr2(1051353:1051384,:), 1, count*8);
  t.head_sar_table = read_float(chr2(1051385:1052824,:), 1, count*360);
  t.osfp_vfa = read_float(chr2(1052825:1054872,:), 1, count*512);
  t.ratio_rfflp180 = read_float(chr2(1054873:1054888,:), 1, count*4);
  t.rfgir01_info = read_float(chr2(1054889:1054960,:), 1, count*18);
  t.rfgir02_info = read_float(chr2(1054961:1055032,:), 1, count*18);
  t.rhdiffusion_grad_amp = read_float(chr2(1055033:1061176,:), 1, count*1536);
  t.rotmatrix = read_float(chr2(1061177:1061212,:), 1, count*9);
  t.xyz_base = read_float(chr2(1061213:1085788,:), 1, count*6144);
  t.PSfreq_offset = read_int(chr2(1085789:1085868,:), 1, count*20);
  t.PhaseDoneSchedule = read_int(chr2(1085869:1087920,:), 1, count*513);
  t.RegionSchedule = read_int(chr2(1087921:1088320,:), 1, count*100);
  t.RegionsSchedule = read_int(chr2(1088321:1106564,:), 1, count*4561);
  t.arcPhaseRemapTable = read_int(chr2(1106565:1110664,:), 1, count*1025);
  t.arcSliceRemapTable = read_int(chr2(1110665:1118856,:), 1, count*2048);
  t.brs_jumptab = read_int(chr2(1118857:1122952,:), 1, count*1024);
  t.brs_savrot = read_int(chr2(1122953:1270408,:), 1, count*36864);
  t.brs_xgrad2 = read_int(chr2(1270409:1335944,:), 1, count*16384);
  t.brs_xgrad = read_int(chr2(1335945:1401480,:), 1, count*16384);
  t.brs_ygrad2 = read_int(chr2(1401481:1467016,:), 1, count*16384);
  t.brs_ygrad = read_int(chr2(1467017:1532552,:), 1, count*16384);
  t.cum_regs_per_phase = read_int(chr2(1532553:1534604,:), 1, count*513);
  t.cum_views_per_region = read_int(chr2(1534605:1534732,:), 1, count*32);
  t.ectricks_kernel_regions = read_int(chr2(1534733:1534796,:), 1, count*16);
  t.ectricks_mask_regions = read_int(chr2(1534797:1534828,:), 1, count*8);
  t.extraspecial_slice = read_int(chr2(1534829:1543020,:), 1, count*2048);
  t.ia_gzvlwa = read_int(chr2(1543021:1551212,:), 1, count*2048);
  t.ia_gzvlwb = read_int(chr2(1551213:1559404,:), 1, count*2048);
  t.ia_rf1_osfp = read_int(chr2(1559405:1561452,:), 1, count*512);
  t.off_rfcsz = read_int(chr2(1561453:1561456,:), 1, count*1);
  t.off_rfcsz_base = read_int(chr2(1561457:1569648,:), 1, count*2048);
  t.pw_gzvl = read_int(chr2(1569649:1577840,:), 1, count*2048);
  t.pw_gzvla = read_int(chr2(1577841:1586032,:), 1, count*2048);
  t.pw_gzvld = read_int(chr2(1586033:1594224,:), 1, count*2048);
  t.regs_per_phase = read_int(chr2(1594225:1596276,:), 1, count*513);
  t.sat_rot_ex_indices = read_int(chr2(1596277:1596304,:), 1, count*7);
  t.slicetab = read_int(chr2(1596305:1604496,:), 1, count*2048);
  t.volumetab2 = read_int(chr2(1604497:1612688,:), 1, count*2048);
  t.volumetab = read_int(chr2(1612689:1620880,:), 1, count*2048);
  t.zfctab = read_int(chr2(1620881:1629072,:), 1, count*2048);
  t.zfctab_echo1 = read_int(chr2(1629073:1637264,:), 1, count*2048);
  t.PSrot = read_long_int(chr2(1637265:1637336,:), 1, count*9);
  t.PSrot_mod = read_long_int(chr2(1637337:1637408,:), 1, count*9);
  t.dtgrsprot = read_long_int(chr2(1637409:1637768,:), 1, count*45);
  t.ipg_alloc_instr = read_long_int(chr2(1637769:1637840,:), 1, count*9);
  t.nav_channel_bit = read_long_int(chr2(1637841:1637872,:), 1, count*4);
  t.navscm_channel_bit = read_long_int(chr2(1637873:1637904,:), 1, count*4);
  t.rfgir01_rot_info = read_long_int(chr2(1637905:1638048,:), 1, count*18);
  t.rfgir02_rot_info = read_long_int(chr2(1638049:1638192,:), 1, count*18);
  t.rsp_PSrot = read_long_int(chr2(1638193:1638552,:), 1, count*45);
  t.rsprot = read_long_int(chr2(1638553:1933464,:), 1, count*36864);
  t.rsprot_base = read_long_int(chr2(1933465:2228376,:), 1, count*36864);
  t.rsprot_gir = read_long_int(chr2(2228377:2228736,:), 1, count*45);
  t.rsprot_monitor = read_long_int(chr2(2228737:2228808,:), 1, count*9);
  t.rsptrigger = read_long_int(chr2(2228809:2261576,:), 1, count*4096);
  t.rsrsprot = read_long_int(chr2(2261577:2261648,:), 1, count*9);
  t.sat_rot_matrices = read_long_int(chr2(2261649:2262656,:), 1, count*126);
  t.mcbias_info = read_n32(chr2(2262657:2262668,:), 1, count*3);
  t.aslimgtab = read_short_int(chr2(2262669:2262674,:), 1, count*3);
  t.aslnextab = read_short_int(chr2(2262675:2262680,:), 1, count*3);
  t.ulimte1 = read_int(chr2(2262681:2262684,:), 1, count);
  t.ulimte2 = read_int(chr2(2262685:2262688,:), 1, count);
  t.ulimte3 = read_int(chr2(2262689:2262692,:), 1, count);
  t.unaccel_dayres = read_int(chr2(2262693:2262696,:), 1, count);
  t.unaccel_rhnframes = read_int(chr2(2262697:2262700,:), 1, count);
  t.uniPolar_flag = read_int(chr2(2262701:2262704,:), 1, count);
  t.upmxdisable = read_int(chr2(2262705:2262708,:), 1, count);
  t.useFirstEchoComp = read_int(chr2(2262709:2262712,:), 1, count);
  t.use_dbdt_opt = read_int(chr2(2262713:2262716,:), 1, count);
  t.use_ecg_scancore = read_int(chr2(2262717:2262720,:), 1, count);
  t.use_ermes = read_int(chr2(2262721:2262724,:), 1, count);
  t.use_myscan = read_int(chr2(2262725:2262728,:), 1, count);
  t.use_slr_inv = read_int(chr2(2262729:2262732,:), 1, count);
  t.usevenc = read_float(chr2(2262733:2262736,:), 1, count);
  t.val15_lock = read_int(chr2(2262737:2262740,:), 1, count);
  t.valid_decimation = read_float(chr2(2262741:2262744,:), 1, count);
  t.valid_max_rbw = read_float(chr2(2262745:2262748,:), 1, count);
  t.valid_rbw = read_float(chr2(2262749:2262752,:), 1, count);
  t.value_system_flag = read_int(chr2(2262753:2262756,:), 1, count);
  t.vas_ovrhd = read_int(chr2(2262757:2262760,:), 1, count);
  t.vast_mode = read_int(chr2(2262761:2262764,:), 1, count);
  t.vast_symm = read_int(chr2(2262765:2262768,:), 1, count);
  t.velocity_3in1 = read_float(chr2(2262769:2262772,:), 1, count);
  t.velocity_single = read_float(chr2(2262773:2262776,:), 1, count);
  t.velocity_venc = read_float(chr2(2262777:2262780,:), 1, count);
  t.venc_direction_bitmask = read_int(chr2(2262781:2262784,:), 1, count);
  t.venc_polarity_mode = read_int(chr2(2262785:2262788,:), 1, count);
  t.vibrant_flag = read_int(chr2(2262789:2262792,:), 1, count);
  t.vibrantxv_flag = read_int(chr2(2262793:2262796,:), 1, count);
  t.view_per_shot = read_int(chr2(2262797:2262800,:), 1, count);
  t.view_to_center = read_int(chr2(2262801:2262804,:), 1, count);
  t.viewoffs = read_int(chr2(2262805:2262808,:), 1, count);
  t.views_per_segment = read_int(chr2(2262809:2262812,:), 1, count);
  t.viewshd_num = read_int(chr2(2262813:2262816,:), 1, count);
  t.viewsperregion = read_int(chr2(2262817:2262820,:), 1, count);
  t.vol_ratio_est_req = read_float(chr2(2262821:2262824,:), 1, count);
  t.vol_scale_constraint_type = read_int(chr2(2262825:2262828,:), 1, count);
  t.vol_scale_type = read_int(chr2(2262829:2262832,:), 1, count);
  t.vol_shift_constraint_type = read_int(chr2(2262833:2262836,:), 1, count);
  t.vol_shift_type = read_int(chr2(2262837:2262840,:), 1, count);
  t.vrg_sat = read_int(chr2(2262841:2262844,:), 1, count);
  t.vrgfsamp = read_int(chr2(2262845:2262848,:), 1, count);
  t.vrgsat = read_int(chr2(2262849:2262852,:), 1, count);
  t.vstrte_flag = read_int(chr2(2262853:2262856,:), 1, count);
  t.w_z1 = read_int(chr2(2262857:2262860,:), 1, count);
  t.w_zfc = read_int(chr2(2262861:2262864,:), 1, count);
  t.waitTime = read_int(chr2(2262865:2262868,:), 1, count);
  t.wait_flpk = read_int(chr2(2262869:2262872,:), 1, count);
  t.wait_pts = read_int(chr2(2262873:2262876,:), 1, count);
  t.wg_cfh_rf3 = read_int(chr2(2262877:2262880,:), 1, count);
  t.wg_cfh_rf4 = read_int(chr2(2262881:2262884,:), 1, count);
  t.wg_csw_wait = read_int(chr2(2262885:2262888,:), 1, count);
  t.wg_dix_ssppost = read_int(chr2(2262889:2262892,:), 1, count);
  t.wg_dix_ssppre = read_int(chr2(2262893:2262896,:), 1, count);
  t.wg_dix_xpre = read_int(chr2(2262897:2262900,:), 1, count);
  t.wg_dummyrf = read_int(chr2(2262901:2262904,:), 1, count);
  t.wg_gate_isi = read_int(chr2(2262905:2262908,:), 1, count);
  t.wg_gx1 = read_int(chr2(2262909:2262912,:), 1, count);
  t.wg_gx1as = read_int(chr2(2262913:2262916,:), 1, count);
  t.wg_gx1bftg = read_int(chr2(2262917:2262920,:), 1, count);
  t.wg_gx1bxtg = read_int(chr2(2262921:2262924,:), 1, count);
  t.wg_gx1cfh = read_int(chr2(2262925:2262928,:), 1, count);
  t.wg_gx1dtg = read_int(chr2(2262929:2262932,:), 1, count);
  t.wg_gx1ftg = read_int(chr2(2262933:2262936,:), 1, count);
  t.wg_gx1mon = read_int(chr2(2262937:2262940,:), 1, count);
  t.wg_gx1mps1 = read_int(chr2(2262941:2262944,:), 1, count);
  t.wg_gx1rs = read_int(chr2(2262945:2262948,:), 1, count);
  t.wg_gx1tm = read_int(chr2(2262949:2262952,:), 1, count);
  t.wg_gx2 = read_int(chr2(2262953:2262956,:), 1, count);
  t.wg_gx2dtg = read_int(chr2(2262957:2262960,:), 1, count);
  t.wg_gx2ftg = read_int(chr2(2262961:2262964,:), 1, count);
  t.wg_gx2rs = read_int(chr2(2262965:2262968,:), 1, count);
  t.wg_gx2test = read_int(chr2(2262969:2262972,:), 1, count);
  t.wg_gxb = read_int(chr2(2262973:2262976,:), 1, count);
  t.wg_gxbrsfc1 = read_int(chr2(2262977:2262980,:), 1, count);
  t.wg_gxbrsfc2 = read_int(chr2(2262981:2262984,:), 1, count);
  t.wg_gxfc = read_int(chr2(2262985:2262988,:), 1, count);
  t.wg_gxfcmon = read_int(chr2(2262989:2262992,:), 1, count);
  t.wg_gxflpk = read_int(chr2(2262993:2262996,:), 1, count);
  t.wg_gxflpvenc = read_int(chr2(2262997:2263000,:), 1, count);
  t.wg_gxhyst1 = read_int(chr2(2263001:2263004,:), 1, count);
  t.wg_gxhyst2 = read_int(chr2(2263005:2263008,:), 1, count);
  t.wg_gxkas = read_int(chr2(2263009:2263012,:), 1, count);
  t.wg_gxkbsdtg = read_int(chr2(2263013:2263016,:), 1, count);
  t.wg_gxkbsrs = read_int(chr2(2263017:2263020,:), 1, count);
  t.wg_gxkcs = read_int(chr2(2263021:2263024,:), 1, count);
  t.wg_gxkdtg = read_int(chr2(2263025:2263028,:), 1, count);
  t.wg_gxkfs = read_int(chr2(2263029:2263032,:), 1, count);
  t.wg_gxkill = read_int(chr2(2263033:2263036,:), 1, count);
  t.wg_gxkrcvn = read_int(chr2(2263037:2263040,:), 1, count);
  t.wg_gxkrs = read_int(chr2(2263041:2263044,:), 1, count);
  t.wg_gxks = read_int(chr2(2263045:2263048,:), 1, count);
  t.wg_gxkse1 = read_int(chr2(2263049:2263052,:), 1, count);
  t.wg_gxkse2 = read_int(chr2(2263053:2263056,:), 1, count);
  t.wg_gxkse3 = read_int(chr2(2263057:2263060,:), 1, count);
  t.wg_gxkse4 = read_int(chr2(2263061:2263064,:), 1, count);
  t.wg_gxkse5 = read_int(chr2(2263065:2263068,:), 1, count);
  t.wg_gxkse6 = read_int(chr2(2263069:2263072,:), 1, count);
  t.wg_gxksp = read_int(chr2(2263073:2263076,:), 1, count);
  t.wg_gxkssf = read_int(chr2(2263077:2263080,:), 1, count);
  t.wg_gxksx1 = read_int(chr2(2263081:2263084,:), 1, count);
  t.wg_gxksx2 = read_int(chr2(2263085:2263088,:), 1, count);
  t.wg_gxksy1 = read_int(chr2(2263089:2263092,:), 1, count);
  t.wg_gxksy2 = read_int(chr2(2263093:2263096,:), 1, count);
  t.wg_gxksz1 = read_int(chr2(2263097:2263100,:), 1, count);
  t.wg_gxksz2 = read_int(chr2(2263101:2263104,:), 1, count);
  t.wg_gxrf2cfh = read_int(chr2(2263105:2263108,:), 1, count);
  t.wg_gxspoil = read_int(chr2(2263109:2263112,:), 1, count);
  t.wg_gxspoil2 = read_int(chr2(2263113:2263116,:), 1, count);
  t.wg_gxw = read_int(chr2(2263117:2263120,:), 1, count);
  t.wg_gxw1ftg = read_int(chr2(2263121:2263124,:), 1, count);
  t.wg_gxw1xtg = read_int(chr2(2263125:2263128,:), 1, count);
  t.wg_gxw2 = read_int(chr2(2263129:2263132,:), 1, count);
  t.wg_gxw2dtg = read_int(chr2(2263133:2263136,:), 1, count);
  t.wg_gxw2ftg = read_int(chr2(2263137:2263140,:), 1, count);
  t.wg_gxw2rs = read_int(chr2(2263141:2263144,:), 1, count);
  t.wg_gxwas = read_int(chr2(2263145:2263148,:), 1, count);
  t.wg_gxwdtg = read_int(chr2(2263149:2263152,:), 1, count);
  t.wg_gxwex = read_int(chr2(2263153:2263156,:), 1, count);
  t.wg_gxwmon = read_int(chr2(2263157:2263160,:), 1, count);
  t.wg_gxwmps1 = read_int(chr2(2263161:2263164,:), 1, count);
  t.wg_gxwrs = read_int(chr2(2263165:2263168,:), 1, count);
  t.wg_gy1 = read_int(chr2(2263169:2263172,:), 1, count);
  t.wg_gy1as = read_int(chr2(2263173:2263176,:), 1, count);
  t.wg_gy1cfh = read_int(chr2(2263177:2263180,:), 1, count);
  t.wg_gy1dtg = read_int(chr2(2263181:2263184,:), 1, count);
  t.wg_gy1mon = read_int(chr2(2263185:2263188,:), 1, count);
  t.wg_gy1mps1 = read_int(chr2(2263189:2263192,:), 1, count);
  t.wg_gy1r = read_int(chr2(2263193:2263196,:), 1, count);
  t.wg_gy1ras = read_int(chr2(2263197:2263200,:), 1, count);
  t.wg_gy1rdtg = read_int(chr2(2263201:2263204,:), 1, count);
  t.wg_gy1rrs = read_int(chr2(2263205:2263208,:), 1, count);
  t.wg_gy1rs = read_int(chr2(2263209:2263212,:), 1, count);
  t.wg_gy1tm = read_int(chr2(2263213:2263216,:), 1, count);
  t.wg_gy2dtg = read_int(chr2(2263217:2263220,:), 1, count);
  t.wg_gy2rs = read_int(chr2(2263221:2263224,:), 1, count);
  t.wg_gyb = read_int(chr2(2263225:2263228,:), 1, count);
  t.wg_gybrsfc1 = read_int(chr2(2263229:2263232,:), 1, count);
  t.wg_gybrsfc2 = read_int(chr2(2263233:2263236,:), 1, count);
  t.wg_gycylr = read_int(chr2(2263237:2263240,:), 1, count);
  t.wg_gycylra = read_int(chr2(2263241:2263244,:), 1, count);
  t.wg_gycylratipup = read_int(chr2(2263245:2263248,:), 1, count);
  t.wg_gycylrtipup = read_int(chr2(2263249:2263252,:), 1, count);
  t.wg_gyfe1 = read_int(chr2(2263253:2263256,:), 1, count);
  t.wg_gyfe2 = read_int(chr2(2263257:2263260,:), 1, count);
  t.wg_gyflpk = read_int(chr2(2263261:2263264,:), 1, count);
  t.wg_gyflpvenc = read_int(chr2(2263265:2263268,:), 1, count);
  t.wg_gyhyst1 = read_int(chr2(2263269:2263272,:), 1, count);
  t.wg_gyhyst2 = read_int(chr2(2263273:2263276,:), 1, count);
  t.wg_gykcfh = read_int(chr2(2263277:2263280,:), 1, count);
  t.wg_gykcfl = read_int(chr2(2263281:2263284,:), 1, count);
  t.wg_gykcs = read_int(chr2(2263285:2263288,:), 1, count);
  t.wg_gykfs = read_int(chr2(2263289:2263292,:), 1, count);
  t.wg_gykill = read_int(chr2(2263293:2263296,:), 1, count);
  t.wg_gykrcvn = read_int(chr2(2263297:2263300,:), 1, count);
  t.wg_gykse1 = read_int(chr2(2263301:2263304,:), 1, count);
  t.wg_gykse2 = read_int(chr2(2263305:2263308,:), 1, count);
  t.wg_gykse3 = read_int(chr2(2263309:2263312,:), 1, count);
  t.wg_gykse4 = read_int(chr2(2263313:2263316,:), 1, count);
  t.wg_gykse5 = read_int(chr2(2263317:2263320,:), 1, count);
  t.wg_gykse6 = read_int(chr2(2263321:2263324,:), 1, count);
  t.wg_gyksp = read_int(chr2(2263325:2263328,:), 1, count);
  t.wg_gykssf = read_int(chr2(2263329:2263332,:), 1, count);
  t.wg_gyksx1 = read_int(chr2(2263333:2263336,:), 1, count);
  t.wg_gyksx2 = read_int(chr2(2263337:2263340,:), 1, count);
  t.wg_gyksy1 = read_int(chr2(2263341:2263344,:), 1, count);
  t.wg_gyksy2 = read_int(chr2(2263345:2263348,:), 1, count);
  t.wg_gyksz1 = read_int(chr2(2263349:2263352,:), 1, count);
  t.wg_gyksz2 = read_int(chr2(2263353:2263356,:), 1, count);
  t.wg_gykxtgl = read_int(chr2(2263357:2263360,:), 1, count);
  t.wg_gykxtgr = read_int(chr2(2263361:2263364,:), 1, count);
  t.wg_gyrf0kcfh = read_int(chr2(2263365:2263368,:), 1, count);
  t.wg_gyrf1mon = read_int(chr2(2263369:2263372,:), 1, count);
  t.wg_gyrf1mps1 = read_int(chr2(2263373:2263376,:), 1, count);
  t.wg_gyrf1tm = read_int(chr2(2263377:2263380,:), 1, count);
  t.wg_gyrf1xtg = read_int(chr2(2263381:2263384,:), 1, count);
  t.wg_gyrf2cfh = read_int(chr2(2263385:2263388,:), 1, count);
  t.wg_gyrf2lmon = read_int(chr2(2263389:2263392,:), 1, count);
  t.wg_gyrf2rmon = read_int(chr2(2263393:2263396,:), 1, count);
  t.wg_gyrf3cfh = read_int(chr2(2263397:2263400,:), 1, count);
  t.wg_gyspoil = read_int(chr2(2263401:2263404,:), 1, count);
  t.wg_gyspoil2 = read_int(chr2(2263405:2263408,:), 1, count);
  t.wg_gz1 = read_int(chr2(2263409:2263412,:), 1, count);
  t.wg_gz1as = read_int(chr2(2263413:2263416,:), 1, count);
  t.wg_gz1cfl = read_int(chr2(2263417:2263420,:), 1, count);
  t.wg_gz1dtg = read_int(chr2(2263421:2263424,:), 1, count);
  t.wg_gz1ftg = read_int(chr2(2263425:2263428,:), 1, count);
  t.wg_gz1mon = read_int(chr2(2263429:2263432,:), 1, count);
  t.wg_gz1mps1 = read_int(chr2(2263433:2263436,:), 1, count);
  t.wg_gz1rs = read_int(chr2(2263437:2263440,:), 1, count);
  t.wg_gz1s = read_int(chr2(2263441:2263444,:), 1, count);
  t.wg_gz1xtg = read_int(chr2(2263445:2263448,:), 1, count);
  t.wg_gz2bftg = read_int(chr2(2263449:2263452,:), 1, count);
  t.wg_gz2ftg = read_int(chr2(2263453:2263456,:), 1, count);
  t.wg_gz2xtg = read_int(chr2(2263457:2263460,:), 1, count);
  t.wg_gz3ftg = read_int(chr2(2263461:2263464,:), 1, count);
  t.wg_gzbrsfc1 = read_int(chr2(2263465:2263468,:), 1, count);
  t.wg_gzbrsfc1echo1 = read_int(chr2(2263469:2263472,:), 1, count);
  t.wg_gzbrsfc1echo2 = read_int(chr2(2263473:2263476,:), 1, count);
  t.wg_gzbrsfc2 = read_int(chr2(2263477:2263480,:), 1, count);
  t.wg_gzcomb = read_int(chr2(2263481:2263484,:), 1, count);
  t.wg_gzcombhtr = read_int(chr2(2263485:2263488,:), 1, count);
  t.wg_gzcylr = read_int(chr2(2263489:2263492,:), 1, count);
  t.wg_gzcylra = read_int(chr2(2263493:2263496,:), 1, count);
  t.wg_gzcylratipup = read_int(chr2(2263497:2263500,:), 1, count);
  t.wg_gzcylrtipup = read_int(chr2(2263501:2263504,:), 1, count);
  t.wg_gzflpk = read_int(chr2(2263505:2263508,:), 1, count);
  t.wg_gzflpvenc = read_int(chr2(2263509:2263512,:), 1, count);
  t.wg_gzk = read_int(chr2(2263513:2263516,:), 1, count);
  t.wg_gzkas = read_int(chr2(2263517:2263520,:), 1, count);
  t.wg_gzkbsdtg = read_int(chr2(2263521:2263524,:), 1, count);
  t.wg_gzkbsrs = read_int(chr2(2263525:2263528,:), 1, count);
  t.wg_gzkcs = read_int(chr2(2263529:2263532,:), 1, count);
  t.wg_gzkdtg = read_int(chr2(2263533:2263536,:), 1, count);
  t.wg_gzkfs = read_int(chr2(2263537:2263540,:), 1, count);
  t.wg_gzkgir01 = read_int(chr2(2263541:2263544,:), 1, count);
  t.wg_gzkgir02 = read_int(chr2(2263545:2263548,:), 1, count);
  t.wg_gzkill = read_int(chr2(2263549:2263552,:), 1, count);
  t.wg_gzkiller = read_int(chr2(2263553:2263556,:), 1, count);
  t.wg_gzkmon = read_int(chr2(2263557:2263560,:), 1, count);
  t.wg_gzkmontipup = read_int(chr2(2263561:2263564,:), 1, count);
  t.wg_gzkrcvn = read_int(chr2(2263565:2263568,:), 1, count);
  t.wg_gzkrffrir = read_int(chr2(2263569:2263572,:), 1, count);
  t.wg_gzkrs = read_int(chr2(2263573:2263576,:), 1, count);
  t.wg_gzks = read_int(chr2(2263577:2263580,:), 1, count);
  t.wg_gzks5fp = read_int(chr2(2263581:2263584,:), 1, count);
  t.wg_gzksp = read_int(chr2(2263585:2263588,:), 1, count);
  t.wg_gzkssf = read_int(chr2(2263589:2263592,:), 1, count);
  t.wg_gzp = read_int(chr2(2263593:2263596,:), 1, count);
  t.wg_gzphtr = read_int(chr2(2263597:2263600,:), 1, count);
  t.wg_gzptm = read_int(chr2(2263601:2263604,:), 1, count);
  t.wg_gzrf0k = read_int(chr2(2263605:2263608,:), 1, count);
  t.wg_gzrf1 = read_int(chr2(2263609:2263612,:), 1, count);
  t.wg_gzrf1dtg = read_int(chr2(2263613:2263616,:), 1, count);
  t.wg_gzrf1htr = read_int(chr2(2263617:2263620,:), 1, count);
  t.wg_gzrf1mps1 = read_int(chr2(2263621:2263624,:), 1, count);
  t.wg_gzrf1rs = read_int(chr2(2263625:2263628,:), 1, count);
  t.wg_gzrf1s = read_int(chr2(2263629:2263632,:), 1, count);
  t.wg_gzrf1xtg = read_int(chr2(2263633:2263636,:), 1, count);
  t.wg_gzrf2lcfh = read_int(chr2(2263637:2263640,:), 1, count);
  t.wg_gzrf2lmps1 = read_int(chr2(2263641:2263644,:), 1, count);
  t.wg_gzrf2rcfh = read_int(chr2(2263645:2263648,:), 1, count);
  t.wg_gzrf2rmps1 = read_int(chr2(2263649:2263652,:), 1, count);
  t.wg_gzrf3lcfh = read_int(chr2(2263653:2263656,:), 1, count);
  t.wg_gzrf3rcfh = read_int(chr2(2263657:2263660,:), 1, count);
  t.wg_gzrf4cfh = read_int(chr2(2263661:2263664,:), 1, count);
  t.wg_gzrf4lcfh = read_int(chr2(2263665:2263668,:), 1, count);
  t.wg_gzrf4rcfh = read_int(chr2(2263669:2263672,:), 1, count);
  t.wg_gzrfs5fph = read_int(chr2(2263673:2263676,:), 1, count);
  t.wg_gzrfssfh = read_int(chr2(2263677:2263680,:), 1, count);
  t.wg_gzs5fphcomb = read_int(chr2(2263681:2263684,:), 1, count);
  t.wg_gzssfhcomb = read_int(chr2(2263685:2263688,:), 1, count);
  t.wg_hard180 = read_int(chr2(2263689:2263692,:), 1, count);
  t.wg_isi7 = read_int(chr2(2263693:2263696,:), 1, count);
  t.wg_isi_cardiacsat = read_int(chr2(2263697:2263700,:), 1, count);
  t.wg_isi_gir1 = read_int(chr2(2263701:2263704,:), 1, count);
  t.wg_isi_gire01 = read_int(chr2(2263705:2263708,:), 1, count);
  t.wg_isi_gire02 = read_int(chr2(2263709:2263712,:), 1, count);
  t.wg_isi_girk01 = read_int(chr2(2263713:2263716,:), 1, count);
  t.wg_isi_girk02 = read_int(chr2(2263717:2263720,:), 1, count);
  t.wg_isi_sate1 = read_int(chr2(2263721:2263724,:), 1, count);
  t.wg_isi_sate2 = read_int(chr2(2263725:2263728,:), 1, count);
  t.wg_isi_sate3 = read_int(chr2(2263729:2263732,:), 1, count);
  t.wg_isi_sate4 = read_int(chr2(2263733:2263736,:), 1, count);
  t.wg_isi_sate5 = read_int(chr2(2263737:2263740,:), 1, count);
  t.wg_isi_sate6 = read_int(chr2(2263741:2263744,:), 1, count);
  t.wg_isi_satek1 = read_int(chr2(2263745:2263748,:), 1, count);
  t.wg_isi_satek2 = read_int(chr2(2263749:2263752,:), 1, count);
  t.wg_isi_satek3 = read_int(chr2(2263753:2263756,:), 1, count);
  t.wg_isi_satek4 = read_int(chr2(2263757:2263760,:), 1, count);
  t.wg_isi_satek5 = read_int(chr2(2263761:2263764,:), 1, count);
  t.wg_isi_satek6 = read_int(chr2(2263765:2263768,:), 1, count);
  t.wg_isi_satx1 = read_int(chr2(2263769:2263772,:), 1, count);
  t.wg_isi_satx2 = read_int(chr2(2263773:2263776,:), 1, count);
  t.wg_isi_satxk1 = read_int(chr2(2263777:2263780,:), 1, count);
  t.wg_isi_satxk2 = read_int(chr2(2263781:2263784,:), 1, count);
  t.wg_isi_saty1 = read_int(chr2(2263785:2263788,:), 1, count);
  t.wg_isi_saty2 = read_int(chr2(2263789:2263792,:), 1, count);
  t.wg_isi_satyk1 = read_int(chr2(2263793:2263796,:), 1, count);
  t.wg_isi_satyk2 = read_int(chr2(2263797:2263800,:), 1, count);
  t.wg_isi_satz1 = read_int(chr2(2263801:2263804,:), 1, count);
  t.wg_isi_satz2 = read_int(chr2(2263805:2263808,:), 1, count);
  t.wg_isi_satzk1 = read_int(chr2(2263809:2263812,:), 1, count);
  t.wg_isi_satzk2 = read_int(chr2(2263813:2263816,:), 1, count);
  t.wg_isi_slice1 = read_int(chr2(2263817:2263820,:), 1, count);
  t.wg_isi_slice2 = read_int(chr2(2263821:2263824,:), 1, count);
  t.wg_maps1 = read_int(chr2(2263825:2263828,:), 1, count);
  t.wg_maps2 = read_int(chr2(2263829:2263832,:), 1, count);
  t.wg_mapx = read_int(chr2(2263833:2263836,:), 1, count);
  t.wg_mapy = read_int(chr2(2263837:2263840,:), 1, count);
  t.wg_mapz = read_int(chr2(2263841:2263844,:), 1, count);
  t.wg_mpomega_td0 = read_int(chr2(2263845:2263848,:), 1, count);
  t.wg_mprho_td0 = read_int(chr2(2263849:2263852,:), 1, count);
  t.wg_mpssp_td0 = read_int(chr2(2263853:2263856,:), 1, count);
  t.wg_mptheta_td0 = read_int(chr2(2263857:2263860,:), 1, count);
  t.wg_mpx_td0 = read_int(chr2(2263861:2263864,:), 1, count);
  t.wg_mpy_td0 = read_int(chr2(2263865:2263868,:), 1, count);
  t.wg_mpz_td0 = read_int(chr2(2263869:2263872,:), 1, count);
  t.wg_omega_hs_rfcssat = read_int(chr2(2263873:2263876,:), 1, count);
  t.wg_omega_ir0 = read_int(chr2(2263877:2263880,:), 1, count);
  t.wg_omega_rffrir = read_int(chr2(2263881:2263884,:), 1, count);
  t.wg_omega_rfgir01 = read_int(chr2(2263885:2263888,:), 1, count);
  t.wg_omega_rfgir02 = read_int(chr2(2263889:2263892,:), 1, count);
  t.wg_omegarf0cfh = read_int(chr2(2263893:2263896,:), 1, count);
  t.wg_postgxw1ftg = read_int(chr2(2263897:2263900,:), 1, count);
  t.wg_rcvn_wait = read_int(chr2(2263901:2263904,:), 1, count);
  t.wg_rf0 = read_int(chr2(2263905:2263908,:), 1, count);
  t.wg_rf0cfh = read_int(chr2(2263909:2263912,:), 1, count);
  t.wg_rf1 = read_int(chr2(2263913:2263916,:), 1, count);
  t.wg_rf180 = read_int(chr2(2263917:2263920,:), 1, count);
  t.wg_rf1as = read_int(chr2(2263921:2263924,:), 1, count);
  t.wg_rf1cfh = read_int(chr2(2263925:2263928,:), 1, count);
  t.wg_rf1cfl = read_int(chr2(2263929:2263932,:), 1, count);
  t.wg_rf1dtg = read_int(chr2(2263933:2263936,:), 1, count);
  t.wg_rf1ftg = read_int(chr2(2263937:2263940,:), 1, count);
  t.wg_rf1htr = read_int(chr2(2263941:2263944,:), 1, count);
  t.wg_rf1mon = read_int(chr2(2263945:2263948,:), 1, count);
  t.wg_rf1mps1 = read_int(chr2(2263949:2263952,:), 1, count);
  t.wg_rf1rs = read_int(chr2(2263953:2263956,:), 1, count);
  t.wg_rf1tm = read_int(chr2(2263957:2263960,:), 1, count);
  t.wg_rf1xtg = read_int(chr2(2263961:2263964,:), 1, count);
  t.wg_rf2cfh = read_int(chr2(2263965:2263968,:), 1, count);
  t.wg_rf2ftg = read_int(chr2(2263969:2263972,:), 1, count);
  t.wg_rf2mon = read_int(chr2(2263973:2263976,:), 1, count);
  t.wg_rf2mps1 = read_int(chr2(2263977:2263980,:), 1, count);
  t.wg_rf2xtg = read_int(chr2(2263981:2263984,:), 1, count);
  t.wg_rf3cfh = read_int(chr2(2263985:2263988,:), 1, count);
  t.wg_rf3ftg = read_int(chr2(2263989:2263992,:), 1, count);
  t.wg_rf3xtg = read_int(chr2(2263993:2263996,:), 1, count);
  t.wg_rf4cfh = read_int(chr2(2263997:2264000,:), 1, count);
  t.wg_rf4xtg = read_int(chr2(2264001:2264004,:), 1, count);
  t.wg_rf90 = read_int(chr2(2264005:2264008,:), 1, count);
  t.wg_rfbdtg = read_int(chr2(2264009:2264012,:), 1, count);
  t.wg_rfbrs = read_int(chr2(2264013:2264016,:), 1, count);
  t.wg_rfcssat = read_int(chr2(2264017:2264020,:), 1, count);
  t.wg_rfcylr = read_int(chr2(2264021:2264024,:), 1, count);
  t.wg_rfcylrtipup = read_int(chr2(2264025:2264028,:), 1, count);
  t.wg_rfflp180 = read_int(chr2(2264029:2264032,:), 1, count);
  t.wg_rfflp180_the = read_int(chr2(2264033:2264036,:), 1, count);
  t.wg_rfflp90 = read_int(chr2(2264037:2264040,:), 1, count);
  t.wg_rfflp90_the = read_int(chr2(2264041:2264044,:), 1, count);
  t.wg_rfflp90r = read_int(chr2(2264045:2264048,:), 1, count);
  t.wg_rfflp90r_the = read_int(chr2(2264049:2264052,:), 1, count);
  t.wg_rffrir = read_int(chr2(2264053:2264056,:), 1, count);
  t.wg_rffs = read_int(chr2(2264057:2264060,:), 1, count);
  t.wg_rfgir01 = read_int(chr2(2264061:2264064,:), 1, count);
  t.wg_rfgir02 = read_int(chr2(2264065:2264068,:), 1, count);
  t.wg_rfmontipup = read_int(chr2(2264069:2264072,:), 1, count);
  t.wg_rfs5fph = read_int(chr2(2264073:2264076,:), 1, count);
  t.wg_rfse1 = read_int(chr2(2264077:2264080,:), 1, count);
  t.wg_rfse2 = read_int(chr2(2264081:2264084,:), 1, count);
  t.wg_rfse3 = read_int(chr2(2264085:2264088,:), 1, count);
  t.wg_rfse4 = read_int(chr2(2264089:2264092,:), 1, count);
  t.wg_rfse5 = read_int(chr2(2264093:2264096,:), 1, count);
  t.wg_rfse6 = read_int(chr2(2264097:2264100,:), 1, count);
  t.wg_rfssf = read_int(chr2(2264101:2264104,:), 1, count);
  t.wg_rfssfh = read_int(chr2(2264105:2264108,:), 1, count);
  t.wg_rfsx1 = read_int(chr2(2264109:2264112,:), 1, count);
  t.wg_rfsx2 = read_int(chr2(2264113:2264116,:), 1, count);
  t.wg_rfsy1 = read_int(chr2(2264117:2264120,:), 1, count);
  t.wg_rfsy2 = read_int(chr2(2264121:2264124,:), 1, count);
  t.wg_rfsz1 = read_int(chr2(2264125:2264128,:), 1, count);
  t.wg_rfsz2 = read_int(chr2(2264129:2264132,:), 1, count);
  t.wg_rftipup = read_int(chr2(2264133:2264136,:), 1, count);
  t.wg_rot_slice1 = read_int(chr2(2264137:2264140,:), 1, count);
  t.wg_rot_slice2 = read_int(chr2(2264141:2264144,:), 1, count);
  t.wg_rot_update_cardiacsat = read_int(chr2(2264145:2264148,:), 1, count);
  t.wg_rot_update_e1 = read_int(chr2(2264149:2264152,:), 1, count);
  t.wg_rot_update_e2 = read_int(chr2(2264153:2264156,:), 1, count);
  t.wg_rot_update_e3 = read_int(chr2(2264157:2264160,:), 1, count);
  t.wg_rot_update_e4 = read_int(chr2(2264161:2264164,:), 1, count);
  t.wg_rot_update_e5 = read_int(chr2(2264165:2264168,:), 1, count);
  t.wg_rot_update_e6 = read_int(chr2(2264169:2264172,:), 1, count);
  t.wg_rot_update_ek1 = read_int(chr2(2264173:2264176,:), 1, count);
  t.wg_rot_update_ek2 = read_int(chr2(2264177:2264180,:), 1, count);
  t.wg_rot_update_ek3 = read_int(chr2(2264181:2264184,:), 1, count);
  t.wg_rot_update_ek4 = read_int(chr2(2264185:2264188,:), 1, count);
  t.wg_rot_update_ek5 = read_int(chr2(2264189:2264192,:), 1, count);
  t.wg_rot_update_ek6 = read_int(chr2(2264193:2264196,:), 1, count);
  t.wg_rot_update_gir = read_int(chr2(2264197:2264200,:), 1, count);
  t.wg_rot_update_gire01 = read_int(chr2(2264201:2264204,:), 1, count);
  t.wg_rot_update_girk01 = read_int(chr2(2264205:2264208,:), 1, count);
  t.wg_rot_update_girk02 = read_int(chr2(2264209:2264212,:), 1, count);
  t.wg_rot_update_rfgir02 = read_int(chr2(2264213:2264216,:), 1, count);
  t.wg_rot_update_x1 = read_int(chr2(2264217:2264220,:), 1, count);
  t.wg_rot_update_x2 = read_int(chr2(2264221:2264224,:), 1, count);
  t.wg_rot_update_xk1 = read_int(chr2(2264225:2264228,:), 1, count);
  t.wg_rot_update_xk2 = read_int(chr2(2264229:2264232,:), 1, count);
  t.wg_rot_update_y1 = read_int(chr2(2264233:2264236,:), 1, count);
  t.wg_rot_update_y2 = read_int(chr2(2264237:2264240,:), 1, count);
  t.wg_rot_update_yk1 = read_int(chr2(2264241:2264244,:), 1, count);
  t.wg_rot_update_yk2 = read_int(chr2(2264245:2264248,:), 1, count);
  t.wg_rot_update_z1 = read_int(chr2(2264249:2264252,:), 1, count);
  t.wg_rot_update_z2 = read_int(chr2(2264253:2264256,:), 1, count);
  t.wg_rot_update_zk1 = read_int(chr2(2264257:2264260,:), 1, count);
  t.wg_rot_update_zk2 = read_int(chr2(2264261:2264264,:), 1, count);
  t.wg_rticfh = read_int(chr2(2264265:2264268,:), 1, count);
  t.wg_sdixon = read_int(chr2(2264269:2264272,:), 1, count);
  t.wg_sdixon2 = read_int(chr2(2264273:2264276,:), 1, count);
  t.wg_sticfh = read_int(chr2(2264277:2264280,:), 1, count);
  t.wg_thcylr = read_int(chr2(2264281:2264284,:), 1, count);
  t.wg_thcylrtipup = read_int(chr2(2264285:2264288,:), 1, count);
  t.wg_thetarfbdtg = read_int(chr2(2264289:2264292,:), 1, count);
  t.wg_thetarfbrs = read_int(chr2(2264293:2264296,:), 1, count);
  t.wg_xdelay = read_int(chr2(2264297:2264300,:), 1, count);
  t.wg_xdixon = read_int(chr2(2264301:2264304,:), 1, count);
  t.wg_xrespgate = read_int(chr2(2264305:2264308,:), 1, count);
  t.wg_xticfh = read_int(chr2(2264309:2264312,:), 1, count);
  t.wg_y_ccs_null = read_int(chr2(2264313:2264316,:), 1, count);
  t.wg_ydixon = read_int(chr2(2264317:2264320,:), 1, count);
  t.wg_yticfh = read_int(chr2(2264321:2264324,:), 1, count);
  t.wg_zdixon = read_int(chr2(2264325:2264328,:), 1, count);
  t.wg_zticfh = read_int(chr2(2264329:2264332,:), 1, count);
  t.whichss = read_int(chr2(2264333:2264336,:), 1, count);
  t.write_spinfo = read_int(chr2(2264337:2264340,:), 1, count);
  t.xa2s = read_float(chr2(2264341:2264344,:), 1, count);
  t.xfd_power_limit = read_float(chr2(2264345:2264348,:), 1, count);
  t.xfd_temp_limit = read_float(chr2(2264349:2264352,:), 1, count);
  t.xgd_optimization = read_int(chr2(2264353:2264356,:), 1, count);
  t.xkiller_set = read_int(chr2(2264357:2264360,:), 1, count);
  t.xlFOV_flag = read_int(chr2(2264361:2264364,:), 1, count);
  t.xmtadd = read_float(chr2(2264365:2264368,:), 1, count);
  t.xmtaddAPS1 = read_float(chr2(2264369:2264372,:), 1, count);
  t.xmtaddCFH = read_float(chr2(2264373:2264376,:), 1, count);
  t.xmtaddCFL = read_float(chr2(2264377:2264380,:), 1, count);
  t.xmtaddFTG = read_float(chr2(2264381:2264384,:), 1, count);
  t.xmtaddRCVN = read_float(chr2(2264385:2264388,:), 1, count);
  t.xmtaddRef = read_float(chr2(2264389:2264392,:), 1, count);
  t.xmtaddScan = read_float(chr2(2264393:2264396,:), 1, count);
  t.xmtaddXTG = read_float(chr2(2264397:2264400,:), 1, count);
  t.xmtaddas = read_float(chr2(2264401:2264404,:), 1, count);
  t.xmtadddtg = read_float(chr2(2264405:2264408,:), 1, count);
  t.xmtaddrs = read_float(chr2(2264409:2264412,:), 1, count);
  t.xmtlogas = read_float(chr2(2264413:2264416,:), 1, count);
  t.xres = read_int(chr2(2264417:2264420,:), 1, count);
  t.xres2use = read_int(chr2(2264421:2264424,:), 1, count);
  t.xres_ann_off = read_int(chr2(2264425:2264428,:), 1, count);
  t.xres_ann_on = read_int(chr2(2264429:2264432,:), 1, count);
  t.xtg_dda = read_int(chr2(2264433:2264436,:), 1, count);
  t.xtg_disabled = read_int(chr2(2264437:2264440,:), 1, count);
  t.xtg_offres_freq = read_int(chr2(2264441:2264444,:), 1, count);
  t.xtg_volRecCoil = read_int(chr2(2264445:2264448,:), 1, count);
  t.xtgscale = read_float(chr2(2264449:2264452,:), 1, count);
  t.xtgtr = read_int(chr2(2264453:2264456,:), 1, count);
  t.xtr_offset = read_int(chr2(2264457:2264460,:), 1, count);
  t.ya2s = read_float(chr2(2264461:2264464,:), 1, count);
  t.yfe_time = read_int(chr2(2264465:2264468,:), 1, count);
  t.yfov_aspect = read_float(chr2(2264469:2264472,:), 1, count);
  t.yoffs1 = read_int(chr2(2264473:2264476,:), 1, count);
  t.yres_phase = read_int(chr2(2264477:2264480,:), 1, count);
  t.za2s = read_float(chr2(2264481:2264484,:), 1, count);
  t.zchop = read_int(chr2(2264485:2264488,:), 1, count);
  t.zgmn_type = read_int(chr2(2264489:2264492,:), 1, count);
  t.zkiller_flag = read_int(chr2(2264493:2264496,:), 1, count);
  t.zoffs = read_int(chr2(2264497:2264500,:), 1, count);
  t.zoffs1 = read_int(chr2(2264501:2264504,:), 1, count);
  t.zrewind_flag = read_int(chr2(2264505:2264508,:), 1, count);
  t.zsign = read_int(chr2(2264509:2264512,:), 1, count);
  t.zslab = read_float(chr2(2264513:2264516,:), 1, count);
  t.zy_export_debug_files = read_int(chr2(2264517:2264520,:), 1, count);
  t.zy_slices = read_int(chr2(2264521:2264524,:), 1, count);
  t.zy_views = read_int(chr2(2264525:2264528,:), 1, count);

